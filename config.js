export let config = {
    language:{
      "definitions": [
          {
              "name": "program",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "defs"
                  }
              ]
          },
          {
              "name": "defs",
              "list_of": [
                  {
                      "type": "non_terminal",
                      "name": "def"
                  }
              ]
          },
          {
              "name": "stmts",
              "list_of": [
                  {
                      "type": "non_terminal",
                      "name": "stmt"
                  }
              ]
          },
          {
              "name": "stmt",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "if_stmt",
                      "tooltip": "Do something if a condition is true"
                  },
                  {
                      "type": "non_terminal",
                      "name": "if_else_stmt",
                      "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                      "type": "non_terminal",
                      "name": "while_stmt",
                      "tooltip": "Do something while a condition is true"
                  },
                  {
                      "type": "non_terminal",
                      "name": "for_stmt",
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                      "type": "non_terminal",
                      "name": "repeat_stmt",
                      "tooltip": "Repeat the stmts, certain times"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                  },
                  {
                      "type": "non_terminal",
                      "name": "turtle_functions",
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                      "type": "non_terminal",
                      "name": "widgets",
                      "tooltip": "Create,change and add event handlers to ui elements such as buttons, textfields etc"
                  },
                  {
                      "type": "non_terminal",
                      "name": "ternary_stmt",
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                      "type": "non_terminal",
                      "name": "break_stmt",
                      "tooltip": "Exit from the current loop"
                  },
                  {
                      "type": "non_terminal",
                      "name": "continue_stmt",
                      "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                      "type": "non_terminal",
                      "name": "return_stmt",
                      "tooltip": "Return an expression as the result of the current function"
                  }
              ]
          },
          {
              "name": "def",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "stmt"
                  },
                  {
                      "type": "non_terminal",
                      "name": "func_definition",
                      "tooltip": "Define reusable code as a function"
                  }
              ]
          },
          {
              "name": "expr",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "arith_expr",
                      "tooltip": "Perform a mathematic operation"
                  },
                  {
                      "type": "non_terminal",
                      "name": "rel_expr",
                      "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                      "type": "non_terminal",
                      "name": "logical_expr",
                      "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                      "type": "non_terminal",
                      "name": "assign_expr",
                      "tooltip": "Set a variable's value"
                  },
                  {
                      "type": "non_terminal",
                      "name": "call_expr",
                      "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                      "type": "non_terminal",
                      "name": "ternary_stmt",
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "tooltip": "An identifier or a constant"
                  }
              ]
          },
          {
              "name": "arith_expr",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "binary_arith_expr",
                      "tooltip": "An arithmetic expression with two operands"
                  },
                  {
                      "type": "non_terminal",
                      "name": "unary_expr",
                      "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  }
              ]
          },
          {
              "name": "binary_arith_expr",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The first operand"
                  },
                  {
                      "type": "non_terminal",
                      "name": "arith_op",
                      "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The second operand"
                  }
              ]
          },
          {
              "name": "unary_expr",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "unary_expr_before",
                      "tooltip": "The unary operator before the operand"
                  },
                  {
                      "type": "non_terminal",
                      "name": "unary_expr_after",
                      "tooltip": "The unary operator after the operand"
                  }
              ]
          },
          {
              "name": "unary_expr_after",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The single operand"
                  },
                  {
                      "type": "non_terminal",
                      "name": "unary_op_af",
                      "tooltip": "Unary operator with one operand"
                  }
              ]
          },
          {
              "name": "unary_expr_before",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "unary_op_bf",
                      "tooltip": "Unary operator with one operand"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The single operand"
                  }
              ]
          },
          {
              "name": "unary_op_af",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "PLUS_PLUS",
                      "alias": "++",
                      "tooltip": "Post-increament of the operand value by one"
                  },
                  {
                      "type": "terminal",
                      "name": "SUB_SUB",
                      "alias": "--",
                      "tooltip": "Post-decreament of the operand value by one"
                  }
              ]
          },
          {
              "name": "unary_op_bf",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "UMINUS",
                      "alias": "-",
                      "tooltip": "Negates the value of its operand"
                  },
                  {
                      "type": "terminal",
                      "name": "UPLUS",
                      "alias": "+",
                      "tooltip": "Attempts to convert the operand to a number, if it is not already"
                  },
                  {
                      "type": "terminal",
                      "name": "PLUS_PLUS",
                      "alias": "++",
                      "tooltip": "Pre-increament of the operand value by one"
                  },
                  {
                      "type": "terminal",
                      "name": "SUB_SUB",
                      "alias": "--",
                      "tooltip": "Pre-decreament of the operand value by one"
                  }
              ]
          },
          {
              "name": "arith_op",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "PLUS",
                      "alias": "+",
                      "tooltip": "Performs addition"
                  },
                  {
                      "type": "terminal",
                      "name": "SUB",
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                  },
                  {
                      "type": "terminal",
                      "name": "MULT",
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                  },
                  {
                      "type": "terminal",
                      "name": "EXP",
                      "alias": "**",
                      "tooltip": "Performs exponentation"
                  },
                  {
                      "type": "terminal",
                      "name": "DIV",
                      "alias": "/",
                      "tooltip": "Performs division"
                  },
                  {
                      "type": "terminal",
                      "name": "MODULO",
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                  }
              ]
          },
          {
              "name": "rel_expr",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The first operand"
                  },
                  {
                      "type": "non_terminal",
                      "name": "rel_op",
                      "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The second operand"
                  }
              ]
          },
          {
              "name": "rel_op",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "GREATER",
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "LESS",
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "EQUAL_TO",
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "EQUAL_VALUE_TYPE",
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "NOT_EQUAL_TO",
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "NOT_EQUAL_VALUE_TYPE",
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "GREATER_EQUAL",
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "LESS_EQUAL",
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                  }
              ]
          },
          {
              "name": "logical_expr",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "binary_logical_expr",
                      "tooltip": "Performs a binary operation with two operands"
                  },
                  {
                      "type": "non_terminal",
                      "name": "not_expr",
                      "tooltip": "Performs logical negation. True becomes false and false becomes true"
                  }
              ]
          },
          {
              "name": "binary_logical_expr",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The first operand"
                  },
                  {
                      "type": "non_terminal",
                      "name": "logical_binary_op",
                      "tooltip": "Performs a binary operation with two operands"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The second operand"
                  }
              ]
          },
          {
              "name": "logical_binary_op",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "AND",
                      "alias": "&&",
                      "tooltip": "Returns true if both operands are true, else returns false"
                  },
                  {
                      "type": "terminal",
                      "name": "OR",
                      "alias": "||",
                      "tooltip": "Returns true if either operand is true, else returns false"
                  }
              ]
          },
          {
              "name": "not_expr",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "NOT",
                      "alias": "!",
                      "tooltip": "Returns true if the operand is false, else returns false"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "The operand"
                  }
              ]
          },
          {
              "name": "variable",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "tooltip": "Identifier without type. If the variable is not declared, it is automatically declared with var"
                  },
                  {
                      "type": "non_terminal",
                      "name": "ident_type",
                      "tooltip": "Identifier with type"
                  }
              ]
          },
          {
              "name": "ident_type",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "types"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "tooltip": "Select type of identifier"
                  }
              ]
          },
          {
              "name": "types",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "var",
                      "tooltip": "The scope of a var variable is functional scope"
                  },
                  {
                      "type": "terminal",
                      "name": "let",
                      "tooltip": "The scope of a let variable is block scope"
                  },
                  {
                      "type": "terminal",
                      "name": "const",
                      "tooltip": "The scope of a const variable is block scope"
                  }
              ]
          },
          {
              "name": "primary_expr",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "variable",
                      "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                      "type": "non_terminal",
                      "name": "consts",
                      "tooltip": "All const values"
                  },
                  {
                      "type": "non_terminal",
                      "name": "keys",
                      "tooltip": "All keyboard keys"
                  },
                  {
                      "type": "non_terminal",
                      "name": "object_get",
                      "tooltip": "Get an element of an object by its property name"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_get",
                      "tooltip": "Get an element of an array by its position"
                  },
                  {
                      "type": "non_terminal",
                      "name": "new_array",
                      "tooltip": "Define a new array"
                  },
                  {
                      "type": "non_terminal",
                      "name": "new_object",
                      "tooltip": "Define a new object"
                  },
                  {
                      "type": "non_terminal",
                      "name": "func_definition",
                      "tooltip": "Define reusable code as a function"
                  }
              ]
          },
          {
              "name": "consts",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                  },
                  {
                      "type": "terminal",
                      "name": "FLOAT_CONST",
                      "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                  },
                  {
                      "type": "terminal",
                      "name": "CHAR_CONST",
                      "tooltip": "One single character"
                  },
                  {
                      "type": "terminal",
                      "name": "STRING_CONST",
                      "tooltip": "Any sequence of characters or the empty sequence"
                  },
                  {
                      "type": "non_terminal",
                      "name": "BOOLEAN_CONST",
                      "tooltip": "One of true or false"
                  },
                  {
                      "type": "non_terminal",
                      "name": "ARRAY_CONST",
                      "tooltip": "An array of elements"
                  },
                  {
                      "type": "non_terminal",
                      "name": "OBJECT_CONST",
                      "tooltip": "Variable with many values as pairs (name:value)"
                  }
              ]
          },
          {
              "name": "BOOLEAN_CONST",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "true"
                  },
                  {
                      "type": "terminal",
                      "name": "false"
                  }
              ]
          },
          {
              "name": "new_array",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "array name"
                  },
                  {
                      "type": "terminal",
                      "name": "ASSIGN",
                      "alias": "="
                  },
                  {
                      "type": "non_terminal",
                      "name": "ARRAY_CONST"
                  }
              ]
          },
          {
              "name": "ARRAY_CONST",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "LSB",
                      "alias": "["
                  },
                  {
                      "type": "non_terminal",
                      "name": "element_list"
                  },
                  {
                      "type": "terminal",
                      "name": "RSB",
                      "alias": "]"
                  }
              ]
          },
          {
              "name": "element_list",
              "list_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "element"
                  }
              ]
          },
          {
              "name": "new_object",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "object name"
                  },
                  {
                      "type": "terminal",
                      "name": "ASSIGN",
                      "alias": "="
                  },
                  {
                      "type": "non_terminal",
                      "name": "OBJECT_CONST"
                  }
              ]
          },
          {
              "name": "OBJECT_CONST",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "pair_element_list"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  }
              ]
          },
          {
              "name": "pair_element_list",
              "list_of": [
                  {
                      "type": "non_terminal",
                      "name": "pair_element"
                  }
              ]
          },
          {
              "name": "pair_element",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "tooltip": "The identifier of the value"
                  },
                  {
                      "type": "terminal",
                      "name": "COLON",
                      "alias": ":",
                      "tooltip": "The pair"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "value",
                      "tooltip": "The value of the property"
                  }
              ]
          },
          {
              "name": "assign_expr",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "tooltip": "Left operand to be assigned"
                  },
                  {
                      "type": "non_terminal",
                      "name": "assign_op",
                      "tooltip": "Assign operator, simple or with an operation "
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "tooltip": "Right operand"
                  }
              ]
          },
          {
              "name": "assign_op",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "ASSIGN",
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                  },
                  {
                      "type": "terminal",
                      "name": "PLUS_ASSIGN",
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                  },
                  {
                      "type": "terminal",
                      "name": "SUB_ASSIGN",
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                  },
                  {
                      "type": "terminal",
                      "name": "MULT_ASSIGN",
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                  },
                  {
                      "type": "terminal",
                      "name": "DIV_ASSIGN",
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                  },
                  {
                      "type": "terminal",
                      "name": "MOD_ASSIGN",
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                  },
                  {
                      "type": "terminal",
                      "name": "EXP_ASSIGN",
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                  }
              ]
          },
          {
              "name": "func_definition",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "named_func",
                      "tooltip": "Define a named function"
                  },
                  {
                      "type": "non_terminal",
                      "name": "anonymous_func",
                      "tooltip": "Define an anonymous function"
                  }
              ]
          },
          {
              "name": "named_func",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "function"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "name"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "ident_list"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  },
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  }
              ]
          },
          {
              "name": "anonymous_func",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "function"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "ident_list"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  },
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  }
              ]
          },
          {
              "name": "break_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "break"
                  }
              ]
          },
          {
              "name": "continue_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "continue"
                  }
              ]
          },
          {
              "name": "return_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "return"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr"
                  }
              ]
          },
          {
              "name": "call_expr",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "math_call",
                      "tooltip": "Use a built-in math function"
                  },
                  {
                      "type": "non_terminal",
                      "name": "string_method_call",
                      "tooltip": "Use a built-in string method"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_method_call",
                      "tooltip": "Use a built-in array method"
                  },
                  {
                      "type": "non_terminal",
                      "name": "object_method_call",
                      "tooltip": "Use a built-in object method"
                  },
                  {
                      "type": "non_terminal",
                      "name": "function_call",
                      "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                      "type": "non_terminal",
                      "name": "print_call",
                      "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                      "type": "non_terminal",
                      "name": "output_color",
                      "tooltip": "Change the color of the text in the output console"
                  },
                  {
                      "type": "non_terminal",
                      "name": "input",
                      "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                  },
                  {
                      "type": "non_terminal",
                      "name": "key_event",
                      "tooltip": "Add and remove event listener for a key of your choice"
                  },
                  {
                      "type": "non_terminal",
                      "name": "type_of",
                      "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
              ]
          },
          {
              "name": "math_call",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "math_abs",
                      "alias": "abs",
                      "tooltip": "Returns the absolute value of a number"
                  },
                  {
                      "type": "non_terminal",
                      "name": "math_pow",
                      "alias": "pow",
                      "tooltip": "Returns base x to the exponent power y (that is, x^y)"
                  },
                  {
                      "type": "non_terminal",
                      "name": "math_sqrt",
                      "alias": "sqrt",
                      "tooltip": "Get the square root of a number"
                  },
                  {
                      "type": "non_terminal",
                      "name": "math_round",
                      "alias": "round",
                      "tooltip": "Get the nearest integer to the given number"
                  },
                  {
                      "type": "non_terminal",
                      "name": "math_floor",
                      "alias": "floor",
                      "tooltip": "Get the greatest integer less than or equal to the given number"
                  },
                  {
                      "type": "non_terminal",
                      "name": "math_ceil",
                      "alias": "ceil",
                      "tooltip": "Get the least integer greater than or equal to the given number"
                  },
                  {
                      "type": "non_terminal",
                      "name": "math_sin",
                      "alias": "sin",
                      "tooltip": "Get the sine of the given angle in degrees"
                  },
                  {
                      "type": "non_terminal",
                      "name": "math_cos",
                      "alias": "cos",
                      "tooltip": "Get the cosine of the given angle in degrees"
                  }
              ]
          },
          {
              "name": "math_abs",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "abs"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "value"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "math_pow",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "pow"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "number"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "exponent"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "math_sqrt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "sqrt"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "number"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "math_round",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "round"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "number"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "math_floor",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "floor"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "number"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "math_ceil",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "ceil"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "number"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "math_sin",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "sin"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "number"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "math_cos",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "Math"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "cos"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "number"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "string_method_call",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "string"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "non_terminal",
                      "name": "string_method"
                  }
              ]
          },
          {
              "name": "string_method",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "string_concat",
                      "alias": "concat",
                      "tooltip": "Join two strings to one"
                  },
                  {
                      "type": "non_terminal",
                      "name": "string_upperCase",
                      "alias": "toUpperCase",
                      "tooltip": "A string is converted to upper case"
                  },
                  {
                      "type": "non_terminal",
                      "name": "string_lowCase",
                      "alias": "toLowCase",
                      "tooltip": "A string is converted to lower case"
                  },
                  {
                      "type": "non_terminal",
                      "name": "string_substring",
                      "alias": "substring",
                      "tooltip": "Get a substring of a string, giving a start position and an end position"
                  },
                  {
                      "type": "non_terminal",
                      "name": "string_size",
                      "alias": "length",
                      "tooltip": "Get the count of characters contained in the string"
                  },
                  {
                      "type": "non_terminal",
                      "name": "string_slice",
                      "alias": "slice",
                      "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                  }
              ]
          },
          {
              "name": "string_concat",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "concat"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "string2"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "string_upperCase",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "toUpperCase"
                  },
                  {
                      "type": "terminal",
                      "name": "PARENTH_CALL",
                      "alias": "()"
                  }
              ]
          },
          {
              "name": "string_lowCase",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "toLowerCase"
                  },
                  {
                      "type": "terminal",
                      "name": "PARENTH_CALL",
                      "alias": "()"
                  }
              ]
          },
          {
              "name": "string_substring",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "substring"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "start_index"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "end_index"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "string_size",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "length"
                  }
              ]
          },
          {
              "name": "string_slice",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "slice"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "start_index"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "end_index"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "array_method_call",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "array_get",
                      "alias": "get",
                      "tooltip": "Get an element by its position in the array"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_set",
                      "alias": "set",
                      "tooltip": "Modify an element in a position of the array to a new value"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_push",
                      "alias": "push",
                      "tooltip": "Insert an element at the end of the array"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_pop",
                      "alias": "pop",
                      "tooltip": "Returns the last element of the array"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_size",
                      "alias": "length",
                      "tooltip": "Get the number of elements in the array"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_join",
                      "alias": "join",
                      "tooltip": "Joins all array elements into a string, you can specify the separator"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_to_string",
                      "alias": "tostring",
                      "tooltip": "Converts an array to a string of (comma separated) array values"
                  }
              ]
          },
          {
              "name": "array_get",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "arrayName"
                  },
                  {
                      "type": "terminal",
                      "name": "LSB",
                      "alias": "["
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "index"
                  },
                  {
                      "type": "terminal",
                      "name": "RSB",
                      "alias": "]"
                  }
              ]
          },
          {
              "name": "array_push",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "arrayName"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "push"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "element"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "array_pop",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "arrayName"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "pop"
                  },
                  {
                      "type": "terminal",
                      "name": "PARENTH_CALL",
                      "alias": "()"
                  }
              ]
          },
          {
              "name": "array_set",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "arrayName"
                  },
                  {
                      "type": "terminal",
                      "name": "LSB",
                      "alias": "["
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "index"
                  },
                  {
                      "type": "terminal",
                      "name": "RSB",
                      "alias": "]"
                  },
                  {
                      "type": "terminal",
                      "name": "ASSIGN",
                      "alias": "="
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "element"
                  }
              ]
          },
          {
              "name": "array_size",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "arrayName"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "length"
                  }
              ]
          },
          {
              "name": "array_join",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "arrayName"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "join"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "seperator"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "array_to_string",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "arrayName"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "tostring"
                  },
                  {
                      "type": "terminal",
                      "name": "PARENTH_CALL",
                      "alias": "()"
                  }
              ]
          },
          {
              "name": "object_method_call",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "object_get",
                      "alias": "get",
                      "tooltip": "Get an element by its property name in the object e.g objectName.property or objectName[property]"
                  },
                  {
                      "type": "non_terminal",
                      "name": "object_delete",
                      "alias": "delete",
                      "tooltip": "Delete a pair (property:value) by property name"
                  },
                  {
                      "type": "non_terminal",
                      "name": "object_set",
                      "alias": "set",
                      "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair (property:value) will be added in the object"
                  },
                  {
                      "type": "non_terminal",
                      "name": "object_size",
                      "alias": "length",
                      "tooltip": "Get the count of properties in the object"
                  }
              ]
          },
          {
              "name": "object_get",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "object_get_dot",
                      "tooltip": "Get with syntax objectName.property, property as ident"
                  },
                  {
                      "type": "non_terminal",
                      "name": "object_get_sq",
                      "tooltip": "Get with syntax objectName[\"property\"], property as string"
                  }
              ]
          },
          {
              "name": "object_get_dot",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "object name"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "property"
                  }
              ]
          },
          {
              "name": "object_get_sq",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "object name"
                  },
                  {
                      "type": "terminal",
                      "name": "LSB",
                      "alias": "["
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "property"
                  },
                  {
                      "type": "terminal",
                      "name": "RSB",
                      "alias": "]"
                  }
              ]
          },
          {
              "name": "object_delete",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "delete"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "object name"
                  },
                  {
                      "type": "terminal",
                      "name": "LSB",
                      "alias": "["
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "property"
                  },
                  {
                      "type": "terminal",
                      "name": "RSB",
                      "alias": "]"
                  }
              ]
          },
          {
              "name": "object_set",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "object name"
                  },
                  {
                      "type": "terminal",
                      "name": "LSB",
                      "alias": "["
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "property"
                  },
                  {
                      "type": "terminal",
                      "name": "RSB",
                      "alias": "]"
                  },
                  {
                      "type": "terminal",
                      "name": "ASSIGN",
                      "alias": "="
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "value"
                  }
              ]
          },
          {
              "name": "object_size",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "object name"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "length"
                  }
              ]
          },
          {
              "name": "callee",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "tooltip": "Name of a defined function"
                  },
                  {
                      "type": "non_terminal",
                      "name": "object_function",
                      "tooltip": "Name of a function which is member of an object"
                  },
                  {
                      "type": "non_terminal",
                      "name": "array_function",
                      "tooltip": "Name of a function which is member of an array"
                  },
                  {
                      "type": "non_terminal",
                      "name": "function_call",
                      "tooltip": "To call nested functions"
                  },
                  {
                      "type": "non_terminal",
                      "name": "func_definition",
                      "tooltip": "To call a function, the time you define it"
                  }
              ]
          },
          {
              "name": "object_function",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "object name"
                  },
                  {
                      "type": "terminal",
                      "name": "DOT",
                      "alias": "."
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "function name"
                  }
              ]
          },
          {
              "name": "array_function",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "array name"
                  },
                  {
                      "type": "terminal",
                      "name": "LSB",
                      "alias": "["
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "index"
                  },
                  {
                      "type": "terminal",
                      "name": "RSB",
                      "alias": "]"
                  }
              ]
          },
          {
              "name": "function_call",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "callee",
                      "alias": "function name"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr_list"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "print_call",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "console.log"
                  },
                  {
                      "type": "non_terminal",
                      "name": "color"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr_list"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "output_color",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "set_console_color"
                  },
                  {
                      "type": "non_terminal",
                      "name": "color",
                      "tooltip": "Change the color of the text in the output console"
                  }
              ]
          },
          {
              "name": "input",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "prompt"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "terminal",
                      "name": "STRING_CONST",
                      "alias": "prompt_message"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  }
              ]
          },
          {
              "name": "key_event",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "add_key_press",
                      "tooltip": "Do something when a keyboard key of your choice is pressed"
                  },
                  {
                      "type": "non_terminal",
                      "name": "remove_key_press",
                      "tooltip": "Remove the event listener from a key, you should have assigned it to a variable"
                  }
              ]
          },
          {
              "name": "add_key_press",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "add_on_key_press"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "key"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts",
                      "alias": "event"
                  }
              ]
          },
          {
              "name": "remove_key_press",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "remove_on_key_press"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "listener"
                  }
              ]
          },
          {
              "name": "keys",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "Escape"
                  },
                  {
                      "type": "terminal",
                      "name": "F1"
                  },
                  {
                      "type": "terminal",
                      "name": "F2"
                  },
                  {
                      "type": "terminal",
                      "name": "F3"
                  },
                  {
                      "type": "terminal",
                      "name": "F4"
                  },
                  {
                      "type": "terminal",
                      "name": "F5"
                  },
                  {
                      "type": "terminal",
                      "name": "F6"
                  },
                  {
                      "type": "terminal",
                      "name": "F7"
                  },
                  {
                      "type": "terminal",
                      "name": "F8"
                  },
                  {
                      "type": "terminal",
                      "name": "F9"
                  },
                  {
                      "type": "terminal",
                      "name": "F10"
                  },
                  {
                      "type": "terminal",
                      "name": "F11"
                  },
                  {
                      "type": "terminal",
                      "name": "F12"
                  },
                  {
                      "type": "terminal",
                      "name": "ScrollLock"
                  },
                  {
                      "type": "terminal",
                      "name": "Pause"
                  },
                  {
                      "type": "terminal",
                      "name": "Insert"
                  },
                  {
                      "type": "terminal",
                      "name": "Backquote"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit0"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit1"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit2"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit3"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit4"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit5"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit6"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit7"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit8"
                  },
                  {
                      "type": "terminal",
                      "name": "Digit9"
                  },
                  {
                      "type": "terminal",
                      "name": "Minus"
                  },
                  {
                      "type": "terminal",
                      "name": "Equal"
                  },
                  {
                      "type": "terminal",
                      "name": "Backspace"
                  },
                  {
                      "type": "terminal",
                      "name": "End"
                  },
                  {
                      "type": "terminal",
                      "name": "Home"
                  },
                  {
                      "type": "terminal",
                      "name": "Tab"
                  },
                  {
                      "type": "terminal",
                      "name": "BracketLeft"
                  },
                  {
                      "type": "terminal",
                      "name": "BracketRight"
                  },
                  {
                      "type": "terminal",
                      "name": "Backslash"
                  },
                  {
                      "type": "terminal",
                      "name": "CapsLock"
                  },
                  {
                      "type": "terminal",
                      "name": "Semicolon"
                  },
                  {
                      "type": "terminal",
                      "name": "Quote"
                  },
                  {
                      "type": "terminal",
                      "name": "Enter"
                  },
                  {
                      "type": "terminal",
                      "name": "ShiftLeft"
                  },
                  {
                      "type": "terminal",
                      "name": "Comma"
                  },
                  {
                      "type": "terminal",
                      "name": "Period"
                  },
                  {
                      "type": "terminal",
                      "name": "Slash"
                  },
                  {
                      "type": "terminal",
                      "name": "ShiftRight"
                  },
                  {
                      "type": "terminal",
                      "name": "ControlLeft"
                  },
                  {
                      "type": "terminal",
                      "name": "OSLeft"
                  },
                  {
                      "type": "terminal",
                      "name": "AltLeft"
                  },
                  {
                      "type": "terminal",
                      "name": "Space"
                  },
                  {
                      "type": "terminal",
                      "name": "AltRight"
                  },
                  {
                      "type": "terminal",
                      "name": "ContextMenu"
                  },
                  {
                      "type": "terminal",
                      "name": "ControlRight"
                  },
                  {
                      "type": "terminal",
                      "name": "Delete"
                  },
                  {
                      "type": "terminal",
                      "name": "PageUp"
                  },
                  {
                      "type": "terminal",
                      "name": "PageDown"
                  },
                  {
                      "type": "terminal",
                      "name": "ArrowLeft"
                  },
                  {
                      "type": "terminal",
                      "name": "ArrowUp"
                  },
                  {
                      "type": "terminal",
                      "name": "ArrowRight"
                  },
                  {
                      "type": "terminal",
                      "name": "ArrowDown"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyA"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyB"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyC"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyD"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyE"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyF"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyG"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyH"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyI"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyJ"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyK"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyL"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyM"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyN"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyO"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyR"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyS"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyT"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyU"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyV"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyW"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyX"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyY"
                  },
                  {
                      "type": "terminal",
                      "name": "KeyZ"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad0"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad1"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad2"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad3"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad4"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad5"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad6"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad7"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad8"
                  },
                  {
                      "type": "terminal",
                      "name": "Numpad9"
                  },
                  {
                      "type": "terminal",
                      "name": "NumpadMultiply"
                  },
                  {
                      "type": "terminal",
                      "name": "NumpadAdd"
                  },
                  {
                      "type": "terminal",
                      "name": "NumpadDecimal"
                  },
                  {
                      "type": "terminal",
                      "name": "NumpadSubstract"
                  },
                  {
                      "type": "terminal",
                      "name": "NumpadDivide"
                  },
                  {
                      "type": "terminal",
                      "name": "NumLock"
                  }
              ]
          },
          {
              "name": "type_of",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "typeof"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT"
                  }
              ]
          },
          {
              "name": "if_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "if"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "condition_expr"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  },
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts",
                      "alias": "if_part"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  }
              ]
          },
          {
              "name": "if_else_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "if"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "condition_expr"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  },
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts",
                      "alias": "if_part"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  },
                  {
                      "type": "terminal",
                      "name": "else"
                  },
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts",
                      "alias": "else_part"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  }
              ]
          },
          {
              "name": "while_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "while"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "condition_expr"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  },
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts",
                      "alias": "while_part"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  }
              ]
          },
          {
              "name": "for_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "for"
                  },
                  {
                      "type": "terminal",
                      "name": "LP",
                      "alias": "("
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "initialization_expr"
                  },
                  {
                      "type": "terminal",
                      "name": "SEMICOLON",
                      "alias": ";"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "condition_expr"
                  },
                  {
                      "type": "terminal",
                      "name": "SEMICOLON",
                      "alias": ";"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "step_expr"
                  },
                  {
                      "type": "terminal",
                      "name": "RP",
                      "alias": ")"
                  },
                  {
                      "type": "terminal",
                      "name": "LB",
                      "alias": "{"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts",
                      "alias": "for_part"
                  },
                  {
                      "type": "terminal",
                      "name": "RB",
                      "alias": "}"
                  }
              ]
          },
          {
              "name": "ternary_stmt",
              "all_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "condition_expr"
                  },
                  {
                      "type": "terminal",
                      "name": "QM",
                      "alias": "?"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "exprIfTrue"
                  },
                  {
                      "type": "terminal",
                      "name": "COLON",
                      "alias": ":"
                  },
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "exprIfFalse"
                  }
              ]
          },
          {
              "name": "ident_list",
              "list_of": [
                  {
                      "type": "non_terminal",
                      "name": "variable"
                  }
              ]
          },
          {
              "name": "expr_list",
              "list_of": [
                  {
                      "type": "non_terminal",
                      "name": "expr",
                      "alias": "arg"
                  }
              ]
          },
          {
              "name": "turtle_functions",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "forward_turtle",
                      "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                  },
                  {
                      "type": "non_terminal",
                      "name": "backward_turtle",
                      "tooltip": "Moves the turtle backward, allowing for possible wrap-around"
                  },
                  {
                      "type": "non_terminal",
                      "name": "turn_right",
                      "tooltip": "Turns the turtle right by an angle in degrees"
                  },
                  {
                      "type": "non_terminal",
                      "name": "turn_left",
                      "tooltip": "Turns the turtle left by an angle in degrees"
                  },
                  {
                      "type": "non_terminal",
                      "name": "goto_position",
                      "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                  },
                  {
                      "type": "terminal",
                      "name": "clear",
                      "tooltip": "Clear the display, don't move the turtle"
                  },
                  {
                      "type": "terminal",
                      "name": "penup",
                      "tooltip": "Picks up the turtle's pen so as not to draw line"
                  },
                  {
                      "type": "terminal",
                      "name": "pendown",
                      "tooltip": "Puts down the turtle's pen so as to draw line"
                  },
                  {
                      "type": "terminal",
                      "name": "reset",
                      "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                  },
                  {
                      "type": "non_terminal",
                      "name": "define_angle",
                      "tooltip": "Set the angle of the turtle in degrees"
                  },
                  {
                      "type": "non_terminal",
                      "name": "define_widthline",
                      "tooltip": "Set the width of the line"
                  },
                  {
                      "type": "non_terminal",
                      "name": "define_turtleshape",
                      "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                  },
                  {
                      "type": "non_terminal",
                      "name": "change_color",
                      "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                  },
                  {
                      "type": "non_terminal",
                      "name": "write_msg",
                      "tooltip": "Write some text at the turtle position"
                  },
                  {
                      "type": "non_terminal",
                      "name": "random_int",
                      "tooltip": "Generate a random integer between low and high"
                  },
                  {
                      "type": "terminal",
                      "name": "hide_turtle",
                      "tooltip": "Hide the turtle from the canvas"
                  },
                  {
                      "type": "terminal",
                      "name": "show_turtle",
                      "tooltip": "Display the turtle in the canvas"
                  },
                  {
                      "type": "non_terminal",
                      "name": "set_redraw",
                      "tooltip": "Turn on/off redrawing"
                  },
                  {
                      "type": "terminal",
                      "name": "draw",
                      "tooltip": "Draw the turtle and the current image"
                  },
                  {
                      "type": "non_terminal",
                      "name": "set_wrap",
                      "tooltip": "Turn edge wrapping on/off"
                  },
                  {
                      "type": "non_terminal",
                      "name": "set_delay",
                      "tooltip": "Call a function once after a period of time"
                  }
              ]
          },
          {
              "name": "forward_turtle",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "forward"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "distance",
                      "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                  }
              ]
          },
          {
              "name": "backward_turtle",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "backward"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "distance",
                      "tooltip": "Moves the turtle backward, allowing for possible wrap-around"
                  }
              ]
          },
          {
              "name": "turn_right",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "right"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "angle",
                      "tooltip": "Turns the turtle right by an angle in degrees"
                  }
              ]
          },
          {
              "name": "turn_left",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "left"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "angle",
                      "tooltip": "Turns the turtle left by an angle in degrees"
                  }
              ]
          },
          {
              "name": "goto_position",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "goto"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y",
                      "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                  }
              ]
          },
          {
              "name": "define_angle",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "angle"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "angle",
                      "tooltip": "Set the angle of the turtle in degrees"
                  }
              ]
          },
          {
              "name": "define_widthline",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "width"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width",
                      "tooltip": "Set the width of the line"
                  }
              ]
          },
          {
              "name": "define_turtleshape",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "shape"
                  },
                  {
                      "type": "non_terminal",
                      "name": "shapes",
                      "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                  }
              ]
          },
          {
              "name": "shapes",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "triangle"
                  },
                  {
                      "type": "terminal",
                      "name": "circle"
                  },
                  {
                      "type": "terminal",
                      "name": "square"
                  },
                  {
                      "type": "terminal",
                      "name": "turtle"
                  }
              ]
          },
          {
              "name": "change_color",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "colour"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "r"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "g"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "b"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "a",
                      "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                  }
              ]
          },
          {
              "name": "write_msg",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "write"
                  },
                  {
                      "type": "terminal",
                      "name": "STRING_CONST",
                      "alias": "msg",
                      "tooltip": "Write some text at the turtle position"
                  }
              ]
          },
          {
              "name": "random_int",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "random"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "low"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "high",
                      "tooltip": "Generate a random integer between low and high"
                  }
              ]
          },
          {
              "name": "set_redraw",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "redrawOnMove"
                  },
                  {
                      "type": "non_terminal",
                      "name": "BOOLEAN_CONST",
                      "alias": "on/off",
                      "tooltip": "Turn on/off redrawing"
                  }
              ]
          },
          {
              "name": "set_wrap",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "wrap"
                  },
                  {
                      "type": "non_terminal",
                      "name": "BOOLEAN_CONST",
                      "alias": "on/off",
                      "tooltip": "Turn edge wrapping on/off"
                  }
              ]
          },
          {
              "name": "set_delay",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "delay"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "function"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "ms",
                      "tooltip": "Call a function once after a period of time"
                  }
              ]
          },
          {
              "name": "repeat_stmt",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "repeat"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "times"
                  },
                  {
                      "type": "non_terminal",
                      "name": "stmts",
                      "tooltip": "Repeat the stmts, certain times"
                  }
              ]
          },
          {
              "name": "color",
              "any_of": [
                  {
                      "type": "terminal",
                      "name": "black"
                  },
                  {
                      "type": "terminal",
                      "name": "red"
                  },
                  {
                      "type": "terminal",
                      "name": "blue"
                  },
                  {
                      "type": "terminal",
                      "name": "green"
                  },
                  {
                      "type": "terminal",
                      "name": "yellow"
                  },
                  {
                      "type": "terminal",
                      "name": "cyan"
                  },
                  {
                      "type": "terminal",
                      "name": "magenta"
                  },
                  {
                      "type": "non_terminal",
                      "name": "rgb_color",
                      "tooltip": "Define the color as rgb"
                  }
              ]
          },
          {
              "name": "rgb_color",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "r"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "g"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "b"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "a",
                      "tooltip": "Set the color using RGB values in the range 0 - 255"
                  }
              ]
          },
          {
              "name": "widgets",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "create_element",
                      "tooltip": "Add a new element at the widgets window"
                  },
                  {
                      "type": "non_terminal",
                      "name": "change_attribute",
                      "tooltip": "Change an attribute of a created element"
                  }
              ]
          },
          {
              "name": "create_element",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "new_window",
                      "tooltip": "Initialize new window on position (x,y) with certain width and height "
                  },
                  {
                      "type": "non_terminal",
                      "name": "new_button",
                      "tooltip": "Initialize new button on position (x,y) with certain width,height and text on it"
                  },
                  {
                      "type": "non_terminal",
                      "name": "new_textfield",
                      "tooltip": "Initialize new textfield on position (x,y) with certain width "
                  },
                  {
                      "type": "non_terminal",
                      "name": "new_textarea",
                      "tooltip": "Initialize new textarea on position (x,y) with certain width and height"
                  },
                  {
                      "type": "non_terminal",
                      "name": "new_checkbox",
                      "tooltip": "Initialize new checkbox on position (x,y)"
                  },
                  {
                      "type": "non_terminal",
                      "name": "new_dropdown",
                      "tooltip": "Initialize new dropdown on position (x,y)"
                  }
              ]
          },
          {
              "name": "new_window",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "window"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "window_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "height"
                  }
              ]
          },
          {
              "name": "new_button",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "button"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "button_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "height"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "text"
                  }
              ]
          },
          {
              "name": "new_textfield",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "textfield"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textfield_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width"
                  }
              ]
          },
          {
              "name": "new_textarea",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "textarea"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textarea_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "height"
                  }
              ]
          },
          {
              "name": "new_checkbox",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "checkbox"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "checkbox_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "text"
                  }
              ]
          },
          {
              "name": "new_dropdown",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "dropdown"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "dropdown_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y"
                  },
                  {
                      "type": "non_terminal",
                      "name": "options"
                  }
              ]
          },
          {
              "name": "options",
              "list_of": [
                  {
                      "type": "terminal",
                      "name": "STRING_CONST",
                      "alias": "option"
                  }
              ]
          },
          {
              "name": "change_attribute",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "change_button",
                      "tooltip": "Change an attribute of a created button"
                  },
                  {
                      "type": "non_terminal",
                      "name": "change_textfield",
                      "tooltip": "Change an attribute of a created textfield"
                  },
                  {
                      "type": "non_terminal",
                      "name": "change_textarea",
                      "tooltip": "Change an attribute of a created textarea"
                  },
                  {
                      "type": "non_terminal",
                      "name": "change_checkbox",
                      "tooltip": "Change an attribute of a crated checkbox"
                  }
              ]
          },
          {
              "name": "change_button",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "button_disabled",
                      "tooltip": "Specifies that a button should be disabled or not"
                  },
                  {
                      "type": "non_terminal",
                      "name": "button_text",
                      "tooltip": "Change the text on the button"
                  },
                  {
                      "type": "non_terminal",
                      "name": "button_color",
                      "tooltip": "Define the background color of the button"
                  },
                  {
                      "type": "non_terminal",
                      "name": "button_width",
                      "tooltip": "Define the width of the button"
                  },
                  {
                      "type": "non_terminal",
                      "name": "button_height",
                      "tooltip": "Define the height of the button"
                  },
                  {
                      "type": "non_terminal",
                      "name": "button_position",
                      "tooltip": "Define the position of the button"
                  }
              ]
          },
          {
              "name": "change_textfield",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "textfield_width",
                      "tooltip": "Define the width of the textfield"
                  },
                  {
                      "type": "non_terminal",
                      "name": "textfield_position",
                      "tooltip": "Define the position of the textfield"
                  },
                  {
                      "type": "non_terminal",
                      "name": "textfield_value",
                      "tooltip": "Define the default value of the textfield"
                  },
                  {
                      "type": "non_terminal",
                      "name": "textfield_maxlength",
                      "tooltip": "Define the max length of the value of the textfield"
                  }
              ]
          },
          {
              "name": "change_textarea",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "textarea_width",
                      "tooltip": "Define the width of the textarea"
                  },
                  {
                      "type": "non_terminal",
                      "name": "textarea_position",
                      "tooltip": "Define the position of the textarea"
                  },
                  {
                      "type": "non_terminal",
                      "name": "textarea_rows",
                      "tooltip": "Define the rows of the textarea"
                  },
                  {
                      "type": "non_terminal",
                      "name": "textarea_cols",
                      "tooltip": "Define the columns of the textarea"
                  },
                  {
                      "type": "non_terminal",
                      "name": "textarea_maxlength",
                      "tooltip": "Define the max length of the text of the textarea"
                  }
              ]
          },
          {
              "name": "change_checkbox",
              "any_of": [
                  {
                      "type": "non_terminal",
                      "name": "checkbox_position",
                      "tooltip": "Define the position of the checkbox"
                  },
                  {
                      "type": "non_terminal",
                      "name": "checkbox_text",
                      "tooltip": "Define the text of the checkbox"
                  },
                  {
                      "type": "non_terminal",
                      "name": "checkbox_checked",
                      "tooltip": "Define if the checkbox will be checked or not"
                  }
              ]
          },
          {
              "name": "button_disabled",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "button_name"
                  },
                  {
                      "type": "terminal",
                      "name": "disable"
                  },
                  {
                      "type": "non_terminal",
                      "name": "BOOLEAN_CONST",
                      "tooltip": "Specifies that a button should be disabled or not"
                  }
              ]
          },
          {
              "name": "button_text",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "button_name"
                  },
                  {
                      "type": "terminal",
                      "name": "text"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "text",
                      "tooltip": "Change the text on the button"
                  }
              ]
          },
          {
              "name": "button_color",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "button_name"
                  },
                  {
                      "type": "terminal",
                      "name": "background"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "color",
                      "tooltip": "Define the background color of the button"
                  }
              ]
          },
          {
              "name": "button_width",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "button_name"
                  },
                  {
                      "type": "terminal",
                      "name": "new_width"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width",
                      "tooltip": "Define the width of the button"
                  }
              ]
          },
          {
              "name": "button_height",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "button_name"
                  },
                  {
                      "type": "terminal",
                      "name": "new_height"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "height",
                      "tooltip": "Define the height of the button"
                  }
              ]
          },
          {
              "name": "button_position",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "button_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y",
                      "tooltip": "Define the position of the button"
                  }
              ]
          },
          {
              "name": "textfield_width",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textfield_name"
                  },
                  {
                      "type": "terminal",
                      "name": "new_width"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width",
                      "tooltip": "Define the width of the textfield"
                  }
              ]
          },
          {
              "name": "textfield_position",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textfield_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y",
                      "tooltip": "Define the position of the textfield"
                  }
              ]
          },
          {
              "name": "textfield_value",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textfield_name"
                  },
                  {
                      "type": "terminal",
                      "name": "text"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "text",
                      "tooltip": "Define the default value of the textfield"
                  }
              ]
          },
          {
              "name": "textfield_maxlength",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textfield_name"
                  },
                  {
                      "type": "terminal",
                      "name": "max"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "maxlength",
                      "tooltip": "Define the max lenght of the value of the textfield"
                  }
              ]
          },
          {
              "name": "textarea_width",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textarea_name"
                  },
                  {
                      "type": "terminal",
                      "name": "new_width"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "width",
                      "tooltip": "Define the width of the textarea"
                  }
              ]
          },
          {
              "name": "textarea_position",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textarea_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y",
                      "tooltip": "Define the position of the textarea"
                  }
              ]
          },
          {
              "name": "textarea_rows",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textarea_name"
                  },
                  {
                      "type": "terminal",
                      "name": "rows"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "rows",
                      "tooltip": "Define the rows of the textarea"
                  }
              ]
          },
          {
              "name": "textarea_cols",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textarea_name"
                  },
                  {
                      "type": "terminal",
                      "name": "cols"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "cols",
                      "tooltip": "Define the cols of the textarea"
                  }
              ]
          },
          {
              "name": "textarea_maxlength",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "textarea_name"
                  },
                  {
                      "type": "terminal",
                      "name": "max"
                  },
                  {
                      "type": "terminal",
                      "name": "INT_CONST",
                      "alias": "maxlength",
                      "tooltip": "Define the max length of the text of the textarea"
                  }
              ]
          },
          {
              "name": "checkbox_position",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "checkbox_name"
                  },
                  {
                      "type": "terminal",
                      "name": "on"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "x"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "y",
                      "tooltip": "Define the position of the checkbox"
                  }
              ]
          },
          {
              "name": "checkbox_text",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "checkbox_name"
                  },
                  {
                      "type": "terminal",
                      "name": "text"
                  },
                  {
                      "type": "non_terminal",
                      "name": "primary_expr",
                      "alias": "text",
                      "tooltip": "Define the text of the checkbox"
                  }
              ]
          },
          {
              "name": "checkbox_checked",
              "all_of": [
                  {
                      "type": "terminal",
                      "name": "change"
                  },
                  {
                      "type": "terminal",
                      "name": "IDENT",
                      "alias": "checkbox_name"
                  },
                  {
                      "type": "terminal",
                      "name": "checked"
                  },
                  {
                      "type": "non_terminal",
                      "name": "BOOLEAN_CONST",
                      "tooltip": "Define if the checkbox will be checked or not"
                  }
              ]
          }
      ]
  },
    toolbox:[
      {
        "name": "Control",
        "icon": "./Images/Toolbox/control.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "if_stmt",
                "isTerminal": false
              },
              "tooltip": "Do something if a condition is true"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "if",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "condition_expr"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "alias": "if_part (on true)"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "turtle_functions",
                    "isTerminal": false
                  },
                  "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "if_else_stmt",
                "isTerminal": false
              },
              "tooltip": "Do something if a condition is true, else do something else"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "if",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "condition_expr"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "alias": "if_part (on true)"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "else",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "alias": "else_part (on true)"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "turtle_functions",
                    "isTerminal": false
                  },
                  "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "ternary_stmt",
                "isTerminal": false
              },
              "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "condition_expr"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "QM",
                    "isTerminal": true
                  },
                  "alias": "?"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "exprIfTrue"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "COLON",
                    "isTerminal": true
                  },
                  "alias": ":"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "exprIfFalse"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "turtle_functions",
                    "isTerminal": false
                  },
                  "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "repeat_stmt",
                "isTerminal": false
              },
              "tooltip": "Repeat the stmts, certain times"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "repeat",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "alias": "times"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat the stmts, certain times"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "repeat_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Repeat the stmts, certain times"
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "repeat_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Repeat the stmts, certain times"
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "repeat_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat the stmts, certain times"
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "turtle_functions",
                    "isTerminal": false
                  },
                  "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 4,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "while_stmt",
                "isTerminal": false
              },
              "tooltip": "Do something while a condition is true"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "while",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "condition_expr"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "alias": "while_part"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "turtle_functions",
                    "isTerminal": false
                  },
                  "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 2,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "for_stmt",
                "isTerminal": false
              },
              "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "for",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "initialization_expr"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "SEMICOLON",
                    "isTerminal": true
                  },
                  "alias": ";"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "condition_expr"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "SEMICOLON",
                    "isTerminal": true
                  },
                  "alias": ";"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "step_expr"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "alias": "for_part"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "turtle_functions",
                    "isTerminal": false
                  },
                  "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "break",
                "isTerminal": true
              }
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "continue",
                "isTerminal": true
              }
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 7,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "return_stmt",
                "isTerminal": false
              },
              "tooltip": "Return an expression as the result of the current function"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "return",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 8,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          }
        ]
      },
      {
        "name": "Logical",
        "icon": "./Images/Toolbox/comparison.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "true",
                "isTerminal": true
              }
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "BOOLEAN",
                  "isTerminal": false
                },
                "tooltip": "One of true or false"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "true",
                    "isTerminal": true
                  }
                },
                {
                  "symbol": {
                    "name": "false",
                    "isTerminal": true
                  }
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "INT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                  },
                  {
                    "symbol": {
                      "name": "FLOAT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                  },
                  {
                    "symbol": {
                      "name": "CHAR_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "One single character"
                  },
                  {
                    "symbol": {
                      "name": "STRING_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "Any sequence of characters or the empty sequence"
                  },
                  {
                    "symbol": {
                      "name": "BOOLEAN",
                      "isTerminal": false
                    },
                    "tooltip": "One of true or false"
                  },
                  {
                    "symbol": {
                      "name": "ARRAY_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "An array of elements"
                  },
                  {
                    "symbol": {
                      "name": "OBJECT_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "Variable with many values as pairs (name:value)"
                  },
                  {
                    "symbol": {
                      "name": "func_def",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition as a value of an object"
                  },
                  {
                    "symbol": {
                      "name": "anonymous_func",
                      "isTerminal": false
                    },
                    "tooltip": "A function without a name"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "false",
                "isTerminal": true
              }
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "BOOLEAN",
                  "isTerminal": false
                },
                "tooltip": "One of true or false"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "true",
                    "isTerminal": true
                  }
                },
                {
                  "symbol": {
                    "name": "false",
                    "isTerminal": true
                  }
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "INT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                  },
                  {
                    "symbol": {
                      "name": "FLOAT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                  },
                  {
                    "symbol": {
                      "name": "CHAR_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "One single character"
                  },
                  {
                    "symbol": {
                      "name": "STRING_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "Any sequence of characters or the empty sequence"
                  },
                  {
                    "symbol": {
                      "name": "BOOLEAN",
                      "isTerminal": false
                    },
                    "tooltip": "One of true or false"
                  },
                  {
                    "symbol": {
                      "name": "ARRAY_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "An array of elements"
                  },
                  {
                    "symbol": {
                      "name": "OBJECT_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "Variable with many values as pairs (name:value)"
                  },
                  {
                    "symbol": {
                      "name": "func_def",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition as a value of an object"
                  },
                  {
                    "symbol": {
                      "name": "anonymous_func",
                      "isTerminal": false
                    },
                    "tooltip": "A function without a name"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "GREATER",
                    "isTerminal": true
                  },
                  "alias": ">",
                  "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LESS",
                    "isTerminal": true
                  },
                  "alias": "<",
                  "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "EQUAL_TO",
                    "isTerminal": true
                  },
                  "alias": "==",
                  "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 2,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "EQUAL_VALUE_TYPE",
                    "isTerminal": true
                  },
                  "alias": "===",
                  "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 3,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "NOT_EQUAL_TO",
                    "isTerminal": true
                  },
                  "alias": "!=",
                  "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "NOT_EQUAL_VALUE_TYPE",
                    "isTerminal": true
                  },
                  "alias": "!==",
                  "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "GREATER_EQUAL",
                    "isTerminal": true
                  },
                  "alias": ">=",
                  "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 6,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "rel_expr",
                "isTerminal": false
              },
              "tooltip": "An operator that compares the two operands and returns true or false"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LESS_EQUAL",
                    "isTerminal": true
                  },
                  "alias": "<=",
                  "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "rel_op",
                      "isTerminal": false
                    },
                    "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "GREATER",
                        "isTerminal": true
                      },
                      "alias": ">",
                      "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "==",
                      "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "===",
                      "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_TO",
                        "isTerminal": true
                      },
                      "alias": "!=",
                      "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "NOT_EQUAL_VALUE_TYPE",
                        "isTerminal": true
                      },
                      "alias": "!==",
                      "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "GREATER_EQUAL",
                        "isTerminal": true
                      },
                      "alias": ">=",
                      "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "LESS_EQUAL",
                        "isTerminal": true
                      },
                      "alias": "<=",
                      "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                    }
                  ],
                  "selectedSymbol": 7,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_logical_expr",
                "isTerminal": false
              },
              "tooltip": "Performs a binary operation with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "AND",
                    "isTerminal": true
                  },
                  "alias": "&&",
                  "tooltip": "Returns true if both operands are true, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "logical_binary_op",
                      "isTerminal": false
                    },
                    "tooltip": "Performs a binary operation with two operands"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "AND",
                        "isTerminal": true
                      },
                      "alias": "&&",
                      "tooltip": "Returns true if both operands are true, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "OR",
                        "isTerminal": true
                      },
                      "alias": "||",
                      "tooltip": "Returns true if either operand is true, else returns false"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "logical_expr",
                  "isTerminal": false
                },
                "tooltip": "An expression that evaluates to true or false"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Performs a binary operation with two operands"
                },
                {
                  "symbol": {
                    "name": "not_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Performs logical negation. True becomes false and false becomes true"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_logical_expr",
                "isTerminal": false
              },
              "tooltip": "Performs a binary operation with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "OR",
                    "isTerminal": true
                  },
                  "alias": "||",
                  "tooltip": "Returns true if either operand is true, else returns false"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "logical_binary_op",
                      "isTerminal": false
                    },
                    "tooltip": "Performs a binary operation with two operands"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "AND",
                        "isTerminal": true
                      },
                      "alias": "&&",
                      "tooltip": "Returns true if both operands are true, else returns false"
                    },
                    {
                      "symbol": {
                        "name": "OR",
                        "isTerminal": true
                      },
                      "alias": "||",
                      "tooltip": "Returns true if either operand is true, else returns false"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "logical_expr",
                  "isTerminal": false
                },
                "tooltip": "An expression that evaluates to true or false"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Performs a binary operation with two operands"
                },
                {
                  "symbol": {
                    "name": "not_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Performs logical negation. True becomes false and false becomes true"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "not_expr",
                "isTerminal": false
              },
              "tooltip": "Performs logical negation. True becomes false and false becomes true"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "NOT",
                    "isTerminal": true
                  },
                  "alias": "!",
                  "tooltip": "Returns true if the operand is false, else returns false"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "logical_expr",
                  "isTerminal": false
                },
                "tooltip": "An expression that evaluates to true or false"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Performs a binary operation with two operands"
                },
                {
                  "symbol": {
                    "name": "not_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Performs logical negation. True becomes false and false becomes true"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "Math",
        "icon": "./Images/Toolbox/math.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "INT_CONST",
                "isTerminal": true
              },
              "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
            },
            "type": "InputBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                },
                {
                  "symbol": {
                    "name": "FLOAT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                },
                {
                  "symbol": {
                    "name": "CHAR_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "One single character"
                },
                {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "Any sequence of characters or the empty sequence"
                },
                {
                  "symbol": {
                    "name": "BOOLEAN",
                    "isTerminal": false
                  },
                  "tooltip": "One of true or false"
                },
                {
                  "symbol": {
                    "name": "ARRAY_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "An array of elements"
                },
                {
                  "symbol": {
                    "name": "OBJECT_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "Variable with many values as pairs (name:value)"
                },
                {
                  "symbol": {
                    "name": "func_def",
                    "isTerminal": false
                  },
                  "tooltip": "Function definition as a value of an object"
                },
                {
                  "symbol": {
                    "name": "anonymous_func",
                    "isTerminal": false
                  },
                  "tooltip": "A function without a name"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "FLOAT_CONST",
                "isTerminal": true
              },
              "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
            },
            "type": "InputBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                },
                {
                  "symbol": {
                    "name": "FLOAT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                },
                {
                  "symbol": {
                    "name": "CHAR_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "One single character"
                },
                {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "Any sequence of characters or the empty sequence"
                },
                {
                  "symbol": {
                    "name": "BOOLEAN",
                    "isTerminal": false
                  },
                  "tooltip": "One of true or false"
                },
                {
                  "symbol": {
                    "name": "ARRAY_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "An array of elements"
                },
                {
                  "symbol": {
                    "name": "OBJECT_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "Variable with many values as pairs (name:value)"
                },
                {
                  "symbol": {
                    "name": "func_def",
                    "isTerminal": false
                  },
                  "tooltip": "Function definition as a value of an object"
                },
                {
                  "symbol": {
                    "name": "anonymous_func",
                    "isTerminal": false
                  },
                  "tooltip": "A function without a name"
                }
              ],
              "selectedSymbol": 2,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_arith_expr",
                "isTerminal": false
              },
              "tooltip": "An arithmetic expression with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "PLUS",
                    "isTerminal": true
                  },
                  "alias": "+",
                  "tooltip": "Performs addition"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "arith_op",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Performs addition"
                    },
                    {
                      "symbol": {
                        "name": "SUB",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                    },
                    {
                      "symbol": {
                        "name": "MULT",
                        "isTerminal": true
                      },
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                    },
                    {
                      "symbol": {
                        "name": "EXP",
                        "isTerminal": true
                      },
                      "alias": "**",
                      "tooltip": "Performs Exponentation"
                    },
                    {
                      "symbol": {
                        "name": "DIV",
                        "isTerminal": true
                      },
                      "alias": "/",
                      "tooltip": "Performs division"
                    },
                    {
                      "symbol": {
                        "name": "MODULO",
                        "isTerminal": true
                      },
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "arith_expr",
                  "isTerminal": false
                },
                "tooltip": "Perform a mathematic operation"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An arithmetic expression with two operands"
                },
                {
                  "symbol": {
                    "name": "unary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Unary expression operator with single operand,either before or after the operator"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_arith_expr",
                "isTerminal": false
              },
              "tooltip": "An arithmetic expression with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "SUB",
                    "isTerminal": true
                  },
                  "alias": "-",
                  "tooltip": "Performs subtraction"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "arith_op",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Performs addition"
                    },
                    {
                      "symbol": {
                        "name": "SUB",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                    },
                    {
                      "symbol": {
                        "name": "MULT",
                        "isTerminal": true
                      },
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                    },
                    {
                      "symbol": {
                        "name": "EXP",
                        "isTerminal": true
                      },
                      "alias": "**",
                      "tooltip": "Performs Exponentation"
                    },
                    {
                      "symbol": {
                        "name": "DIV",
                        "isTerminal": true
                      },
                      "alias": "/",
                      "tooltip": "Performs division"
                    },
                    {
                      "symbol": {
                        "name": "MODULO",
                        "isTerminal": true
                      },
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "arith_expr",
                  "isTerminal": false
                },
                "tooltip": "Perform a mathematic operation"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An arithmetic expression with two operands"
                },
                {
                  "symbol": {
                    "name": "unary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Unary expression operator with single operand,either before or after the operator"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_arith_expr",
                "isTerminal": false
              },
              "tooltip": "An arithmetic expression with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "MULT",
                    "isTerminal": true
                  },
                  "alias": "*",
                  "tooltip": "Performs multipliction"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "arith_op",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Performs addition"
                    },
                    {
                      "symbol": {
                        "name": "SUB",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                    },
                    {
                      "symbol": {
                        "name": "MULT",
                        "isTerminal": true
                      },
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                    },
                    {
                      "symbol": {
                        "name": "EXP",
                        "isTerminal": true
                      },
                      "alias": "**",
                      "tooltip": "Performs Exponentation"
                    },
                    {
                      "symbol": {
                        "name": "DIV",
                        "isTerminal": true
                      },
                      "alias": "/",
                      "tooltip": "Performs division"
                    },
                    {
                      "symbol": {
                        "name": "MODULO",
                        "isTerminal": true
                      },
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                    }
                  ],
                  "selectedSymbol": 2,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "arith_expr",
                  "isTerminal": false
                },
                "tooltip": "Perform a mathematic operation"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An arithmetic expression with two operands"
                },
                {
                  "symbol": {
                    "name": "unary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Unary expression operator with single operand,either before or after the operator"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_arith_expr",
                "isTerminal": false
              },
              "tooltip": "An arithmetic expression with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DIV",
                    "isTerminal": true
                  },
                  "alias": "/",
                  "tooltip": "Performs division"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "arith_op",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Performs addition"
                    },
                    {
                      "symbol": {
                        "name": "SUB",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                    },
                    {
                      "symbol": {
                        "name": "MULT",
                        "isTerminal": true
                      },
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                    },
                    {
                      "symbol": {
                        "name": "EXP",
                        "isTerminal": true
                      },
                      "alias": "**",
                      "tooltip": "Performs Exponentation"
                    },
                    {
                      "symbol": {
                        "name": "DIV",
                        "isTerminal": true
                      },
                      "alias": "/",
                      "tooltip": "Performs division"
                    },
                    {
                      "symbol": {
                        "name": "MODULO",
                        "isTerminal": true
                      },
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "arith_expr",
                  "isTerminal": false
                },
                "tooltip": "Perform a mathematic operation"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An arithmetic expression with two operands"
                },
                {
                  "symbol": {
                    "name": "unary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Unary expression operator with single operand,either before or after the operator"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_arith_expr",
                "isTerminal": false
              },
              "tooltip": "An arithmetic expression with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "MODULO",
                    "isTerminal": true
                  },
                  "alias": "%",
                  "tooltip": "Performs the modulo operation"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "arith_op",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Performs addition"
                    },
                    {
                      "symbol": {
                        "name": "SUB",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                    },
                    {
                      "symbol": {
                        "name": "MULT",
                        "isTerminal": true
                      },
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                    },
                    {
                      "symbol": {
                        "name": "EXP",
                        "isTerminal": true
                      },
                      "alias": "**",
                      "tooltip": "Performs Exponentation"
                    },
                    {
                      "symbol": {
                        "name": "DIV",
                        "isTerminal": true
                      },
                      "alias": "/",
                      "tooltip": "Performs division"
                    },
                    {
                      "symbol": {
                        "name": "MODULO",
                        "isTerminal": true
                      },
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "arith_expr",
                  "isTerminal": false
                },
                "tooltip": "Perform a mathematic operation"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An arithmetic expression with two operands"
                },
                {
                  "symbol": {
                    "name": "unary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Unary expression operator with single operand,either before or after the operator"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "binary_arith_expr",
                "isTerminal": false
              },
              "tooltip": "An arithmetic expression with two operands"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The first operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "EXP",
                    "isTerminal": true
                  },
                  "alias": "**",
                  "tooltip": "Performs Exponentation"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "arith_op",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Performs addition"
                    },
                    {
                      "symbol": {
                        "name": "SUB",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                    },
                    {
                      "symbol": {
                        "name": "MULT",
                        "isTerminal": true
                      },
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                    },
                    {
                      "symbol": {
                        "name": "EXP",
                        "isTerminal": true
                      },
                      "alias": "**",
                      "tooltip": "Performs Exponentation"
                    },
                    {
                      "symbol": {
                        "name": "DIV",
                        "isTerminal": true
                      },
                      "alias": "/",
                      "tooltip": "Performs division"
                    },
                    {
                      "symbol": {
                        "name": "MODULO",
                        "isTerminal": true
                      },
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                    }
                  ],
                  "selectedSymbol": 3,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The second operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "arith_expr",
                  "isTerminal": false
                },
                "tooltip": "Perform a mathematic operation"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An arithmetic expression with two operands"
                },
                {
                  "symbol": {
                    "name": "unary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Unary expression operator with single operand,either before or after the operator"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "unary_expr_after",
                "isTerminal": false
              },
              "tooltip": "The unary operator after the operand"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The single operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "PLUS_PLUS",
                    "isTerminal": true
                  },
                  "alias": "++",
                  "tooltip": "Post-increament of the operand value by one"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "unary_op_af",
                      "isTerminal": false
                    },
                    "tooltip": "Unary operator with one operand"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS_PLUS",
                        "isTerminal": true
                      },
                      "alias": "++",
                      "tooltip": "Post-increament of the operand value by one"
                    },
                    {
                      "symbol": {
                        "name": "SUB_SUB",
                        "isTerminal": true
                      },
                      "alias": "--",
                      "tooltip": "Post-decreament of the operand value by one"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "unary_expr",
                  "isTerminal": false
                },
                "tooltip": "Unary expression operator with single operand,either before or after the operator"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "unary_expr_before",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator before the operand"
                },
                {
                  "symbol": {
                    "name": "unary_expr_after",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator after the operand"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "binary_arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic expression with two operands"
                  },
                  {
                    "symbol": {
                      "name": "unary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "unary_expr_after",
                "isTerminal": false
              },
              "tooltip": "The unary operator after the operand"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The single operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "SUB_SUB",
                    "isTerminal": true
                  },
                  "alias": "--",
                  "tooltip": "Post-decreament of the operand value by one"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "unary_op_af",
                      "isTerminal": false
                    },
                    "tooltip": "Unary operator with one operand"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS_PLUS",
                        "isTerminal": true
                      },
                      "alias": "++",
                      "tooltip": "Post-increament of the operand value by one"
                    },
                    {
                      "symbol": {
                        "name": "SUB_SUB",
                        "isTerminal": true
                      },
                      "alias": "--",
                      "tooltip": "Post-decreament of the operand value by one"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "unary_expr",
                  "isTerminal": false
                },
                "tooltip": "Unary expression operator with single operand,either before or after the operator"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "unary_expr_before",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator before the operand"
                },
                {
                  "symbol": {
                    "name": "unary_expr_after",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator after the operand"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "binary_arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic expression with two operands"
                  },
                  {
                    "symbol": {
                      "name": "unary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "unary_expr_before",
                "isTerminal": false
              },
              "tooltip": "The unary operator before the operand"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "UMINUS",
                    "isTerminal": true
                  },
                  "alias": "-",
                  "tooltip": "Negates the value of its operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "unary_op_bf",
                      "isTerminal": false
                    },
                    "tooltip": "Unary operator with one operand"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "UMINUS",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Negates the value of its operand"
                    },
                    {
                      "symbol": {
                        "name": "UPLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Attempts to convert the operand to a number, if it is not already"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_PLUS",
                        "isTerminal": true
                      },
                      "alias": "++",
                      "tooltip": "Pre-increament of the operand value by one"
                    },
                    {
                      "symbol": {
                        "name": "SUB_SUB",
                        "isTerminal": true
                      },
                      "alias": "--",
                      "tooltip": "Pre-decreament of the operand value by one"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The single operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "unary_expr",
                  "isTerminal": false
                },
                "tooltip": "Unary expression operator with single operand,either before or after the operator"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "unary_expr_before",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator before the operand"
                },
                {
                  "symbol": {
                    "name": "unary_expr_after",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator after the operand"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "binary_arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic expression with two operands"
                  },
                  {
                    "symbol": {
                      "name": "unary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "unary_expr_before",
                "isTerminal": false
              },
              "tooltip": "The unary operator before the operand"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "UPLUS",
                    "isTerminal": true
                  },
                  "alias": "+",
                  "tooltip": "Attempts to convert the operand to a number, if it is not already"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "unary_op_bf",
                      "isTerminal": false
                    },
                    "tooltip": "Unary operator with one operand"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "UMINUS",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Negates the value of its operand"
                    },
                    {
                      "symbol": {
                        "name": "UPLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Attempts to convert the operand to a number, if it is not already"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_PLUS",
                        "isTerminal": true
                      },
                      "alias": "++",
                      "tooltip": "Pre-increament of the operand value by one"
                    },
                    {
                      "symbol": {
                        "name": "SUB_SUB",
                        "isTerminal": true
                      },
                      "alias": "--",
                      "tooltip": "Pre-decreament of the operand value by one"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The single operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "unary_expr",
                  "isTerminal": false
                },
                "tooltip": "Unary expression operator with single operand,either before or after the operator"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "unary_expr_before",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator before the operand"
                },
                {
                  "symbol": {
                    "name": "unary_expr_after",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator after the operand"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "binary_arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic expression with two operands"
                  },
                  {
                    "symbol": {
                      "name": "unary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "unary_expr_before",
                "isTerminal": false
              },
              "tooltip": "The unary operator before the operand"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "PLUS_PLUS",
                    "isTerminal": true
                  },
                  "alias": "++",
                  "tooltip": "Pre-increament of the operand value by one"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "unary_op_bf",
                      "isTerminal": false
                    },
                    "tooltip": "Unary operator with one operand"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "UMINUS",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Negates the value of its operand"
                    },
                    {
                      "symbol": {
                        "name": "UPLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Attempts to convert the operand to a number, if it is not already"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_PLUS",
                        "isTerminal": true
                      },
                      "alias": "++",
                      "tooltip": "Pre-increament of the operand value by one"
                    },
                    {
                      "symbol": {
                        "name": "SUB_SUB",
                        "isTerminal": true
                      },
                      "alias": "--",
                      "tooltip": "Pre-decreament of the operand value by one"
                    }
                  ],
                  "selectedSymbol": 2,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The single operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "unary_expr",
                  "isTerminal": false
                },
                "tooltip": "Unary expression operator with single operand,either before or after the operator"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "unary_expr_before",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator before the operand"
                },
                {
                  "symbol": {
                    "name": "unary_expr_after",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator after the operand"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "binary_arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic expression with two operands"
                  },
                  {
                    "symbol": {
                      "name": "unary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "unary_expr_before",
                "isTerminal": false
              },
              "tooltip": "The unary operator before the operand"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "SUB_SUB",
                    "isTerminal": true
                  },
                  "alias": "--",
                  "tooltip": "Pre-decreament of the operand value by one"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "unary_op_bf",
                      "isTerminal": false
                    },
                    "tooltip": "Unary operator with one operand"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "UMINUS",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Negates the value of its operand"
                    },
                    {
                      "symbol": {
                        "name": "UPLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Attempts to convert the operand to a number, if it is not already"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_PLUS",
                        "isTerminal": true
                      },
                      "alias": "++",
                      "tooltip": "Pre-increament of the operand value by one"
                    },
                    {
                      "symbol": {
                        "name": "SUB_SUB",
                        "isTerminal": true
                      },
                      "alias": "--",
                      "tooltip": "Pre-decreament of the operand value by one"
                    }
                  ],
                  "selectedSymbol": 3,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "The single operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "unary_expr",
                  "isTerminal": false
                },
                "tooltip": "Unary expression operator with single operand,either before or after the operator"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "unary_expr_before",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator before the operand"
                },
                {
                  "symbol": {
                    "name": "unary_expr_after",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator after the operand"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "binary_arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic expression with two operands"
                  },
                  {
                    "symbol": {
                      "name": "unary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_abs",
                "isTerminal": false
              },
              "alias": "abs",
              "tooltip": "Returns the absolute value of a number"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "abs",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "value"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_pow",
                "isTerminal": false
              },
              "alias": "pow",
              "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "pow",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "number"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "exponent"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_sqrt",
                "isTerminal": false
              },
              "alias": "sqrt",
              "tooltip": "Get the square root of a number"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "sqrt",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "number"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 2,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_round",
                "isTerminal": false
              },
              "alias": "round",
              "tooltip": "Get the nearest integer to the given number"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "round",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "number"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_floor",
                "isTerminal": false
              },
              "alias": "floor",
              "tooltip": "Get the greatest integer less than or equal to the given number"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "floor",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "number"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 4,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_ceil",
                "isTerminal": false
              },
              "alias": "ceil",
              "tooltip": "Get the least integer greater than or equal to the given number"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ceil",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "number"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 5,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_sin",
                "isTerminal": false
              },
              "alias": "sin",
              "tooltip": "Get the sine of the given angle in degrees"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "sin",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "number"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "math_cos",
                "isTerminal": false
              },
              "alias": "cos",
              "tooltip": "Get the cosine of the given angle in degrees"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "Math",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "cos",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "number"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "math_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in math function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_abs",
                    "isTerminal": false
                  },
                  "alias": "abs",
                  "tooltip": "Returns the absolute value of a number"
                },
                {
                  "symbol": {
                    "name": "math_pow",
                    "isTerminal": false
                  },
                  "alias": "pow",
                  "tooltip": "pow(x,y) Returns base x to the exponent power y (that is, x^y)"
                },
                {
                  "symbol": {
                    "name": "math_sqrt",
                    "isTerminal": false
                  },
                  "alias": "sqrt",
                  "tooltip": "Get the square root of a number"
                },
                {
                  "symbol": {
                    "name": "math_round",
                    "isTerminal": false
                  },
                  "alias": "round",
                  "tooltip": "Get the nearest integer to the given number"
                },
                {
                  "symbol": {
                    "name": "math_floor",
                    "isTerminal": false
                  },
                  "alias": "floor",
                  "tooltip": "Get the greatest integer less than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_ceil",
                    "isTerminal": false
                  },
                  "alias": "ceil",
                  "tooltip": "Get the least integer greater than or equal to the given number"
                },
                {
                  "symbol": {
                    "name": "math_sin",
                    "isTerminal": false
                  },
                  "alias": "sin",
                  "tooltip": "Get the sine of the given angle in degrees"
                },
                {
                  "symbol": {
                    "name": "math_cos",
                    "isTerminal": false
                  },
                  "alias": "cos",
                  "tooltip": "Get the cosine of the given angle in degrees"
                }
              ],
              "selectedSymbol": 7,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "String",
        "icon": "./Images/Toolbox/string.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "STRING_CONST",
                "isTerminal": true
              },
              "tooltip": "Any sequence of characters or the empty sequence"
            },
            "type": "InputBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                },
                {
                  "symbol": {
                    "name": "FLOAT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                },
                {
                  "symbol": {
                    "name": "CHAR_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "One single character"
                },
                {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "Any sequence of characters or the empty sequence"
                },
                {
                  "symbol": {
                    "name": "BOOLEAN",
                    "isTerminal": false
                  },
                  "tooltip": "One of true or false"
                },
                {
                  "symbol": {
                    "name": "ARRAY_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "An array of elements"
                },
                {
                  "symbol": {
                    "name": "OBJECT_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "Variable with many values as pairs (name:value)"
                },
                {
                  "symbol": {
                    "name": "func_def",
                    "isTerminal": false
                  },
                  "tooltip": "Function definition as a value of an object"
                },
                {
                  "symbol": {
                    "name": "anonymous_func",
                    "isTerminal": false
                  },
                  "tooltip": "A function without a name"
                }
              ],
              "selectedSymbol": 4,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "string_method_call",
                "isTerminal": false
              },
              "tooltip": "Concatenate strings"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "alias": "string1",
                  "tooltip": "Any sequence of characters or the empty sequence"
                },
                "type": "InputBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "variable",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                    },
                    {
                      "symbol": {
                        "name": "INT_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                    },
                    {
                      "symbol": {
                        "name": "FLOAT_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                    },
                    {
                      "symbol": {
                        "name": "CHAR_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "One single character"
                    },
                    {
                      "symbol": {
                        "name": "STRING_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "Any sequence of characters or the empty sequence"
                    },
                    {
                      "symbol": {
                        "name": "BOOLEAN",
                        "isTerminal": false
                      },
                      "tooltip": "One of true or false"
                    },
                    {
                      "symbol": {
                        "name": "ARRAY_CONST",
                        "isTerminal": false
                      },
                      "tooltip": "An array of elements"
                    },
                    {
                      "symbol": {
                        "name": "OBJECT_CONST",
                        "isTerminal": false
                      },
                      "tooltip": "Variable with many values as pairs (name:value)"
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Function definition as a value of an object"
                    },
                    {
                      "symbol": {
                        "name": "anonymous_func",
                        "isTerminal": false
                      },
                      "tooltip": "A function without a name"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "tooltip": "The first operand"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "selectedSymbol": 5,
                    "type": "SelectionBlock"
                  }
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "PLUS",
                    "isTerminal": true
                  },
                  "alias": "+",
                  "tooltip": "Performs addition"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "arith_op",
                      "isTerminal": false
                    },
                    "tooltip": "An arithmetic operator(e.g. +, -)"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "PLUS",
                        "isTerminal": true
                      },
                      "alias": "+",
                      "tooltip": "Performs addition"
                    },
                    {
                      "symbol": {
                        "name": "SUB",
                        "isTerminal": true
                      },
                      "alias": "-",
                      "tooltip": "Performs subtraction"
                    },
                    {
                      "symbol": {
                        "name": "MULT",
                        "isTerminal": true
                      },
                      "alias": "*",
                      "tooltip": "Performs multipliction"
                    },
                    {
                      "symbol": {
                        "name": "EXP",
                        "isTerminal": true
                      },
                      "alias": "**",
                      "tooltip": "Performs Exponentation"
                    },
                    {
                      "symbol": {
                        "name": "DIV",
                        "isTerminal": true
                      },
                      "alias": "/",
                      "tooltip": "Performs division"
                    },
                    {
                      "symbol": {
                        "name": "MODULO",
                        "isTerminal": true
                      },
                      "alias": "%",
                      "tooltip": "Performs the modulo operation"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "alias": "string2",
                  "tooltip": "Any sequence of characters or the empty sequence"
                },
                "type": "InputBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "variable",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                    },
                    {
                      "symbol": {
                        "name": "INT_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                    },
                    {
                      "symbol": {
                        "name": "FLOAT_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                    },
                    {
                      "symbol": {
                        "name": "CHAR_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "One single character"
                    },
                    {
                      "symbol": {
                        "name": "STRING_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "Any sequence of characters or the empty sequence"
                    },
                    {
                      "symbol": {
                        "name": "BOOLEAN",
                        "isTerminal": false
                      },
                      "tooltip": "One of true or false"
                    },
                    {
                      "symbol": {
                        "name": "ARRAY_CONST",
                        "isTerminal": false
                      },
                      "tooltip": "An array of elements"
                    },
                    {
                      "symbol": {
                        "name": "OBJECT_CONST",
                        "isTerminal": false
                      },
                      "tooltip": "Variable with many values as pairs (name:value)"
                    },
                    {
                      "symbol": {
                        "name": "func_def",
                        "isTerminal": false
                      },
                      "tooltip": "Function definition as a value of an object"
                    },
                    {
                      "symbol": {
                        "name": "anonymous_func",
                        "isTerminal": false
                      },
                      "tooltip": "A function without a name"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "tooltip": "The second operand"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "selectedSymbol": 5,
                    "type": "SelectionBlock"
                  }
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "arith_expr",
                  "isTerminal": false
                },
                "tooltip": "Perform a mathematic operation"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "binary_arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An arithmetic expression with two operands"
                },
                {
                  "symbol": {
                    "name": "unary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Unary expression operator with single operand,either before or after the operator"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "string_method_call",
                "isTerminal": false
              },
              "tooltip": "Use a built-in string method"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "string"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "string_concat",
                    "isTerminal": false
                  },
                  "alias": "concat",
                  "tooltip": "Join two strings to one"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "concat",
                        "isTerminal": true
                      }
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "LP",
                        "isTerminal": true
                      },
                      "alias": "("
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "string2"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "RP",
                        "isTerminal": true
                      },
                      "alias": ")"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "string_method",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "string_concat",
                        "isTerminal": false
                      },
                      "alias": "concat",
                      "tooltip": "Join two strings to one"
                    },
                    {
                      "symbol": {
                        "name": "string_upperCase",
                        "isTerminal": false
                      },
                      "alias": "toUpperCase",
                      "tooltip": "A string is converted to upper case"
                    },
                    {
                      "symbol": {
                        "name": "string_lowCase",
                        "isTerminal": false
                      },
                      "alias": "toLowCase",
                      "tooltip": "A string is converted to lower case"
                    },
                    {
                      "symbol": {
                        "name": "string_substring",
                        "isTerminal": false
                      },
                      "alias": "substring",
                      "tooltip": "Get a substring of a string, giving a start position and an end position"
                    },
                    {
                      "symbol": {
                        "name": "string_size",
                        "isTerminal": false
                      },
                      "alias": "length",
                      "tooltip": "Get the count of characters contained in the string"
                    },
                    {
                      "symbol": {
                        "name": "string_slice",
                        "isTerminal": false
                      },
                      "alias": "slice",
                      "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "string_method_call",
                "isTerminal": false
              },
              "tooltip": "Use a built-in string method"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "string"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "string_upperCase",
                    "isTerminal": false
                  },
                  "alias": "toUpperCase",
                  "tooltip": "A string is converted to upper case"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "toUpperCase",
                        "isTerminal": true
                      }
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "PARENTH_CALL",
                        "isTerminal": true
                      },
                      "alias": "()"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "string_method",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "string_concat",
                        "isTerminal": false
                      },
                      "alias": "concat",
                      "tooltip": "Join two strings to one"
                    },
                    {
                      "symbol": {
                        "name": "string_upperCase",
                        "isTerminal": false
                      },
                      "alias": "toUpperCase",
                      "tooltip": "A string is converted to upper case"
                    },
                    {
                      "symbol": {
                        "name": "string_lowCase",
                        "isTerminal": false
                      },
                      "alias": "toLowCase",
                      "tooltip": "A string is converted to lower case"
                    },
                    {
                      "symbol": {
                        "name": "string_substring",
                        "isTerminal": false
                      },
                      "alias": "substring",
                      "tooltip": "Get a substring of a string, giving a start position and an end position"
                    },
                    {
                      "symbol": {
                        "name": "string_size",
                        "isTerminal": false
                      },
                      "alias": "length",
                      "tooltip": "Get the count of characters contained in the string"
                    },
                    {
                      "symbol": {
                        "name": "string_slice",
                        "isTerminal": false
                      },
                      "alias": "slice",
                      "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "string_method_call",
                "isTerminal": false
              },
              "tooltip": "Use a built-in string method"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "string"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "string_lowCase",
                    "isTerminal": false
                  },
                  "alias": "toLowCase",
                  "tooltip": "A string is converted to lower case"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "toLowerCase",
                        "isTerminal": true
                      }
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "PARENTH_CALL",
                        "isTerminal": true
                      },
                      "alias": "()"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "string_method",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "string_concat",
                        "isTerminal": false
                      },
                      "alias": "concat",
                      "tooltip": "Join two strings to one"
                    },
                    {
                      "symbol": {
                        "name": "string_upperCase",
                        "isTerminal": false
                      },
                      "alias": "toUpperCase",
                      "tooltip": "A string is converted to upper case"
                    },
                    {
                      "symbol": {
                        "name": "string_lowCase",
                        "isTerminal": false
                      },
                      "alias": "toLowCase",
                      "tooltip": "A string is converted to lower case"
                    },
                    {
                      "symbol": {
                        "name": "string_substring",
                        "isTerminal": false
                      },
                      "alias": "substring",
                      "tooltip": "Get a substring of a string, giving a start position and an end position"
                    },
                    {
                      "symbol": {
                        "name": "string_size",
                        "isTerminal": false
                      },
                      "alias": "length",
                      "tooltip": "Get the count of characters contained in the string"
                    },
                    {
                      "symbol": {
                        "name": "string_slice",
                        "isTerminal": false
                      },
                      "alias": "slice",
                      "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                    }
                  ],
                  "selectedSymbol": 2,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "string_method_call",
                "isTerminal": false
              },
              "tooltip": "Use a built-in string method"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "string"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "string_substring",
                    "isTerminal": false
                  },
                  "alias": "substring",
                  "tooltip": "Get a substring of a string, giving a start position and an end position"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "substring",
                        "isTerminal": true
                      }
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "LP",
                        "isTerminal": true
                      },
                      "alias": "("
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "start_index"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "end_index"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "RP",
                        "isTerminal": true
                      },
                      "alias": ")"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "string_method",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "string_concat",
                        "isTerminal": false
                      },
                      "alias": "concat",
                      "tooltip": "Join two strings to one"
                    },
                    {
                      "symbol": {
                        "name": "string_upperCase",
                        "isTerminal": false
                      },
                      "alias": "toUpperCase",
                      "tooltip": "A string is converted to upper case"
                    },
                    {
                      "symbol": {
                        "name": "string_lowCase",
                        "isTerminal": false
                      },
                      "alias": "toLowCase",
                      "tooltip": "A string is converted to lower case"
                    },
                    {
                      "symbol": {
                        "name": "string_substring",
                        "isTerminal": false
                      },
                      "alias": "substring",
                      "tooltip": "Get a substring of a string, giving a start position and an end position"
                    },
                    {
                      "symbol": {
                        "name": "string_size",
                        "isTerminal": false
                      },
                      "alias": "length",
                      "tooltip": "Get the count of characters contained in the string"
                    },
                    {
                      "symbol": {
                        "name": "string_slice",
                        "isTerminal": false
                      },
                      "alias": "slice",
                      "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                    }
                  ],
                  "selectedSymbol": 3,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "string_method_call",
                "isTerminal": false
              },
              "tooltip": "Use a built-in string method"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "string"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "length",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "string_method",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "string_concat",
                        "isTerminal": false
                      },
                      "alias": "concat",
                      "tooltip": "Join two strings to one"
                    },
                    {
                      "symbol": {
                        "name": "string_upperCase",
                        "isTerminal": false
                      },
                      "alias": "toUpperCase",
                      "tooltip": "A string is converted to upper case"
                    },
                    {
                      "symbol": {
                        "name": "string_lowCase",
                        "isTerminal": false
                      },
                      "alias": "toLowCase",
                      "tooltip": "A string is converted to lower case"
                    },
                    {
                      "symbol": {
                        "name": "string_substring",
                        "isTerminal": false
                      },
                      "alias": "substring",
                      "tooltip": "Get a substring of a string, giving a start position and an end position"
                    },
                    {
                      "symbol": {
                        "name": "string_size",
                        "isTerminal": false
                      },
                      "alias": "length",
                      "tooltip": "Get the count of characters contained in the string"
                    },
                    {
                      "symbol": {
                        "name": "string_slice",
                        "isTerminal": false
                      },
                      "alias": "slice",
                      "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "string_method_call",
                "isTerminal": false
              },
              "tooltip": "Use a built-in string method"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "string"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "string_slice",
                    "isTerminal": false
                  },
                  "alias": "slice",
                  "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "slice",
                        "isTerminal": true
                      }
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "LP",
                        "isTerminal": true
                      },
                      "alias": "("
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "start_index"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "end_index"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "RP",
                        "isTerminal": true
                      },
                      "alias": ")"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "string_method",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "string_concat",
                        "isTerminal": false
                      },
                      "alias": "concat",
                      "tooltip": "Join two strings to one"
                    },
                    {
                      "symbol": {
                        "name": "string_upperCase",
                        "isTerminal": false
                      },
                      "alias": "toUpperCase",
                      "tooltip": "A string is converted to upper case"
                    },
                    {
                      "symbol": {
                        "name": "string_lowCase",
                        "isTerminal": false
                      },
                      "alias": "toLowCase",
                      "tooltip": "A string is converted to lower case"
                    },
                    {
                      "symbol": {
                        "name": "string_substring",
                        "isTerminal": false
                      },
                      "alias": "substring",
                      "tooltip": "Get a substring of a string, giving a start position and an end position"
                    },
                    {
                      "symbol": {
                        "name": "string_size",
                        "isTerminal": false
                      },
                      "alias": "length",
                      "tooltip": "Get the count of characters contained in the string"
                    },
                    {
                      "symbol": {
                        "name": "string_slice",
                        "isTerminal": false
                      },
                      "alias": "slice",
                      "tooltip": "Extracts a part of a string and returns the extracted part in a new string, giving a start position and an end position"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock"
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "Array",
        "icon": "./Images/Toolbox/array.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "ARRAY_CONST",
                "isTerminal": false
              },
              "tooltip": "An array of elements"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "LSB",
                    "isTerminal": true
                  },
                  "alias": "["
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "element_list",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "element"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "element"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RSB",
                    "isTerminal": true
                  },
                  "alias": "]"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "consts",
                  "isTerminal": false
                },
                "tooltip": "All const values"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                },
                {
                  "symbol": {
                    "name": "FLOAT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                },
                {
                  "symbol": {
                    "name": "CHAR_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "One single character"
                },
                {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "Any sequence of characters or the empty sequence"
                },
                {
                  "symbol": {
                    "name": "BOOLEAN_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "One of true or false"
                },
                {
                  "symbol": {
                    "name": "ARRAY_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "An array of elements"
                },
                {
                  "symbol": {
                    "name": "OBJECT_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "Variable with many values as pairs (name:value)"
                }
              ],
              "selectedSymbol": 5,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "object_set",
                      "isTerminal": false
                    },
                    "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "array_set",
                      "isTerminal": false
                    },
                    "tooltip": "Modify an element in a position of the array to a new character"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "new_array",
                "isTerminal": false
              },
              "tooltip": "Define a new array"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "array name"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "="
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ARRAY_CONST",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "LSB",
                        "isTerminal": true
                      },
                      "alias": "["
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "element_list",
                        "isTerminal": false
                      }
                    },
                    "elems": [
                      {
                        "symbol": {
                          "symbol": {
                            "name": "expr",
                            "isTerminal": false
                          },
                          "alias": "element"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "arith_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Perform a mathematic operation"
                          },
                          {
                            "symbol": {
                              "name": "rel_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An operator that compares the two operands and returns true or false"
                          },
                          {
                            "symbol": {
                              "name": "logical_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An expression that evaluates to true or false"
                          },
                          {
                            "symbol": {
                              "name": "assign_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Set a variable's value"
                          },
                          {
                            "symbol": {
                              "name": "call_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Call a user-defined or built-in function/method"
                          },
                          {
                            "symbol": {
                              "name": "primary_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An identifier or a constant"
                          }
                        ],
                        "type": "SelectionBlock"
                      }
                    ],
                    "repetitiveElem": {
                      "symbol": {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "element"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "arith_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Perform a mathematic operation"
                        },
                        {
                          "symbol": {
                            "name": "rel_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An operator that compares the two operands and returns true or false"
                        },
                        {
                          "symbol": {
                            "name": "logical_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An expression that evaluates to true or false"
                        },
                        {
                          "symbol": {
                            "name": "assign_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Set a variable's value"
                        },
                        {
                          "symbol": {
                            "name": "call_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Call a user-defined or built-in function/method"
                        },
                        {
                          "symbol": {
                            "name": "primary_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An identifier or a constant"
                        }
                      ],
                      "type": "SelectionBlock"
                    },
                    "type": "RepetitionGroup"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "RSB",
                        "isTerminal": true
                      },
                      "alias": "]"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "consts",
                    "isTerminal": false
                  },
                  "tooltip": "All const values"
                },
                {
                  "symbol": {
                    "name": "object_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its property name in the object"
                },
                {
                  "symbol": {
                    "name": "object_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                },
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "new_array",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new array"
                },
                {
                  "symbol": {
                    "name": "new_object",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new object"
                },
                {
                  "symbol": {
                    "name": "func_definition",
                    "isTerminal": false
                  },
                  "tooltip": "Function definition"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "array_get",
                "isTerminal": false
              },
              "tooltip": "Get an element by its position in the array"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "arrayName"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LSB",
                    "isTerminal": true
                  },
                  "alias": "["
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "index"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RSB",
                    "isTerminal": true
                  },
                  "alias": "]"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "consts",
                    "isTerminal": false
                  },
                  "tooltip": "All const values"
                },
                {
                  "symbol": {
                    "name": "object_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its property name in the object"
                },
                {
                  "symbol": {
                    "name": "object_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                },
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "new_array",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new array"
                },
                {
                  "symbol": {
                    "name": "new_object",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new object"
                },
                {
                  "symbol": {
                    "name": "func_definition",
                    "isTerminal": false
                  },
                  "tooltip": "Function definition"
                }
              ],
              "selectedSymbol": 4,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "array_set",
                "isTerminal": false
              },
              "tooltip": "Modify an element in a position of the array to a new character"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "arrayName"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LSB",
                    "isTerminal": true
                  },
                  "alias": "["
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "index"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RSB",
                    "isTerminal": true
                  },
                  "alias": "]"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "="
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "element"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "consts",
                    "isTerminal": false
                  },
                  "tooltip": "All const values"
                },
                {
                  "symbol": {
                    "name": "object_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its property name in the object"
                },
                {
                  "symbol": {
                    "name": "object_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                },
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "new_array",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new array"
                },
                {
                  "symbol": {
                    "name": "new_object",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new object"
                },
                {
                  "symbol": {
                    "name": "func_definition",
                    "isTerminal": false
                  },
                  "tooltip": "Function definition"
                }
              ],
              "selectedSymbol": 5,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "array_push",
                "isTerminal": false
              },
              "alias": "push",
              "tooltip": "Insert an element at the end of the array"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "arrayName"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "push",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "element"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "array_method_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in array method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "alias": "get",
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "alias": "set",
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "array_push",
                    "isTerminal": false
                  },
                  "alias": "push",
                  "tooltip": "Insert an element at the end of the array"
                },
                {
                  "symbol": {
                    "name": "array_pop",
                    "isTerminal": false
                  },
                  "alias": "pop",
                  "tooltip": "Returns the last element of the array"
                },
                {
                  "symbol": {
                    "name": "array_size",
                    "isTerminal": false
                  },
                  "alias": "length",
                  "tooltip": "Get the number of elements in the array"
                },
                {
                  "symbol": {
                    "name": "array_join",
                    "isTerminal": false
                  },
                  "alias": "join",
                  "tooltip": "Joins all array elements into a string, you can specify the separator"
                },
                {
                  "symbol": {
                    "name": "array_to_string",
                    "isTerminal": false
                  },
                  "alias": "tostring",
                  "tooltip": "Converts an array to a string of (comma separated) array values"
                }
              ],
              "selectedSymbol": 2,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "array_pop",
                "isTerminal": false
              },
              "alias": "pop",
              "tooltip": "Returns the last element of the array"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "arrayName"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "pop",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "PARENTH_CALL",
                    "isTerminal": true
                  },
                  "alias": "()"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "array_method_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in array method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "alias": "get",
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "alias": "set",
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "array_push",
                    "isTerminal": false
                  },
                  "alias": "push",
                  "tooltip": "Insert an element at the end of the array"
                },
                {
                  "symbol": {
                    "name": "array_pop",
                    "isTerminal": false
                  },
                  "alias": "pop",
                  "tooltip": "Returns the last element of the array"
                },
                {
                  "symbol": {
                    "name": "array_size",
                    "isTerminal": false
                  },
                  "alias": "length",
                  "tooltip": "Get the number of elements in the array"
                },
                {
                  "symbol": {
                    "name": "array_join",
                    "isTerminal": false
                  },
                  "alias": "join",
                  "tooltip": "Joins all array elements into a string, you can specify the separator"
                },
                {
                  "symbol": {
                    "name": "array_to_string",
                    "isTerminal": false
                  },
                  "alias": "tostring",
                  "tooltip": "Converts an array to a string of (comma separated) array values"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "array_size",
                "isTerminal": false
              },
              "alias": "length",
              "tooltip": "Get the number of elements in the array"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "arrayName"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "length",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "array_method_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in array method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "alias": "get",
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "alias": "set",
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "array_push",
                    "isTerminal": false
                  },
                  "alias": "push",
                  "tooltip": "Insert an element at the end of the array"
                },
                {
                  "symbol": {
                    "name": "array_pop",
                    "isTerminal": false
                  },
                  "alias": "pop",
                  "tooltip": "Returns the last element of the array"
                },
                {
                  "symbol": {
                    "name": "array_size",
                    "isTerminal": false
                  },
                  "alias": "length",
                  "tooltip": "Get the number of elements in the array"
                },
                {
                  "symbol": {
                    "name": "array_join",
                    "isTerminal": false
                  },
                  "alias": "join",
                  "tooltip": "Joins all array elements into a string, you can specify the separator"
                },
                {
                  "symbol": {
                    "name": "array_to_string",
                    "isTerminal": false
                  },
                  "alias": "tostring",
                  "tooltip": "Converts an array to a string of (comma separated) array values"
                }
              ],
              "selectedSymbol": 4,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "array_join",
                "isTerminal": false
              },
              "alias": "join",
              "tooltip": "Joins all array elements into a string, you can specify the separator"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "arrayName"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "join",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "seperator"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "array_method_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in array method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "alias": "get",
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "alias": "set",
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "array_push",
                    "isTerminal": false
                  },
                  "alias": "push",
                  "tooltip": "Insert an element at the end of the array"
                },
                {
                  "symbol": {
                    "name": "array_pop",
                    "isTerminal": false
                  },
                  "alias": "pop",
                  "tooltip": "Returns the last element of the array"
                },
                {
                  "symbol": {
                    "name": "array_size",
                    "isTerminal": false
                  },
                  "alias": "length",
                  "tooltip": "Get the number of elements in the array"
                },
                {
                  "symbol": {
                    "name": "array_join",
                    "isTerminal": false
                  },
                  "alias": "join",
                  "tooltip": "Joins all array elements into a string, you can specify the separator"
                },
                {
                  "symbol": {
                    "name": "array_to_string",
                    "isTerminal": false
                  },
                  "alias": "tostring",
                  "tooltip": "Converts an array to a string of (comma separated) array values"
                }
              ],
              "selectedSymbol": 5,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "array_to_string",
                "isTerminal": false
              },
              "alias": "tostring",
              "tooltip": "Converts an array to a string of (comma separated) array values"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "arrayName"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "tostring",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "PARENTH_CALL",
                    "isTerminal": true
                  },
                  "alias": "()"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "array_method_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in array method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "alias": "get",
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "alias": "set",
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "array_push",
                    "isTerminal": false
                  },
                  "alias": "push",
                  "tooltip": "Insert an element at the end of the array"
                },
                {
                  "symbol": {
                    "name": "array_pop",
                    "isTerminal": false
                  },
                  "alias": "pop",
                  "tooltip": "Returns the last element of the array"
                },
                {
                  "symbol": {
                    "name": "array_size",
                    "isTerminal": false
                  },
                  "alias": "length",
                  "tooltip": "Get the number of elements in the array"
                },
                {
                  "symbol": {
                    "name": "array_join",
                    "isTerminal": false
                  },
                  "alias": "join",
                  "tooltip": "Joins all array elements into a string, you can specify the separator"
                },
                {
                  "symbol": {
                    "name": "array_to_string",
                    "isTerminal": false
                  },
                  "alias": "tostring",
                  "tooltip": "Converts an array to a string of (comma separated) array values"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "Object",
        "icon": "./Images/Toolbox/array.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "OBJECT_CONST",
                "isTerminal": false
              },
              "tooltip": "Variable with many values as pairs (name:value)"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "pair_element_list",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "pair_element",
                        "isTerminal": false
                      }
                    },
                    "elems": [
                      {
                        "symbol": {
                          "symbol": {
                            "name": "IDENT",
                            "isTerminal": true
                          },
                          "tooltip": "The identifier of the value"
                        },
                        "type": "InputBlock"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "COLON",
                            "isTerminal": true
                          },
                          "alias": ":",
                          "tooltip": "The pair"
                        },
                        "type": "SimpleBlock"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "expr",
                            "isTerminal": false
                          },
                          "alias": "value",
                          "tooltip": "The value of the property"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "arith_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Perform a mathematic operation"
                          },
                          {
                            "symbol": {
                              "name": "rel_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An operator that compares the two operands and returns true or false"
                          },
                          {
                            "symbol": {
                              "name": "logical_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An expression that evaluates to true or false"
                          },
                          {
                            "symbol": {
                              "name": "assign_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Set a variable's value"
                          },
                          {
                            "symbol": {
                              "name": "call_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Call a user-defined or built-in function/method"
                          },
                          {
                            "symbol": {
                              "name": "primary_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An identifier or a constant"
                          }
                        ],
                        "type": "SelectionBlock"
                      }
                    ],
                    "type": "Group"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "pair_element",
                      "isTerminal": false
                    }
                  },
                  "elems": [
                    {
                      "symbol": {
                        "symbol": {
                          "name": "IDENT",
                          "isTerminal": true
                        },
                        "tooltip": "The identifier of the value"
                      },
                      "type": "InputBlock"
                    },
                    {
                      "symbol": {
                        "symbol": {
                          "name": "COLON",
                          "isTerminal": true
                        },
                        "alias": ":",
                        "tooltip": "The pair"
                      },
                      "type": "SimpleBlock"
                    },
                    {
                      "symbol": {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "value",
                        "tooltip": "The value of the property"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "arith_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Perform a mathematic operation"
                        },
                        {
                          "symbol": {
                            "name": "rel_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An operator that compares the two operands and returns true or false"
                        },
                        {
                          "symbol": {
                            "name": "logical_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An expression that evaluates to true or false"
                        },
                        {
                          "symbol": {
                            "name": "assign_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Set a variable's value"
                        },
                        {
                          "symbol": {
                            "name": "call_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Call a user-defined or built-in function/method"
                        },
                        {
                          "symbol": {
                            "name": "primary_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An identifier or a constant"
                        }
                      ],
                      "type": "SelectionBlock"
                    }
                  ],
                  "type": "Group"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "consts",
                  "isTerminal": false
                },
                "tooltip": "All const values"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                },
                {
                  "symbol": {
                    "name": "FLOAT_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                },
                {
                  "symbol": {
                    "name": "CHAR_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "One single character"
                },
                {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "tooltip": "Any sequence of characters or the empty sequence"
                },
                {
                  "symbol": {
                    "name": "BOOLEAN_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "One of true or false"
                },
                {
                  "symbol": {
                    "name": "ARRAY_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "An array of elements"
                },
                {
                  "symbol": {
                    "name": "OBJECT_CONST",
                    "isTerminal": false
                  },
                  "tooltip": "Variable with many values as pairs (name:value)"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "object_set",
                      "isTerminal": false
                    },
                    "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "array_set",
                      "isTerminal": false
                    },
                    "tooltip": "Modify an element in a position of the array to a new character"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "new_object",
                "isTerminal": false
              },
              "tooltip": "Define a new object"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "object name"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "="
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "OBJECT_CONST",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "LB",
                        "isTerminal": true
                      },
                      "alias": "{"
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "pair_element_list",
                        "isTerminal": false
                      }
                    },
                    "elems": [],
                    "repetitiveElem": {
                      "symbol": {
                        "symbol": {
                          "name": "pair_element",
                          "isTerminal": false
                        }
                      },
                      "elems": [
                        {
                          "symbol": {
                            "symbol": {
                              "name": "IDENT",
                              "isTerminal": true
                            },
                            "tooltip": "The identifier of the value"
                          },
                          "type": "InputBlock"
                        },
                        {
                          "symbol": {
                            "symbol": {
                              "name": "COLON",
                              "isTerminal": true
                            },
                            "alias": ":",
                            "tooltip": "The pair"
                          },
                          "type": "SimpleBlock"
                        },
                        {
                          "symbol": {
                            "symbol": {
                              "name": "expr",
                              "isTerminal": false
                            },
                            "alias": "value",
                            "tooltip": "The value of the property"
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "arith_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Perform a mathematic operation"
                            },
                            {
                              "symbol": {
                                "name": "rel_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An operator that compares the two operands and returns true or false"
                            },
                            {
                              "symbol": {
                                "name": "logical_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An expression that evaluates to true or false"
                            },
                            {
                              "symbol": {
                                "name": "assign_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Set a variable's value"
                            },
                            {
                              "symbol": {
                                "name": "call_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Call a user-defined or built-in function/method"
                            },
                            {
                              "symbol": {
                                "name": "primary_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An identifier or a constant"
                            }
                          ],
                          "type": "SelectionBlock"
                        }
                      ],
                      "type": "Group"
                    },
                    "type": "RepetitionGroup"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "RB",
                        "isTerminal": true
                      },
                      "alias": "}"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "consts",
                    "isTerminal": false
                  },
                  "tooltip": "All const values"
                },
                {
                  "symbol": {
                    "name": "keys",
                    "isTerminal": false
                  },
                  "tooltip": "All keyboard keys"
                },
                {
                  "symbol": {
                    "name": "object_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element of an object by its property name"
                },
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element of an array by its position"
                },
                {
                  "symbol": {
                    "name": "new_array",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new array"
                },
                {
                  "symbol": {
                    "name": "new_object",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new object"
                },
                {
                  "symbol": {
                    "name": "func_definition",
                    "isTerminal": false
                  },
                  "tooltip": "Define reusable code as a function"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "repeat_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Repeat the stmts, certain times"
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "object_get_dot",
                "isTerminal": false
              },
              "tooltip": "Get with syntax objectName.property"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "object name"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "property"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "object_get",
                  "isTerminal": false
                },
                "tooltip": "Get an element by its property name in the object"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "object_get_dot",
                    "isTerminal": false
                  },
                  "tooltip": "Get with syntax objectName.property"
                },
                {
                  "symbol": {
                    "name": "object_get_sq",
                    "isTerminal": false
                  },
                  "tooltip": "Get with syntax objectName[\"property\"]"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "object_set",
                      "isTerminal": false
                    },
                    "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "array_set",
                      "isTerminal": false
                    },
                    "tooltip": "Modify an element in a position of the array to a new character"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "object_get_sq",
                "isTerminal": false
              },
              "tooltip": "Get with syntax objectName[\"property\"], property should be a string"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "object name"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LSB",
                    "isTerminal": true
                  },
                  "alias": "["
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "property"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RSB",
                    "isTerminal": true
                  },
                  "alias": "]"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "object_get",
                  "isTerminal": false
                },
                "tooltip": "Get an element by its property name in the object"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "object_get_dot",
                    "isTerminal": false
                  },
                  "tooltip": "Get with syntax objectName.property"
                },
                {
                  "symbol": {
                    "name": "object_get_sq",
                    "isTerminal": false
                  },
                  "tooltip": "Get with syntax objectName[\"property\"], property should be a string"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "selectedSymbol": 2,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 6,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "object_set",
                "isTerminal": false
              },
              "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "object name"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LSB",
                    "isTerminal": true
                  },
                  "alias": "["
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "property"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RSB",
                    "isTerminal": true
                  },
                  "alias": "]"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "="
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "value"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "primary_expr",
                  "isTerminal": false
                },
                "tooltip": "An identifier or a constant"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                {
                  "symbol": {
                    "name": "consts",
                    "isTerminal": false
                  },
                  "tooltip": "All const values"
                },
                {
                  "symbol": {
                    "name": "object_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its property name in the object"
                },
                {
                  "symbol": {
                    "name": "object_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                },
                {
                  "symbol": {
                    "name": "array_get",
                    "isTerminal": false
                  },
                  "tooltip": "Get an element by its position in the array"
                },
                {
                  "symbol": {
                    "name": "array_set",
                    "isTerminal": false
                  },
                  "tooltip": "Modify an element in a position of the array to a new character"
                },
                {
                  "symbol": {
                    "name": "new_array",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new array"
                },
                {
                  "symbol": {
                    "name": "new_object",
                    "isTerminal": false
                  },
                  "tooltip": "Define a new object"
                },
                {
                  "symbol": {
                    "name": "func_definition",
                    "isTerminal": false
                  },
                  "tooltip": "Function definition"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 5,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "object_delete",
                "isTerminal": false
              },
              "alias": "delete",
              "tooltip": "Delete a pair (property:value) by property name"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "delete",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "object name"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LSB",
                    "isTerminal": true
                  },
                  "alias": "["
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "property"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RSB",
                    "isTerminal": true
                  },
                  "alias": "]"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "object_method_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in object method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "object_get",
                    "isTerminal": false
                  },
                  "alias": "get",
                  "tooltip": "Get an element by its property name in the object e.g objectName.property or objectName[property]"
                },
                {
                  "symbol": {
                    "name": "object_delete",
                    "isTerminal": false
                  },
                  "alias": "delete",
                  "tooltip": "Delete a pair (property:value) by property name"
                },
                {
                  "symbol": {
                    "name": "object_set",
                    "isTerminal": false
                  },
                  "alias": "set",
                  "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                },
                {
                  "symbol": {
                    "name": "object_size",
                    "isTerminal": false
                  },
                  "alias": "length",
                  "tooltip": "Get the count of properties in the object"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 3,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "object_size",
                "isTerminal": false
              },
              "alias": "length",
              "tooltip": "Get the count of properties in the object"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "object name"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DOT",
                    "isTerminal": true
                  },
                  "alias": "."
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "length",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "object_method_call",
                  "isTerminal": false
                },
                "tooltip": "Use a built-in object method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "object_get",
                    "isTerminal": false
                  },
                  "alias": "get",
                  "tooltip": "Get an element by its property name in the object e.g objectName.property or objectName[property]"
                },
                {
                  "symbol": {
                    "name": "object_delete",
                    "isTerminal": false
                  },
                  "alias": "delete",
                  "tooltip": "Delete a pair (property:value) by property name"
                },
                {
                  "symbol": {
                    "name": "object_set",
                    "isTerminal": false
                  },
                  "alias": "set",
                  "tooltip": "Modify a value by its property name in the object to a new value. If the property does not exist,the pair property:value will be added in the object"
                },
                {
                  "symbol": {
                    "name": "object_size",
                    "isTerminal": false
                  },
                  "alias": "length",
                  "tooltip": "Get the count of properties in the object"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 3,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "I/O",
        "icon": "./Images/Toolbox/io.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "print_call",
                "isTerminal": false
              },
              "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "console.log",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "color",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "black",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "red",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "blue",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "green",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "yellow",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "cyan",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "magenta",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "rgb_color",
                      "isTerminal": false
                    },
                    "tooltip": "Define the color as rgb"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr_list",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "arg"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "arg"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "input",
                    "isTerminal": false
                  },
                  "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                },
                {
                  "symbol": {
                    "name": "key_event",
                    "isTerminal": false
                  },
                  "tooltip": "Add and remove event listener for a key of your choice"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 5,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "repeat_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Repeat the stmts, certain times"
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "output_color",
                "isTerminal": false
              },
              "tooltip": "Change the color of the text in the output console"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "set_console_color",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "color",
                    "isTerminal": false
                  },
                  "tooltip": "Change the color of the text in the output console"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "black",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "red",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "blue",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "green",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "yellow",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "cyan",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "magenta",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "rgb_color",
                      "isTerminal": false
                    },
                    "tooltip": "Define the color as rgb"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "output_color",
                    "isTerminal": false
                  },
                  "tooltip": "Change the color of the text in the output console"
                },
                {
                  "symbol": {
                    "name": "input",
                    "isTerminal": false
                  },
                  "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                },
                {
                  "symbol": {
                    "name": "key_event",
                    "isTerminal": false
                  },
                  "tooltip": "Add and remove event listener for a key of your choice"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "repeat_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Repeat the stmts, certain times"
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "input",
                "isTerminal": false
              },
              "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "prompt",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "alias": "prompt_message"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "input",
                    "isTerminal": false
                  },
                  "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "variable",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "IDENT",
                      "isTerminal": true
                    },
                    "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                  },
                  {
                    "symbol": {
                      "name": "ident_type",
                      "isTerminal": false
                    },
                    "tooltip": "Identifier with type"
                  }
                ],
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Left operand to be assigned"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "variable",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                    },
                    {
                      "symbol": {
                        "name": "consts",
                        "isTerminal": false
                      },
                      "tooltip": "All const values"
                    },
                    {
                      "symbol": {
                        "name": "object_get",
                        "isTerminal": false
                      },
                      "tooltip": "Get an element by its property name in the object"
                    },
                    {
                      "symbol": {
                        "name": "array_get",
                        "isTerminal": false
                      },
                      "tooltip": "Get an element by its position in the array"
                    },
                    {
                      "symbol": {
                        "name": "new_array",
                        "isTerminal": false
                      },
                      "tooltip": "Define a new array"
                    },
                    {
                      "symbol": {
                        "name": "new_object",
                        "isTerminal": false
                      },
                      "tooltip": "Define a new object"
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Function definition"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "=",
                  "tooltip": "Assigns the right operand to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "input",
                    "isTerminal": false
                  },
                  "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "prompt",
                        "isTerminal": true
                      }
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "LP",
                        "isTerminal": true
                      },
                      "alias": "("
                    },
                    "type": "SimpleBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "STRING_CONST",
                        "isTerminal": true
                      },
                      "alias": "prompt_message"
                    },
                    "type": "InputBlock"
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "RP",
                        "isTerminal": true
                      },
                      "alias": ")"
                    },
                    "type": "SimpleBlock"
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "math_call",
                        "isTerminal": false
                      },
                      "tooltip": "Use a built-in math function"
                    },
                    {
                      "symbol": {
                        "name": "string_method_call",
                        "isTerminal": false
                      },
                      "tooltip": "Use a built-in string method"
                    },
                    {
                      "symbol": {
                        "name": "array_method_call",
                        "isTerminal": false
                      },
                      "tooltip": "Use a built-in array method"
                    },
                    {
                      "symbol": {
                        "name": "object_method_call",
                        "isTerminal": false
                      },
                      "tooltip": "Use a built-in object method"
                    },
                    {
                      "symbol": {
                        "name": "function_call",
                        "isTerminal": false
                      },
                      "tooltip": "Use a user-defined function as \"name(params);\""
                    },
                    {
                      "symbol": {
                        "name": "print_call",
                        "isTerminal": false
                      },
                      "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                    },
                    {
                      "symbol": {
                        "name": "input",
                        "isTerminal": false
                      },
                      "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                    },
                    {
                      "symbol": {
                        "name": "type_of",
                        "isTerminal": false
                      },
                      "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                    }
                  ],
                  "selectedSymbol": 6,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "tooltip": "Right operand"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock"
                  }
                }
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "add_key_press",
                "isTerminal": false
              },
              "tooltip": "Do something when a keyboard key of your choice is pressed"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "add_on_key_press",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "key"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "alias": "event"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "key_event",
                  "isTerminal": false
                },
                "tooltip": "Add and remove event listener for a key of your choice"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "add_key_press",
                    "isTerminal": false
                  },
                  "tooltip": "Do something when a keyboard key of your choice is pressed"
                },
                {
                  "symbol": {
                    "name": "remove_key_press",
                    "isTerminal": false
                  },
                  "tooltip": "Remove the event listener from a key, you should have assigned it to a variable"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "input",
                      "isTerminal": false
                    },
                    "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                  },
                  {
                    "symbol": {
                      "name": "key_event",
                      "isTerminal": false
                    },
                    "tooltip": "Add and remove event listener for a key of your choice"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 7,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "remove_key_press",
                "isTerminal": false
              },
              "tooltip": "Remove the event listener from a key, you should have assigned it to a variable"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "remove_on_key_press",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "listener"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "key_event",
                  "isTerminal": false
                },
                "tooltip": "Do something when a keyboard key of your choice is pressed"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "add_key_press",
                    "isTerminal": false
                  },
                  "tooltip": "Do something when a keyboard key of your choice is pressed"
                },
                {
                  "symbol": {
                    "name": "remove_key_press",
                    "isTerminal": false
                  },
                  "tooltip": "Remove the event listener from a key, you should have assigned it to a variable"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "math_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in math function"
                  },
                  {
                    "symbol": {
                      "name": "string_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in string method"
                  },
                  {
                    "symbol": {
                      "name": "array_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in array method"
                  },
                  {
                    "symbol": {
                      "name": "object_method_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in object method"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a user-defined function as \"name(params);\""
                  },
                  {
                    "symbol": {
                      "name": "print_call",
                      "isTerminal": false
                    },
                    "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                  },
                  {
                    "symbol": {
                      "name": "input",
                      "isTerminal": false
                    },
                    "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                  },
                  {
                    "symbol": {
                      "name": "key_event",
                      "isTerminal": false
                    },
                    "tooltip": "Do something when a keyboard key of your choice is pressed"
                  },
                  {
                    "symbol": {
                      "name": "type_of",
                      "isTerminal": false
                    },
                    "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                  }
                ],
                "selectedSymbol": 7,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_definition",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "Variable",
        "icon": "./Images/Toolbox/variable.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "IDENT",
                "isTerminal": true
              },
              "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
            },
            "type": "InputBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "variable",
                  "isTerminal": false
                },
                "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                },
                {
                  "symbol": {
                    "name": "ident_type",
                    "isTerminal": false
                  },
                  "tooltip": "Identifier with type"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "INT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                  },
                  {
                    "symbol": {
                      "name": "FLOAT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                  },
                  {
                    "symbol": {
                      "name": "CHAR_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "One single character"
                  },
                  {
                    "symbol": {
                      "name": "STRING_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "Any sequence of characters or the empty sequence"
                  },
                  {
                    "symbol": {
                      "name": "BOOLEAN",
                      "isTerminal": false
                    },
                    "tooltip": "One of true or false"
                  },
                  {
                    "symbol": {
                      "name": "ARRAY_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "An array of elements"
                  },
                  {
                    "symbol": {
                      "name": "OBJECT_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "Variable with many values as pairs (name:value)"
                  },
                  {
                    "symbol": {
                      "name": "func_def",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition as a value of an object"
                  },
                  {
                    "symbol": {
                      "name": "anonymous_func",
                      "isTerminal": false
                    },
                    "tooltip": "A function without a name"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "ident_type",
                "isTerminal": false
              },
              "tooltip": "Identifier with type"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "types",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "var",
                      "isTerminal": true
                    },
                    "tooltip": "The scope of a var variable is functional scope"
                  },
                  {
                    "symbol": {
                      "name": "let",
                      "isTerminal": true
                    },
                    "tooltip": "The scope of a let variable is block scope"
                  },
                  {
                    "symbol": {
                      "name": "const",
                      "isTerminal": true
                    },
                    "tooltip": "The scope of a const variable is block scope"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "tooltip": "Select type of identifier"
                },
                "type": "InputBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "variable",
                  "isTerminal": false
                },
                "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                },
                {
                  "symbol": {
                    "name": "ident_type",
                    "isTerminal": false
                  },
                  "tooltip": "Identifier with type"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "INT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                  },
                  {
                    "symbol": {
                      "name": "FLOAT_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                  },
                  {
                    "symbol": {
                      "name": "CHAR_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "One single character"
                  },
                  {
                    "symbol": {
                      "name": "STRING_CONST",
                      "isTerminal": true
                    },
                    "tooltip": "Any sequence of characters or the empty sequence"
                  },
                  {
                    "symbol": {
                      "name": "BOOLEAN",
                      "isTerminal": false
                    },
                    "tooltip": "One of true or false"
                  },
                  {
                    "symbol": {
                      "name": "ARRAY_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "An array of elements"
                  },
                  {
                    "symbol": {
                      "name": "OBJECT_CONST",
                      "isTerminal": false
                    },
                    "tooltip": "Variable with many values as pairs (name:value)"
                  },
                  {
                    "symbol": {
                      "name": "func_def",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition as a value of an object"
                  },
                  {
                    "symbol": {
                      "name": "anonymous_func",
                      "isTerminal": false
                    },
                    "tooltip": "A function without a name"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "selectedSymbol": 4,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "def",
                          "isTerminal": false
                        }
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "stmt",
                            "isTerminal": false
                          }
                        },
                        {
                          "symbol": {
                            "name": "func_def",
                            "isTerminal": false
                          },
                          "tooltip": "Define reusable code as a function"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "type_of",
                "isTerminal": false
              },
              "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "typeof",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  }
                },
                "type": "InputBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "object_function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a function which is member of an object as \"object.function()\""
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 7,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_def",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      },
                      {
                        "symbol": {
                          "name": "anonymous_func",
                          "isTerminal": false
                        },
                        "tooltip": "A function without a name. Can be assigned to a variable"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Left operand to be assigned"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "=",
                  "tooltip": "Assigns the right operand to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "Right operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Left operand to be assigned"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "PLUS_ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "+=",
                  "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "Right operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Left operand to be assigned"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "SUB_ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "-=",
                  "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 2,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "Right operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Left operand to be assigned"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "MULT_ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "*=",
                  "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 3,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "Right operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Left operand to be assigned"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "DIV_ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "/=",
                  "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "Right operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Left operand to be assigned"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "MOD_ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "%=",
                  "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 5,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "Right operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "assign_expr",
                "isTerminal": false
              },
              "tooltip": "Set a variable's value"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Left operand to be assigned"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "EXP_ASSIGN",
                    "isTerminal": true
                  },
                  "alias": "**=",
                  "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                },
                "type": "SimpleBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "assign_op",
                      "isTerminal": false
                    },
                    "tooltip": "Assign operator, simple or with an operation "
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "PLUS_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "+=",
                      "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "SUB_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "-=",
                      "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MULT_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "*=",
                      "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "DIV_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "/=",
                      "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "MOD_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "%=",
                      "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                    },
                    {
                      "symbol": {
                        "name": "EXP_ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "**=",
                      "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                    }
                  ],
                  "selectedSymbol": 6,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "tooltip": "Right operand"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "expr",
                  "isTerminal": false
                },
                "alias": "expr_stmt",
                "tooltip": "A single expression as a statement"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "arith_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Perform a mathematic operation"
                },
                {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                {
                  "symbol": {
                    "name": "logical_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An expression that evaluates to true or false"
                },
                {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                {
                  "symbol": {
                    "name": "call_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Call a user-defined or built-in function/method"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An identifier or a constant"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          }
        ]
      },
      {
        "name": "Function",
        "icon": "./Images/Toolbox/function.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "named_func",
                "isTerminal": false
              },
              "tooltip": "Define a named function"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "function",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "name"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ident_list",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "variable",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "IDENT",
                          "isTerminal": true
                        },
                        "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                      },
                      {
                        "symbol": {
                          "name": "ident_type",
                          "isTerminal": false
                        },
                        "tooltip": "Identifier with type"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "IDENT",
                        "isTerminal": true
                      },
                      "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                    },
                    {
                      "symbol": {
                        "name": "ident_type",
                        "isTerminal": false
                      },
                      "tooltip": "Identifier with type"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "func_definition",
                  "isTerminal": false
                },
                "tooltip": "Define reusable code as a function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "named_func",
                    "isTerminal": false
                  },
                  "tooltip": "Define a named function"
                },
                {
                  "symbol": {
                    "name": "anonymous_func",
                    "isTerminal": false
                  },
                  "tooltip": "Define an anonymous function"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "anonymous_func",
                "isTerminal": false
              },
              "tooltip": "Define an anonymous function"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "function",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "ident_list",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "variable",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "IDENT",
                          "isTerminal": true
                        },
                        "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                      },
                      {
                        "symbol": {
                          "name": "ident_type",
                          "isTerminal": false
                        },
                        "tooltip": "Identifier with type"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "IDENT",
                        "isTerminal": true
                      },
                      "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                    },
                    {
                      "symbol": {
                        "name": "ident_type",
                        "isTerminal": false
                      },
                      "tooltip": "Identifier with type"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "if_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "if_else_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something if a condition is true, else do something else"
                      },
                      {
                        "symbol": {
                          "name": "while_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true"
                      },
                      {
                        "symbol": {
                          "name": "for_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                      },
                      {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "expr_stmt",
                        "tooltip": "A single expression as a statement"
                      },
                      {
                        "symbol": {
                          "name": "turtle_functions",
                          "isTerminal": false
                        },
                        "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                      },
                      {
                        "symbol": {
                          "name": "ternary_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                      },
                      {
                        "symbol": {
                          "name": "break_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Exit from the current loop"
                      },
                      {
                        "symbol": {
                          "name": "continue_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Continue to the next iteration of the current loop"
                      },
                      {
                        "symbol": {
                          "name": "return_stmt",
                          "isTerminal": false
                        },
                        "tooltip": "Return an expression as the result of the current function"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "func_definition",
                  "isTerminal": false
                },
                "tooltip": "Define reusable code as a function"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "named_func",
                    "isTerminal": false
                  },
                  "tooltip": "Define a named function"
                },
                {
                  "symbol": {
                    "name": "anonymous_func",
                    "isTerminal": false
                  },
                  "tooltip": "Define an anonymous function"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 1,
                "type": "SelectionBlock"
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "function_call",
                "isTerminal": false
              },
              "tooltip": "Use a user-defined function as \"name(params);\""
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "callee",
                    "isTerminal": false
                  },
                  "alias": "function name"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "IDENT",
                      "isTerminal": true
                    },
                    "tooltip": "Name of a defined function"
                  },
                  {
                    "symbol": {
                      "name": "object_function",
                      "isTerminal": false
                    },
                    "tooltip": "Name of a function which is member of an object"
                  },
                  {
                    "symbol": {
                      "name": "array_function",
                      "isTerminal": false
                    },
                    "tooltip": "Name of a function which is member of an array"
                  },
                  {
                    "symbol": {
                      "name": "function_call",
                      "isTerminal": false
                    },
                    "tooltip": "To call nested functions"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "expr_list",
                    "isTerminal": false
                  }
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "arg"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Perform a mathematic operation"
                      },
                      {
                        "symbol": {
                          "name": "rel_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An operator that compares the two operands and returns true or false"
                      },
                      {
                        "symbol": {
                          "name": "logical_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An expression that evaluates to true or false"
                      },
                      {
                        "symbol": {
                          "name": "assign_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Set a variable's value"
                      },
                      {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      {
                        "symbol": {
                          "name": "primary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier or a constant"
                      }
                    ],
                    "type": "SelectionBlock"
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "arg"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "call_expr",
                  "isTerminal": false
                },
                "tooltip": "Call a user-defined or built-in function/method"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "math_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in math function"
                },
                {
                  "symbol": {
                    "name": "string_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in string method"
                },
                {
                  "symbol": {
                    "name": "array_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in array method"
                },
                {
                  "symbol": {
                    "name": "object_method_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in object method"
                },
                {
                  "symbol": {
                    "name": "function_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a user-defined function as \"name(params);\""
                },
                {
                  "symbol": {
                    "name": "print_call",
                    "isTerminal": false
                  },
                  "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                },
                {
                  "symbol": {
                    "name": "type_of",
                    "isTerminal": false
                  },
                  "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                }
              ],
              "selectedSymbol": 4,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "arith_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Perform a mathematic operation"
                  },
                  {
                    "symbol": {
                      "name": "rel_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An operator that compares the two operands and returns true or false"
                  },
                  {
                    "symbol": {
                      "name": "logical_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An expression that evaluates to true or false"
                  },
                  {
                    "symbol": {
                      "name": "assign_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Set a variable's value"
                  },
                  {
                    "symbol": {
                      "name": "call_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Call a user-defined or built-in function/method"
                  },
                  {
                    "symbol": {
                      "name": "primary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier or a constant"
                  }
                ],
                "selectedSymbol": 4,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "selectedSymbol": 4,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "def",
                        "isTerminal": false
                      }
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "stmt",
                          "isTerminal": false
                        }
                      },
                      {
                        "symbol": {
                          "name": "func_definition",
                          "isTerminal": false
                        },
                        "tooltip": "Define reusable code as a function"
                      }
                    ],
                    "selectedSymbol": 0,
                    "type": "SelectionBlock"
                  }
                }
              }
            }
          }
        ]
      },
      {
        "name": "Turtle <br> Graphics",
        "icon": "./Images/Toolbox/turtle.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "forward_turtle",
                "isTerminal": false
              },
              "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "forward",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "distance",
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element of an object by its property name"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element of an array by its position"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "backward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle backward, allowing for possible wrap-around"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animation",
                    "isTerminal": false
                  },
                  "tooltip": "Call the same function over and over at a fixed period of time"
                }
              ],
              "selectedSymbol": 0,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "repeat_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Repeat the stmts, certain times"
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "backward_turtle",
                "isTerminal": false
              },
              "tooltip": "Moves the turtle backward, allowing for possible wrap-around"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "backward",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "distance",
                  "tooltip": "Moves the turtle backward, allowing for possible wrap-around"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element of an object by its property name"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element of an array by its position"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "backward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle backward, allowing for possible wrap-around"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animation",
                    "isTerminal": false
                  },
                  "tooltip": "Call the same function over and over at a fixed period of time"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "repeat_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Repeat the stmts, certain times"
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "turn_right",
                "isTerminal": false
              },
              "tooltip": "Turns the turtle right by an angle in degrees"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "right",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "angle",
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 1,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "turn_left",
                "isTerminal": false
              },
              "tooltip": "Turns the turtle left by an angle in degrees"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "left",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "angle",
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 2,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "goto_position",
                "isTerminal": false
              },
              "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "goto",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "x"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "y",
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "clear",
                "isTerminal": true
              },
              "tooltip": "Clear the display, don't move the turtle"
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 4,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "penup",
                "isTerminal": true
              },
              "tooltip": "Picks up the turtle's pen so as not to draw line"
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 5,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "pendown",
                "isTerminal": true
              },
              "tooltip": "Puts down the turtle's pen so as to draw line"
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 6,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "reset",
                "isTerminal": true
              },
              "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 7,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "hide_turtle",
                "isTerminal": true
              },
              "tooltip": "Hide the turtle from the canvas"
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 14,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "show_turtle",
                "isTerminal": true
              },
              "tooltip": "Display the turtle in the canvas"
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 15,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "draw",
                "isTerminal": true
              },
              "tooltip": "Draw the turtle and the current image"
            },
            "type": "SimpleBlock",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 17,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "define_angle",
                "isTerminal": false
              },
              "tooltip": "Set the angle of the turtle in degrees"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "angle",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "angle",
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 8,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "define_widthline",
                "isTerminal": false
              },
              "tooltip": "Set the width of the line"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "width",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "width",
                  "tooltip": "Set the width of the line"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its property name in the object"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element by its position in the array"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Function definition"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 9,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "define_turtleshape",
                "isTerminal": false
              },
              "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "shape",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "shapes",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "triangle",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "circle",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "square",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "turtle",
                      "isTerminal": true
                    }
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 10,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "change_color",
                "isTerminal": false
              },
              "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "colour",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "alias": "r"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "alias": "g"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "alias": "b"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "alias": "a",
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                "type": "InputBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 11,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "write_msg",
                "isTerminal": false
              },
              "tooltip": "Write some text at the turtle position"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "write",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "STRING_CONST",
                    "isTerminal": true
                  },
                  "alias": "msg",
                  "tooltip": "Write some text at the turtle position"
                },
                "type": "InputBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 12,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "random_int",
                "isTerminal": false
              },
              "tooltip": "Generate a random integer between low and high"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "random",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "alias": "low"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "INT_CONST",
                    "isTerminal": true
                  },
                  "alias": "high",
                  "tooltip": "Generate a random integer between low and high"
                },
                "type": "InputBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 13,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "set_redraw",
                "isTerminal": false
              },
              "tooltip": "Turn on/off redrawing"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "redrawOnMove",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "BOOLEAN_CONST",
                    "isTerminal": false
                  },
                  "alias": "on/off",
                  "tooltip": "Turn on/off redrawing"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "true",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "false",
                      "isTerminal": true
                    }
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 16,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "set_wrap",
                "isTerminal": false
              },
              "tooltip": "Turn edge wrapping on/off"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "wrap",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "BOOLEAN_CONST",
                    "isTerminal": false
                  },
                  "alias": "on/off",
                  "tooltip": "Turn edge wrapping on/off"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "true",
                      "isTerminal": true
                    }
                  },
                  {
                    "symbol": {
                      "name": "false",
                      "isTerminal": true
                    }
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "repeat_action",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat an action n times"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "animate_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "IDK"
                }
              ],
              "selectedSymbol": 19,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          },
          {
            "symbol": {
              "symbol": {
                "name": "set_delay",
                "isTerminal": false
              },
              "tooltip": "Call a function once after a period of time"
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "delay",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "IDENT",
                    "isTerminal": true
                  },
                  "alias": "function"
                },
                "type": "InputBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "primary_expr",
                    "isTerminal": false
                  },
                  "alias": "ms",
                  "tooltip": "Call a function once after a period of time"
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "variable",
                      "isTerminal": false
                    },
                    "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                  },
                  {
                    "symbol": {
                      "name": "consts",
                      "isTerminal": false
                    },
                    "tooltip": "All const values"
                  },
                  {
                    "symbol": {
                      "name": "keys",
                      "isTerminal": false
                    },
                    "tooltip": "All keyboard keys"
                  },
                  {
                    "symbol": {
                      "name": "object_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element of an object by its property name"
                  },
                  {
                    "symbol": {
                      "name": "array_get",
                      "isTerminal": false
                    },
                    "tooltip": "Get an element of an array by its position"
                  },
                  {
                    "symbol": {
                      "name": "new_array",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new array"
                  },
                  {
                    "symbol": {
                      "name": "new_object",
                      "isTerminal": false
                    },
                    "tooltip": "Define a new object"
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "type": "SelectionBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "turtle_functions",
                  "isTerminal": false
                },
                "tooltip": "Build-in functions to move the turtle in the virtual canvas"
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "forward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle forward by the specified amount,allowing for possible wrap-around at the boundaries of the canvas"
                },
                {
                  "symbol": {
                    "name": "backward_turtle",
                    "isTerminal": false
                  },
                  "tooltip": "Moves the turtle backward, allowing for possible wrap-around"
                },
                {
                  "symbol": {
                    "name": "turn_right",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle right by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "turn_left",
                    "isTerminal": false
                  },
                  "tooltip": "Turns the turtle left by an angle in degrees"
                },
                {
                  "symbol": {
                    "name": "goto_position",
                    "isTerminal": false
                  },
                  "tooltip": "Move the turtle to position x,y (don't drwa on the way there)"
                },
                {
                  "symbol": {
                    "name": "clear",
                    "isTerminal": true
                  },
                  "tooltip": "Clear the display, don't move the turtle"
                },
                {
                  "symbol": {
                    "name": "penup",
                    "isTerminal": true
                  },
                  "tooltip": "Picks up the turtle's pen so as not to draw line"
                },
                {
                  "symbol": {
                    "name": "pendown",
                    "isTerminal": true
                  },
                  "tooltip": "Puts down the turtle's pen so as to draw line"
                },
                {
                  "symbol": {
                    "name": "reset",
                    "isTerminal": true
                  },
                  "tooltip": "Reset the whole system, clear the display and move turtle back to start position"
                },
                {
                  "symbol": {
                    "name": "define_angle",
                    "isTerminal": false
                  },
                  "tooltip": "Set the angle of the turtle in degrees"
                },
                {
                  "symbol": {
                    "name": "define_widthline",
                    "isTerminal": false
                  },
                  "tooltip": "Set the width of the line"
                },
                {
                  "symbol": {
                    "name": "define_turtleshape",
                    "isTerminal": false
                  },
                  "tooltip": "Set the turtle draw shape, currently supports triangle (default), circle, square and turtle"
                },
                {
                  "symbol": {
                    "name": "change_color",
                    "isTerminal": false
                  },
                  "tooltip": "Set the colour of the line using RGB values in the range 0 - 255"
                },
                {
                  "symbol": {
                    "name": "write_msg",
                    "isTerminal": false
                  },
                  "tooltip": "Write some text at the turtle position"
                },
                {
                  "symbol": {
                    "name": "random_int",
                    "isTerminal": false
                  },
                  "tooltip": "Generate a random integer between low and high"
                },
                {
                  "symbol": {
                    "name": "hide_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Hide the turtle from the canvas"
                },
                {
                  "symbol": {
                    "name": "show_turtle",
                    "isTerminal": true
                  },
                  "tooltip": "Display the turtle in the canvas"
                },
                {
                  "symbol": {
                    "name": "set_redraw",
                    "isTerminal": false
                  },
                  "tooltip": "Turn on/off redrawing"
                },
                {
                  "symbol": {
                    "name": "draw",
                    "isTerminal": true
                  },
                  "tooltip": "Draw the turtle and the current image"
                },
                {
                  "symbol": {
                    "name": "set_wrap",
                    "isTerminal": false
                  },
                  "tooltip": "Turn edge wrapping on/off"
                },
                {
                  "symbol": {
                    "name": "set_delay",
                    "isTerminal": false
                  },
                  "tooltip": "Call a function once after a period of time"
                },
                {
                  "symbol": {
                    "name": "animation",
                    "isTerminal": false
                  },
                  "tooltip": "Call the same function over and over at a fixed period of time"
                }
              ],
              "selectedSymbol": 20,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "stmt",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "if_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "if_else_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something if a condition is true, else do something else"
                  },
                  {
                    "symbol": {
                      "name": "while_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true"
                  },
                  {
                    "symbol": {
                      "name": "for_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                  },
                  {
                    "symbol": {
                      "name": "repeat_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Repeat the stmts, certain times"
                  },
                  {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "expr_stmt",
                    "tooltip": "A single expression as a statement"
                  },
                  {
                    "symbol": {
                      "name": "turtle_functions",
                      "isTerminal": false
                    },
                    "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                  },
                  {
                    "symbol": {
                      "name": "ternary_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                  },
                  {
                    "symbol": {
                      "name": "break_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Exit from the current loop"
                  },
                  {
                    "symbol": {
                      "name": "continue_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Continue to the next iteration of the current loop"
                  },
                  {
                    "symbol": {
                      "name": "return_stmt",
                      "isTerminal": false
                    },
                    "tooltip": "Return an expression as the result of the current function"
                  }
                ],
                "selectedSymbol": 6,
                "type": "SelectionBlock",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "def",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "stmt",
                        "isTerminal": false
                      }
                    },
                    {
                      "symbol": {
                        "name": "func_definition",
                        "isTerminal": false
                      },
                      "tooltip": "Define reusable code as a function"
                    }
                  ],
                  "selectedSymbol": 0,
                  "type": "SelectionBlock"
                }
              }
            }
          }
        ]
      },
      {
        "name": "Snippets",
        "icon": "./Images/Toolbox/snipets.svg",
        "blocks": [
          {
            "symbol": {
              "symbol": {
                "name": "for_stmt",
                "isTerminal": false
              },
              "tooltip": "Print all the elements of an array."
            },
            "elems": [
              {
                "symbol": {
                  "symbol": {
                    "name": "for",
                    "isTerminal": true
                  }
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LP",
                    "isTerminal": true
                  },
                  "alias": "("
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "assign_expr",
                    "isTerminal": false
                  },
                  "tooltip": "Set a variable's value"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "ident_type",
                        "isTerminal": false
                      },
                      "tooltip": "Identifier with type"
                    },
                    "elems": [
                      {
                        "symbol": {
                          "symbol": {
                            "name": "var",
                            "isTerminal": true
                          },
                          "tooltip": "The scope of a var variable is functional scope"
                        },
                        "type": "SimpleBlock",
                        "generatedBy": {
                          "symbol": {
                            "symbol": {
                              "name": "types",
                              "isTerminal": false
                            }
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "var",
                                "isTerminal": true
                              },
                              "tooltip": "The scope of a var variable is functional scope"
                            },
                            {
                              "symbol": {
                                "name": "let",
                                "isTerminal": true
                              },
                              "tooltip": "The scope of a let variable is block scope"
                            },
                            {
                              "symbol": {
                                "name": "const",
                                "isTerminal": true
                              },
                              "tooltip": "The scope of a const variable is block scope"
                            }
                          ],
                          "selectedSymbol": 0,
                          "type": "SelectionBlock"
                        }
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "IDENT",
                            "isTerminal": true
                          },
                          "tooltip": "Select type of identifier"
                        },
                        "userInput_": "i",
                        "type": "InputBlock"
                      }
                    ],
                    "type": "Group",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "variable",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "IDENT",
                            "isTerminal": true
                          },
                          "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                        },
                        {
                          "symbol": {
                            "name": "ident_type",
                            "isTerminal": false
                          },
                          "tooltip": "Identifier with type"
                        }
                      ],
                      "selectedSymbol": 1,
                      "type": "SelectionBlock",
                      "generatedBy": {
                        "symbol": {
                          "symbol": {
                            "name": "primary_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Left operand to be assigned"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "variable",
                              "isTerminal": false
                            },
                            "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                          },
                          {
                            "symbol": {
                              "name": "consts",
                              "isTerminal": false
                            },
                            "tooltip": "All const values"
                          },
                          {
                            "symbol": {
                              "name": "keys",
                              "isTerminal": false
                            },
                            "tooltip": "All keyboard keys"
                          },
                          {
                            "symbol": {
                              "name": "object_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its property name in the object"
                          },
                          {
                            "symbol": {
                              "name": "array_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its position in the array"
                          },
                          {
                            "symbol": {
                              "name": "new_array",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new array"
                          },
                          {
                            "symbol": {
                              "name": "new_object",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new object"
                          },
                          {
                            "symbol": {
                              "name": "func_definition",
                              "isTerminal": false
                            },
                            "tooltip": "Function definition"
                          }
                        ],
                        "selectedSymbol": 0,
                        "type": "SelectionBlock"
                      }
                    }
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "ASSIGN",
                        "isTerminal": true
                      },
                      "alias": "=",
                      "tooltip": "Assigns the right operand to the left operand"
                    },
                    "type": "SimpleBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "assign_op",
                          "isTerminal": false
                        },
                        "tooltip": "Assign operator, simple or with an operation "
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "ASSIGN",
                            "isTerminal": true
                          },
                          "alias": "=",
                          "tooltip": "Assigns the right operand to the left operand"
                        },
                        {
                          "symbol": {
                            "name": "PLUS_ASSIGN",
                            "isTerminal": true
                          },
                          "alias": "+=",
                          "tooltip": "Sums up left and right operand values and assigns the result to the left operand"
                        },
                        {
                          "symbol": {
                            "name": "SUB_ASSIGN",
                            "isTerminal": true
                          },
                          "alias": "-=",
                          "tooltip": "Subtract right operand value from the left operand value and assigns the result to the left operand"
                        },
                        {
                          "symbol": {
                            "name": "MULT_ASSIGN",
                            "isTerminal": true
                          },
                          "alias": "*=",
                          "tooltip": "Multiply left and right operand values and assigns the result to the left operand"
                        },
                        {
                          "symbol": {
                            "name": "DIV_ASSIGN",
                            "isTerminal": true
                          },
                          "alias": "/=",
                          "tooltip": "Divide left operand value by right operand value and assign the result to the left operand"
                        },
                        {
                          "symbol": {
                            "name": "MOD_ASSIGN",
                            "isTerminal": true
                          },
                          "alias": "%=",
                          "tooltip": "Get the modulus of left operand divide by right operand and assign resulted modulus to the left operand"
                        },
                        {
                          "symbol": {
                            "name": "EXP_ASSIGN",
                            "isTerminal": true
                          },
                          "alias": "**=",
                          "tooltip": "Raises the value of left operand to the power of the right operand and assign the result to the left operand"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "INT_CONST",
                        "isTerminal": true
                      },
                      "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                    },
                    "userInput_": "0",
                    "type": "InputBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "consts",
                          "isTerminal": false
                        },
                        "tooltip": "All const values"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "INT_CONST",
                            "isTerminal": true
                          },
                          "tooltip": "An integer is a positive, zero, or negative number that can be written without a fractional component (i.e. no decimal point places)"
                        },
                        {
                          "symbol": {
                            "name": "FLOAT_CONST",
                            "isTerminal": true
                          },
                          "tooltip": "A floating-point number is a rational number (i.e. includes numbers with decimal point places"
                        },
                        {
                          "symbol": {
                            "name": "CHAR_CONST",
                            "isTerminal": true
                          },
                          "tooltip": "One single character"
                        },
                        {
                          "symbol": {
                            "name": "STRING_CONST",
                            "isTerminal": true
                          },
                          "tooltip": "Any sequence of characters or the empty sequence"
                        },
                        {
                          "symbol": {
                            "name": "BOOLEAN_CONST",
                            "isTerminal": false
                          },
                          "tooltip": "One of true or false"
                        },
                        {
                          "symbol": {
                            "name": "ARRAY_CONST",
                            "isTerminal": false
                          },
                          "tooltip": "An array of elements"
                        },
                        {
                          "symbol": {
                            "name": "OBJECT_CONST",
                            "isTerminal": false
                          },
                          "tooltip": "Variable with many values as pairs (name:value)"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock",
                      "generatedBy": {
                        "symbol": {
                          "symbol": {
                            "name": "primary_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An identifier or a constant"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "variable",
                              "isTerminal": false
                            },
                            "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                          },
                          {
                            "symbol": {
                              "name": "consts",
                              "isTerminal": false
                            },
                            "tooltip": "All const values"
                          },
                          {
                            "symbol": {
                              "name": "keys",
                              "isTerminal": false
                            },
                            "tooltip": "All keyboard keys"
                          },
                          {
                            "symbol": {
                              "name": "object_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its property name in the object"
                          },
                          {
                            "symbol": {
                              "name": "array_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its position in the array"
                          },
                          {
                            "symbol": {
                              "name": "new_array",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new array"
                          },
                          {
                            "symbol": {
                              "name": "new_object",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new object"
                          },
                          {
                            "symbol": {
                              "name": "func_definition",
                              "isTerminal": false
                            },
                            "tooltip": "Function definition"
                          }
                        ],
                        "selectedSymbol": 1,
                        "type": "SelectionBlock",
                        "generatedBy": {
                          "symbol": {
                            "symbol": {
                              "name": "expr",
                              "isTerminal": false
                            },
                            "tooltip": "Right operand"
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "arith_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Perform a mathematic operation"
                            },
                            {
                              "symbol": {
                                "name": "rel_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An operator that compares the two operands and returns true or false"
                            },
                            {
                              "symbol": {
                                "name": "logical_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An expression that evaluates to true or false"
                            },
                            {
                              "symbol": {
                                "name": "assign_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Set a variable's value"
                            },
                            {
                              "symbol": {
                                "name": "call_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Call a user-defined or built-in function/method"
                            },
                            {
                              "symbol": {
                                "name": "ternary_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                            },
                            {
                              "symbol": {
                                "name": "primary_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An identifier or a constant"
                            }
                          ],
                          "selectedSymbol": 6,
                          "type": "SelectionBlock"
                        }
                      }
                    }
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "initialization_expr"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 3,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "SEMICOLON",
                    "isTerminal": true
                  },
                  "alias": ";"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "rel_expr",
                    "isTerminal": false
                  },
                  "tooltip": "An operator that compares the two operands and returns true or false"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "IDENT",
                        "isTerminal": true
                      },
                      "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                    },
                    "userInput_": "i",
                    "type": "InputBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "variable",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "IDENT",
                            "isTerminal": true
                          },
                          "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                        },
                        {
                          "symbol": {
                            "name": "ident_type",
                            "isTerminal": false
                          },
                          "tooltip": "Identifier with type"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock",
                      "generatedBy": {
                        "symbol": {
                          "symbol": {
                            "name": "primary_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An identifier or a constant"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "variable",
                              "isTerminal": false
                            },
                            "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                          },
                          {
                            "symbol": {
                              "name": "consts",
                              "isTerminal": false
                            },
                            "tooltip": "All const values"
                          },
                          {
                            "symbol": {
                              "name": "keys",
                              "isTerminal": false
                            },
                            "tooltip": "All keyboard keys"
                          },
                          {
                            "symbol": {
                              "name": "object_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its property name in the object"
                          },
                          {
                            "symbol": {
                              "name": "array_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its position in the array"
                          },
                          {
                            "symbol": {
                              "name": "new_array",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new array"
                          },
                          {
                            "symbol": {
                              "name": "new_object",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new object"
                          },
                          {
                            "symbol": {
                              "name": "func_definition",
                              "isTerminal": false
                            },
                            "tooltip": "Function definition"
                          }
                        ],
                        "selectedSymbol": 0,
                        "type": "SelectionBlock",
                        "generatedBy": {
                          "symbol": {
                            "symbol": {
                              "name": "expr",
                              "isTerminal": false
                            },
                            "tooltip": "The first operand"
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "arith_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Perform a mathematic operation"
                            },
                            {
                              "symbol": {
                                "name": "rel_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An operator that compares the two operands and returns true or false"
                            },
                            {
                              "symbol": {
                                "name": "logical_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An expression that evaluates to true or false"
                            },
                            {
                              "symbol": {
                                "name": "assign_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Set a variable's value"
                            },
                            {
                              "symbol": {
                                "name": "call_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Call a user-defined or built-in function/method"
                            },
                            {
                              "symbol": {
                                "name": "ternary_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                            },
                            {
                              "symbol": {
                                "name": "primary_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An identifier or a constant"
                            }
                          ],
                          "selectedSymbol": 6,
                          "type": "SelectionBlock"
                        }
                      }
                    }
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "LESS",
                        "isTerminal": true
                      },
                      "alias": "<",
                      "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                    },
                    "type": "SimpleBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "rel_op",
                          "isTerminal": false
                        },
                        "tooltip": "A comparison operator that returns true or false (e.g <, >)"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "GREATER",
                            "isTerminal": true
                          },
                          "alias": ">",
                          "tooltip": "Returns true if the first operand is greater than the second operand, else returns false"
                        },
                        {
                          "symbol": {
                            "name": "LESS",
                            "isTerminal": true
                          },
                          "alias": "<",
                          "tooltip": "Returns true if the first operand is less than the second operand, else returns false"
                        },
                        {
                          "symbol": {
                            "name": "EQUAL_TO",
                            "isTerminal": true
                          },
                          "alias": "==",
                          "tooltip": "Returns true if the first operand is equal to the second operand, else returns false"
                        },
                        {
                          "symbol": {
                            "name": "EQUAL_VALUE_TYPE",
                            "isTerminal": true
                          },
                          "alias": "===",
                          "tooltip": "Returns true if the first operand is equal and has the same type to the second operand, else returns false"
                        },
                        {
                          "symbol": {
                            "name": "NOT_EQUAL_TO",
                            "isTerminal": true
                          },
                          "alias": "!=",
                          "tooltip": "Returns true if the first operand not equal to the second operand, else returns false"
                        },
                        {
                          "symbol": {
                            "name": "NOT_EQUAL_VALUE_TYPE",
                            "isTerminal": true
                          },
                          "alias": "!==",
                          "tooltip": "Returns true if the first operand not equal or has different type to the second operand, else returns false"
                        },
                        {
                          "symbol": {
                            "name": "GREATER_EQUAL",
                            "isTerminal": true
                          },
                          "alias": ">=",
                          "tooltip": "Returns true if the first operand is greater than or equal to the second operand, else returns false"
                        },
                        {
                          "symbol": {
                            "name": "LESS_EQUAL",
                            "isTerminal": true
                          },
                          "alias": "<=",
                          "tooltip": "Returns true if the first operand is less than or equal to the second operand, else returns false"
                        }
                      ],
                      "selectedSymbol": 1,
                      "type": "SelectionBlock"
                    }
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "array_size",
                        "isTerminal": false
                      },
                      "alias": "length",
                      "tooltip": "Get the number of elements in the array"
                    },
                    "elems": [
                      {
                        "symbol": {
                          "symbol": {
                            "name": "IDENT",
                            "isTerminal": true
                          },
                          "alias": "arrayName"
                        },
                        "type": "InputBlock"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "DOT",
                            "isTerminal": true
                          },
                          "alias": "."
                        },
                        "type": "SimpleBlock"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "length",
                            "isTerminal": true
                          }
                        },
                        "type": "SimpleBlock"
                      }
                    ],
                    "type": "Group",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "array_method_call",
                          "isTerminal": false
                        },
                        "tooltip": "Use a built-in array method"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "array_get",
                            "isTerminal": false
                          },
                          "alias": "get",
                          "tooltip": "Get an element by its position in the array"
                        },
                        {
                          "symbol": {
                            "name": "array_set",
                            "isTerminal": false
                          },
                          "alias": "set",
                          "tooltip": "Modify an element in a position of the array to a new character"
                        },
                        {
                          "symbol": {
                            "name": "array_push",
                            "isTerminal": false
                          },
                          "alias": "push",
                          "tooltip": "Insert an element at the end of the array"
                        },
                        {
                          "symbol": {
                            "name": "array_pop",
                            "isTerminal": false
                          },
                          "alias": "pop",
                          "tooltip": "Returns the last element of the array"
                        },
                        {
                          "symbol": {
                            "name": "array_size",
                            "isTerminal": false
                          },
                          "alias": "length",
                          "tooltip": "Get the number of elements in the array"
                        },
                        {
                          "symbol": {
                            "name": "array_join",
                            "isTerminal": false
                          },
                          "alias": "join",
                          "tooltip": "Joins all array elements into a string, you can specify the separator"
                        },
                        {
                          "symbol": {
                            "name": "array_to_string",
                            "isTerminal": false
                          },
                          "alias": "tostring",
                          "tooltip": "Converts an array to a string of (comma separated) array values"
                        }
                      ],
                      "selectedSymbol": 4,
                      "type": "SelectionBlock",
                      "generatedBy": {
                        "symbol": {
                          "symbol": {
                            "name": "call_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Call a user-defined or built-in function/method"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "math_call",
                              "isTerminal": false
                            },
                            "tooltip": "Use a built-in math function"
                          },
                          {
                            "symbol": {
                              "name": "string_method_call",
                              "isTerminal": false
                            },
                            "tooltip": "Use a built-in string method"
                          },
                          {
                            "symbol": {
                              "name": "array_method_call",
                              "isTerminal": false
                            },
                            "tooltip": "Use a built-in array method"
                          },
                          {
                            "symbol": {
                              "name": "object_method_call",
                              "isTerminal": false
                            },
                            "tooltip": "Use a built-in object method"
                          },
                          {
                            "symbol": {
                              "name": "function_call",
                              "isTerminal": false
                            },
                            "tooltip": "Use a user-defined function as \"name(params);\""
                          },
                          {
                            "symbol": {
                              "name": "print_call",
                              "isTerminal": false
                            },
                            "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                          },
                          {
                            "symbol": {
                              "name": "input",
                              "isTerminal": false
                            },
                            "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                          },
                          {
                            "symbol": {
                              "name": "key_event",
                              "isTerminal": false
                            },
                            "tooltip": "Add and remove event listener for a key of your choice"
                          },
                          {
                            "symbol": {
                              "name": "type_of",
                              "isTerminal": false
                            },
                            "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                          }
                        ],
                        "selectedSymbol": 2,
                        "type": "SelectionBlock",
                        "generatedBy": {
                          "symbol": {
                            "symbol": {
                              "name": "expr",
                              "isTerminal": false
                            },
                            "tooltip": "The second operand"
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "arith_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Perform a mathematic operation"
                            },
                            {
                              "symbol": {
                                "name": "rel_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An operator that compares the two operands and returns true or false"
                            },
                            {
                              "symbol": {
                                "name": "logical_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An expression that evaluates to true or false"
                            },
                            {
                              "symbol": {
                                "name": "assign_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Set a variable's value"
                            },
                            {
                              "symbol": {
                                "name": "call_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Call a user-defined or built-in function/method"
                            },
                            {
                              "symbol": {
                                "name": "ternary_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                            },
                            {
                              "symbol": {
                                "name": "primary_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An identifier or a constant"
                            }
                          ],
                          "selectedSymbol": 4,
                          "type": "SelectionBlock"
                        }
                      }
                    }
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "expr",
                      "isTerminal": false
                    },
                    "alias": "condition_expr"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    {
                      "symbol": {
                        "name": "rel_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An operator that compares the two operands and returns true or false"
                    },
                    {
                      "symbol": {
                        "name": "logical_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An expression that evaluates to true or false"
                    },
                    {
                      "symbol": {
                        "name": "assign_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Set a variable's value"
                    },
                    {
                      "symbol": {
                        "name": "call_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Call a user-defined or built-in function/method"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "primary_expr",
                        "isTerminal": false
                      },
                      "tooltip": "An identifier or a constant"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock"
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "SEMICOLON",
                    "isTerminal": true
                  },
                  "alias": ";"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "unary_expr_after",
                    "isTerminal": false
                  },
                  "tooltip": "The unary operator after the operand"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "IDENT",
                        "isTerminal": true
                      },
                      "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                    },
                    "userInput_": "i",
                    "type": "InputBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "variable",
                          "isTerminal": false
                        },
                        "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "IDENT",
                            "isTerminal": true
                          },
                          "tooltip": "Without type. If the variable is not declared, it is automatically declared with var"
                        },
                        {
                          "symbol": {
                            "name": "ident_type",
                            "isTerminal": false
                          },
                          "tooltip": "Identifier with type"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock",
                      "generatedBy": {
                        "symbol": {
                          "symbol": {
                            "name": "primary_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An identifier or a constant"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "variable",
                              "isTerminal": false
                            },
                            "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                          },
                          {
                            "symbol": {
                              "name": "consts",
                              "isTerminal": false
                            },
                            "tooltip": "All const values"
                          },
                          {
                            "symbol": {
                              "name": "keys",
                              "isTerminal": false
                            },
                            "tooltip": "All keyboard keys"
                          },
                          {
                            "symbol": {
                              "name": "object_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its property name in the object"
                          },
                          {
                            "symbol": {
                              "name": "array_get",
                              "isTerminal": false
                            },
                            "tooltip": "Get an element by its position in the array"
                          },
                          {
                            "symbol": {
                              "name": "new_array",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new array"
                          },
                          {
                            "symbol": {
                              "name": "new_object",
                              "isTerminal": false
                            },
                            "tooltip": "Define a new object"
                          },
                          {
                            "symbol": {
                              "name": "func_definition",
                              "isTerminal": false
                            },
                            "tooltip": "Function definition"
                          }
                        ],
                        "selectedSymbol": 0,
                        "type": "SelectionBlock",
                        "generatedBy": {
                          "symbol": {
                            "symbol": {
                              "name": "expr",
                              "isTerminal": false
                            },
                            "tooltip": "The single operand"
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "arith_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Perform a mathematic operation"
                            },
                            {
                              "symbol": {
                                "name": "rel_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An operator that compares the two operands and returns true or false"
                            },
                            {
                              "symbol": {
                                "name": "logical_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An expression that evaluates to true or false"
                            },
                            {
                              "symbol": {
                                "name": "assign_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Set a variable's value"
                            },
                            {
                              "symbol": {
                                "name": "call_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Call a user-defined or built-in function/method"
                            },
                            {
                              "symbol": {
                                "name": "ternary_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                            },
                            {
                              "symbol": {
                                "name": "primary_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An identifier or a constant"
                            }
                          ],
                          "selectedSymbol": 6,
                          "type": "SelectionBlock"
                        }
                      }
                    }
                  },
                  {
                    "symbol": {
                      "symbol": {
                        "name": "PLUS_PLUS",
                        "isTerminal": true
                      },
                      "alias": "++",
                      "tooltip": "Post-increament of the operand value by one"
                    },
                    "type": "SimpleBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "unary_op_af",
                          "isTerminal": false
                        },
                        "tooltip": "Unary operator with one operand"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "PLUS_PLUS",
                            "isTerminal": true
                          },
                          "alias": "++",
                          "tooltip": "Post-increament of the operand value by one"
                        },
                        {
                          "symbol": {
                            "name": "SUB_SUB",
                            "isTerminal": true
                          },
                          "alias": "--",
                          "tooltip": "Post-decreament of the operand value by one"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                ],
                "type": "Group",
                "generatedBy": {
                  "symbol": {
                    "symbol": {
                      "name": "unary_expr",
                      "isTerminal": false
                    },
                    "tooltip": "Unary expression operator with single operand,either before or after the operator"
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "unary_expr_before",
                        "isTerminal": false
                      },
                      "tooltip": "The unary operator before the operand"
                    },
                    {
                      "symbol": {
                        "name": "unary_expr_after",
                        "isTerminal": false
                      },
                      "tooltip": "The unary operator after the operand"
                    }
                  ],
                  "selectedSymbol": 1,
                  "type": "SelectionBlock",
                  "generatedBy": {
                    "symbol": {
                      "symbol": {
                        "name": "arith_expr",
                        "isTerminal": false
                      },
                      "tooltip": "Perform a mathematic operation"
                    },
                    "alternateSymbols": [
                      {
                        "symbol": {
                          "name": "binary_arith_expr",
                          "isTerminal": false
                        },
                        "tooltip": "An arithmetic expression with two operands"
                      },
                      {
                        "symbol": {
                          "name": "unary_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Unary expression operator with single operand,either before or after the operator"
                      }
                    ],
                    "selectedSymbol": 1,
                    "type": "SelectionBlock",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "expr",
                          "isTerminal": false
                        },
                        "alias": "step_expr"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "arith_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Perform a mathematic operation"
                        },
                        {
                          "symbol": {
                            "name": "rel_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An operator that compares the two operands and returns true or false"
                        },
                        {
                          "symbol": {
                            "name": "logical_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An expression that evaluates to true or false"
                        },
                        {
                          "symbol": {
                            "name": "assign_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Set a variable's value"
                        },
                        {
                          "symbol": {
                            "name": "call_expr",
                            "isTerminal": false
                          },
                          "tooltip": "Call a user-defined or built-in function/method"
                        },
                        {
                          "symbol": {
                            "name": "ternary_stmt",
                            "isTerminal": false
                          },
                          "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                        },
                        {
                          "symbol": {
                            "name": "primary_expr",
                            "isTerminal": false
                          },
                          "tooltip": "An identifier or a constant"
                        }
                      ],
                      "selectedSymbol": 0,
                      "type": "SelectionBlock"
                    }
                  }
                }
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RP",
                    "isTerminal": true
                  },
                  "alias": ")"
                },
                "type": "SimpleBlock"
              },
              {
                "type": "NewLine"
              },
              {
                "type": "TabBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "LB",
                    "isTerminal": true
                  },
                  "alias": "{"
                },
                "type": "SimpleBlock"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "stmts",
                    "isTerminal": false
                  },
                  "alias": "for_part"
                },
                "elems": [
                  {
                    "symbol": {
                      "symbol": {
                        "name": "print_call",
                        "isTerminal": false
                      },
                      "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                    },
                    "elems": [
                      {
                        "symbol": {
                          "symbol": {
                            "name": "console.log",
                            "isTerminal": true
                          }
                        },
                        "type": "SimpleBlock"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "color",
                            "isTerminal": false
                          }
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "black",
                              "isTerminal": true
                            }
                          },
                          {
                            "symbol": {
                              "name": "red",
                              "isTerminal": true
                            }
                          },
                          {
                            "symbol": {
                              "name": "blue",
                              "isTerminal": true
                            }
                          },
                          {
                            "symbol": {
                              "name": "green",
                              "isTerminal": true
                            }
                          },
                          {
                            "symbol": {
                              "name": "yellow",
                              "isTerminal": true
                            }
                          },
                          {
                            "symbol": {
                              "name": "cyan",
                              "isTerminal": true
                            }
                          },
                          {
                            "symbol": {
                              "name": "magenta",
                              "isTerminal": true
                            }
                          },
                          {
                            "symbol": {
                              "name": "rgb_color",
                              "isTerminal": false
                            },
                            "tooltip": "Define the color as rgb"
                          }
                        ],
                        "type": "SelectionBlock"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "LP",
                            "isTerminal": true
                          },
                          "alias": "("
                        },
                        "type": "SimpleBlock"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "expr_list",
                            "isTerminal": false
                          }
                        },
                        "elems": [
                          {
                            "symbol": {
                              "symbol": {
                                "name": "array_get",
                                "isTerminal": false
                              },
                              "tooltip": "Get an element of an array by its position"
                            },
                            "elems": [
                              {
                                "symbol": {
                                  "symbol": {
                                    "name": "IDENT",
                                    "isTerminal": true
                                  },
                                  "alias": "arrayName"
                                },
                                "type": "InputBlock"
                              },
                              {
                                "symbol": {
                                  "symbol": {
                                    "name": "LSB",
                                    "isTerminal": true
                                  },
                                  "alias": "["
                                },
                                "type": "SimpleBlock"
                              },
                              {
                                "symbol": {
                                  "symbol": {
                                    "name": "expr",
                                    "isTerminal": false
                                  },
                                  "alias": "index"
                                },
                                "alternateSymbols": [
                                  {
                                    "symbol": {
                                      "name": "arith_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "Perform a mathematic operation"
                                  },
                                  {
                                    "symbol": {
                                      "name": "rel_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "An operator that compares the two operands and returns true or false"
                                  },
                                  {
                                    "symbol": {
                                      "name": "logical_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "An expression that evaluates to true or false"
                                  },
                                  {
                                    "symbol": {
                                      "name": "assign_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "Set a variable's value"
                                  },
                                  {
                                    "symbol": {
                                      "name": "call_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "Call a user-defined or built-in function/method"
                                  },
                                  {
                                    "symbol": {
                                      "name": "ternary_stmt",
                                      "isTerminal": false
                                    },
                                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                                  },
                                  {
                                    "symbol": {
                                      "name": "primary_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "An identifier or a constant"
                                  }
                                ],
                                "type": "SelectionBlock"
                              },
                              {
                                "symbol": {
                                  "symbol": {
                                    "name": "RSB",
                                    "isTerminal": true
                                  },
                                  "alias": "]"
                                },
                                "type": "SimpleBlock"
                              }
                            ],
                            "type": "Group",
                            "generatedBy": {
                              "symbol": {
                                "symbol": {
                                  "name": "primary_expr",
                                  "isTerminal": false
                                },
                                "tooltip": "An identifier or a constant"
                              },
                              "alternateSymbols": [
                                {
                                  "symbol": {
                                    "name": "variable",
                                    "isTerminal": false
                                  },
                                  "tooltip": "An identifier starting with _ or a uppercase/lowercase letter following by 0 or more characters that can be _ numbers lowercase/uppercase letters"
                                },
                                {
                                  "symbol": {
                                    "name": "consts",
                                    "isTerminal": false
                                  },
                                  "tooltip": "All const values"
                                },
                                {
                                  "symbol": {
                                    "name": "keys",
                                    "isTerminal": false
                                  },
                                  "tooltip": "All keyboard keys"
                                },
                                {
                                  "symbol": {
                                    "name": "object_get",
                                    "isTerminal": false
                                  },
                                  "tooltip": "Get an element of an object by its property name"
                                },
                                {
                                  "symbol": {
                                    "name": "array_get",
                                    "isTerminal": false
                                  },
                                  "tooltip": "Get an element of an array by its position"
                                },
                                {
                                  "symbol": {
                                    "name": "new_array",
                                    "isTerminal": false
                                  },
                                  "tooltip": "Define a new array"
                                },
                                {
                                  "symbol": {
                                    "name": "new_object",
                                    "isTerminal": false
                                  },
                                  "tooltip": "Define a new object"
                                },
                                {
                                  "symbol": {
                                    "name": "func_definition",
                                    "isTerminal": false
                                  },
                                  "tooltip": "Define reusable code as a function"
                                }
                              ],
                              "selectedSymbol": 4,
                              "type": "SelectionBlock",
                              "generatedBy": {
                                "symbol": {
                                  "symbol": {
                                    "name": "expr",
                                    "isTerminal": false
                                  },
                                  "alias": "arg"
                                },
                                "alternateSymbols": [
                                  {
                                    "symbol": {
                                      "name": "arith_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "Perform a mathematic operation"
                                  },
                                  {
                                    "symbol": {
                                      "name": "rel_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "An operator that compares the two operands and returns true or false"
                                  },
                                  {
                                    "symbol": {
                                      "name": "logical_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "An expression that evaluates to true or false"
                                  },
                                  {
                                    "symbol": {
                                      "name": "assign_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "Set a variable's value"
                                  },
                                  {
                                    "symbol": {
                                      "name": "call_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "Call a user-defined or built-in function/method"
                                  },
                                  {
                                    "symbol": {
                                      "name": "ternary_stmt",
                                      "isTerminal": false
                                    },
                                    "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                                  },
                                  {
                                    "symbol": {
                                      "name": "primary_expr",
                                      "isTerminal": false
                                    },
                                    "tooltip": "An identifier or a constant"
                                  }
                                ],
                                "selectedSymbol": 6,
                                "type": "SelectionBlock"
                              }
                            }
                          }
                        ],
                        "repetitiveElem": {
                          "symbol": {
                            "symbol": {
                              "name": "expr",
                              "isTerminal": false
                            },
                            "alias": "arg"
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "arith_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Perform a mathematic operation"
                            },
                            {
                              "symbol": {
                                "name": "rel_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An operator that compares the two operands and returns true or false"
                            },
                            {
                              "symbol": {
                                "name": "logical_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An expression that evaluates to true or false"
                            },
                            {
                              "symbol": {
                                "name": "assign_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Set a variable's value"
                            },
                            {
                              "symbol": {
                                "name": "call_expr",
                                "isTerminal": false
                              },
                              "tooltip": "Call a user-defined or built-in function/method"
                            },
                            {
                              "symbol": {
                                "name": "ternary_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                            },
                            {
                              "symbol": {
                                "name": "primary_expr",
                                "isTerminal": false
                              },
                              "tooltip": "An identifier or a constant"
                            }
                          ],
                          "type": "SelectionBlock"
                        },
                        "type": "RepetitionGroup"
                      },
                      {
                        "symbol": {
                          "symbol": {
                            "name": "RP",
                            "isTerminal": true
                          },
                          "alias": ")"
                        },
                        "type": "SimpleBlock"
                      }
                    ],
                    "type": "Group",
                    "generatedBy": {
                      "symbol": {
                        "symbol": {
                          "name": "call_expr",
                          "isTerminal": false
                        },
                        "tooltip": "Call a user-defined or built-in function/method"
                      },
                      "alternateSymbols": [
                        {
                          "symbol": {
                            "name": "math_call",
                            "isTerminal": false
                          },
                          "tooltip": "Use a built-in math function"
                        },
                        {
                          "symbol": {
                            "name": "string_method_call",
                            "isTerminal": false
                          },
                          "tooltip": "Use a built-in string method"
                        },
                        {
                          "symbol": {
                            "name": "array_method_call",
                            "isTerminal": false
                          },
                          "tooltip": "Use a built-in array method"
                        },
                        {
                          "symbol": {
                            "name": "object_method_call",
                            "isTerminal": false
                          },
                          "tooltip": "Use a built-in object method"
                        },
                        {
                          "symbol": {
                            "name": "function_call",
                            "isTerminal": false
                          },
                          "tooltip": "Use a user-defined function as \"name(params);\""
                        },
                        {
                          "symbol": {
                            "name": "print_call",
                            "isTerminal": false
                          },
                          "tooltip": "Use a built-in function to print the value of the given expression (text, number etc.)"
                        },
                        {
                          "symbol": {
                            "name": "output_color",
                            "isTerminal": false
                          },
                          "tooltip": "Change the color of the text in the output console"
                        },
                        {
                          "symbol": {
                            "name": "input",
                            "isTerminal": false
                          },
                          "tooltip": "Displays a dialog box that prompts the user for input, you should assign it to a variable so as you can use it later"
                        },
                        {
                          "symbol": {
                            "name": "key_event",
                            "isTerminal": false
                          },
                          "tooltip": "Add and remove event listener for a key of your choice"
                        },
                        {
                          "symbol": {
                            "name": "type_of",
                            "isTerminal": false
                          },
                          "tooltip": "Typeof operator returns the data type of a variable e.g function,string,number,boolean,object"
                        }
                      ],
                      "selectedSymbol": 5,
                      "type": "SelectionBlock",
                      "generatedBy": {
                        "symbol": {
                          "symbol": {
                            "name": "expr",
                            "isTerminal": false
                          },
                          "alias": "expr_stmt",
                          "tooltip": "A single expression as a statement"
                        },
                        "alternateSymbols": [
                          {
                            "symbol": {
                              "name": "arith_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Perform a mathematic operation"
                          },
                          {
                            "symbol": {
                              "name": "rel_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An operator that compares the two operands and returns true or false"
                          },
                          {
                            "symbol": {
                              "name": "logical_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An expression that evaluates to true or false"
                          },
                          {
                            "symbol": {
                              "name": "assign_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Set a variable's value"
                          },
                          {
                            "symbol": {
                              "name": "call_expr",
                              "isTerminal": false
                            },
                            "tooltip": "Call a user-defined or built-in function/method"
                          },
                          {
                            "symbol": {
                              "name": "ternary_stmt",
                              "isTerminal": false
                            },
                            "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                          },
                          {
                            "symbol": {
                              "name": "primary_expr",
                              "isTerminal": false
                            },
                            "tooltip": "An identifier or a constant"
                          }
                        ],
                        "selectedSymbol": 4,
                        "type": "SelectionBlock",
                        "generatedBy": {
                          "symbol": {
                            "symbol": {
                              "name": "stmt",
                              "isTerminal": false
                            }
                          },
                          "alternateSymbols": [
                            {
                              "symbol": {
                                "name": "if_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Do something if a condition is true"
                            },
                            {
                              "symbol": {
                                "name": "if_else_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Do something if a condition is true, else do something else"
                            },
                            {
                              "symbol": {
                                "name": "while_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Do something while a condition is true"
                            },
                            {
                              "symbol": {
                                "name": "for_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                            },
                            {
                              "symbol": {
                                "name": "repeat_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Repeat the stmts, certain times"
                            },
                            {
                              "symbol": {
                                "name": "expr",
                                "isTerminal": false
                              },
                              "alias": "expr_stmt",
                              "tooltip": "A single expression as a statement"
                            },
                            {
                              "symbol": {
                                "name": "turtle_functions",
                                "isTerminal": false
                              },
                              "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                            },
                            {
                              "symbol": {
                                "name": "ternary_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                            },
                            {
                              "symbol": {
                                "name": "break_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Exit from the current loop"
                            },
                            {
                              "symbol": {
                                "name": "continue_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Continue to the next iteration of the current loop"
                            },
                            {
                              "symbol": {
                                "name": "return_stmt",
                                "isTerminal": false
                              },
                              "tooltip": "Return an expression as the result of the current function"
                            }
                          ],
                          "selectedSymbol": 5,
                          "type": "SelectionBlock"
                        }
                      }
                    }
                  }
                ],
                "repetitiveElem": {
                  "symbol": {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  "alternateSymbols": [
                    {
                      "symbol": {
                        "name": "if_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "if_else_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something if a condition is true, else do something else"
                    },
                    {
                      "symbol": {
                        "name": "while_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true"
                    },
                    {
                      "symbol": {
                        "name": "for_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                    },
                    {
                      "symbol": {
                        "name": "repeat_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Repeat the stmts, certain times"
                    },
                    {
                      "symbol": {
                        "name": "expr",
                        "isTerminal": false
                      },
                      "alias": "expr_stmt",
                      "tooltip": "A single expression as a statement"
                    },
                    {
                      "symbol": {
                        "name": "turtle_functions",
                        "isTerminal": false
                      },
                      "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                    },
                    {
                      "symbol": {
                        "name": "ternary_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                    },
                    {
                      "symbol": {
                        "name": "break_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Exit from the current loop"
                    },
                    {
                      "symbol": {
                        "name": "continue_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Continue to the next iteration of the current loop"
                    },
                    {
                      "symbol": {
                        "name": "return_stmt",
                        "isTerminal": false
                      },
                      "tooltip": "Return an expression as the result of the current function"
                    }
                  ],
                  "type": "SelectionBlock"
                },
                "type": "RepetitionGroup"
              },
              {
                "symbol": {
                  "symbol": {
                    "name": "RB",
                    "isTerminal": true
                  },
                  "alias": "}"
                },
                "type": "SimpleBlock"
              }
            ],
            "type": "Group",
            "generatedBy": {
              "symbol": {
                "symbol": {
                  "name": "stmt",
                  "isTerminal": false
                }
              },
              "alternateSymbols": [
                {
                  "symbol": {
                    "name": "if_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true"
                },
                {
                  "symbol": {
                    "name": "if_else_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something if a condition is true, else do something else"
                },
                {
                  "symbol": {
                    "name": "while_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true"
                },
                {
                  "symbol": {
                    "name": "for_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Do something while a condition is true. Commonly used with a known number of iterations."
                },
                {
                  "symbol": {
                    "name": "repeat_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Repeat the stmts, certain times"
                },
                {
                  "symbol": {
                    "name": "expr",
                    "isTerminal": false
                  },
                  "alias": "expr_stmt",
                  "tooltip": "A single expression as a statement"
                },
                {
                  "symbol": {
                    "name": "turtle_functions",
                    "isTerminal": false
                  },
                  "tooltip": "Build-in functions to move the turtle in the virtual canvas"
                },
                {
                  "symbol": {
                    "name": "ternary_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "A statement with ternary operator has a condition, an expression to execute if the condition is truthy,and the expression to execute if the condition is falsy."
                },
                {
                  "symbol": {
                    "name": "break_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Exit from the current loop"
                },
                {
                  "symbol": {
                    "name": "continue_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Continue to the next iteration of the current loop"
                },
                {
                  "symbol": {
                    "name": "return_stmt",
                    "isTerminal": false
                  },
                  "tooltip": "Return an expression as the result of the current function"
                }
              ],
              "selectedSymbol": 3,
              "type": "SelectionBlock",
              "generatedBy": {
                "symbol": {
                  "symbol": {
                    "name": "def",
                    "isTerminal": false
                  }
                },
                "alternateSymbols": [
                  {
                    "symbol": {
                      "name": "stmt",
                      "isTerminal": false
                    }
                  },
                  {
                    "symbol": {
                      "name": "func_definition",
                      "isTerminal": false
                    },
                    "tooltip": "Define reusable code as a function"
                  }
                ],
                "selectedSymbol": 0,
                "type": "SelectionBlock"
              }
            }
          }
        ]
      }
    ],
    quickReplace: [
        {
            if_stmt:        ["if", "(", "$$_condition",")","{", "$$_statements","}"],
            if_else_stmt:   [ "if", "(", "$$_condition",")", "{", "$$_statements","}", "else", "{", "statements", "}" ],
            while_stmt:     [ "while", "(", "$$_condition",")","{", "$$_statements", "}" ]
        },
        {
            binary_arith_expr: ["$$_expr1", "op", "$$_expr2"],
            binary_logical_expr: ["$$_expr1", "op", "$$_expr2"],
            rel_expr: ["$$_expr1", "op", "$$_expr2"]
        }
    ]
};

config.darkTheme = {
    "Blocks": {
        "General": {
            "Group": {
                "Group Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "2px",
                    "BorderColor": "#37373D",
                    "BorderRadius": "10px"
                }
            },
            "RepetitionGroup": {
                "Group Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "2px",
                    "BorderColor": "#37373D",
                    "BorderRadius": "10px"
                },
                "Button": {
                    "BackgroundColor": "#0E639C",
                    "PaddingLeft": "8px",
                    "PaddingRight": "8px",
                    "PaddingTop": "8px",
                    "PaddingBottom": "8px",
                    "BorderWidth": "0px",
                    "BorderColor": "transparent"
                },
                "Button Plus Sign": {
                    "Width": "12px",
                    "Height": "12px",
                    "BackgroundColor": "#f2f2f2"
                },
                "Button Tooltip": {
                    "FontSize": "14px",
                    "FontColor": "#eeeeee",
                    "BackgroundColor": "#004A78"
                },
                "Button On Hover": {
                    "BackgroundColor": "#007ACC"
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": "#ffffff"
                }
            },
            "SimpleBlock": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "4px",
                    "PaddingRight": "4px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#E5ECF0",
                    "FontSize": "14px",
                    "BorderWidth": "2px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px"
                }
            },
            "InputBlock": {
                "Input Container": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "2px",
                    "BorderColor": "#37373D",
                    "BorderRadius": "10px"
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "FontColor": "#ffffff",
                    "FontSize": "14px"
                }
            },
            "SelectionBlock": {
                "Selection Block": {
                    "BackgroundColor": "#37373D",
                    "PaddingLeft": "2px",
                    "PaddingRight": "2px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#E5ECF0",
                    "Gap": "20px",
                    "BorderWidth": "2px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px"
                },
                "Arrow": {
                    "BackgroundColor": "#ffffff",
                    "Width": "8px",
                    "Height": "8px"
                },
                "Option Container": {
                    "BackgroundColor": "#252526",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px"
                },
                "Option": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "5px",
                    "PaddingRight": "5px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#C2C2C2"
                },
                "Option On Hover": {
                    "BackgroundColor": "#094771",
                    "FontColor": "#E5ECF0"
                },
                "Option Tooltip": {
                    "FontSize": "14px",
                    "FontColor": "#eeeeee",
                    "BackgroundColor": "#004A78"
                }
            }
        },
        "Specific": {
            "UMINUS": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MINUS": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "PLUS": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MULT": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "DIV": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MODULO": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "GREATER": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "LESS": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "EQUAL_TO": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "NOT_EQUAL_TO": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "GREATER_EQUAL": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "LESS_EQUAL": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "AND": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "OR": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "NOT": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "IDENT": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#4A9CD6",
                    "FontSize": ""
                }
            },
            "INT_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#44C9B0",
                    "FontSize": ""
                }
            },
            "FLOAT_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#44C9B0",
                    "FontSize": ""
                }
            },
            "CHAR_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#CE9178",
                    "FontSize": ""
                }
            },
            "STRING_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#CE9178",
                    "FontSize": ""
                }
            },
            "BOOL_CONST_": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "true": {
                "Simple Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#37373D",
                    "BorderRadius": "10px"
                }
            },
            "false": {
                "Simple Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#37373D",
                    "BorderRadius": "10px"
                }
            },
            "break": {
                "Simple Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#37373D",
                    "BorderRadius": "10px"
                }
            },
            "continue": {
                "Simple Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#37373D",
                    "BorderRadius": "10px"
                }
            },
            "return_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "RETURN": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "EQUALS": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#DCB962",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "FUNCTION": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "OF": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "CALL": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "WITH": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "IF": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "ELSE": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "WHILE": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "FOR": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "stmts": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "stmt": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "if_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "if_else_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "while_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "for_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "assign_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "func_def": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "user_function_call": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "arith_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "rel_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "logical_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "primary_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "binary_arith_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "unary_minus_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "arith_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "rel_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "binary_logical_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "not_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "logical_binary_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "ident_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "expr_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "IN ARRAY": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "get": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "insert": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "push_back": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "set": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "get_size": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "ARRAY": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "array_method_call": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "ARRAY_CONST": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "array_method": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "array_get": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "array_insert": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "array_push_back": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "array_set": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "element_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "IN STRING": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#C57991",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_method": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "string_method_call": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_append": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "string_get_character": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "string_get_substring": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
        }
    },
    "Code Workspace": {
        "Code Workspace": {
            "BackgroundColor": "#1E1E1E"
        },
        "Scrollbar": {
            "Width": "10px",
            "Height": "10px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#424242",
            "BorderRadius": "25px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#525252"
        },
        "Scrollbar Track": {
            "BackgroundColor": "transparent",
            "BorderWidth": "0px",
            "BorderColor": "transparent"
        },
        "Selected Block": {
            "BorderColor": "#fc3",
            "BorderShadow": "0px #fc3",
            "BorderWidth": ""
        },
    },
    "Toolbox": {
        "Toolbox Menu": {
            "BackgroundColor": "#333333",
            "PaddingLeft": "10px",
            "PaddingRight": "10px",
            "PaddingTop": "20px",
            "PaddingBottom": "20px"
        },
        "Toolbox Menu Icon": {
            "BackgroundColor": "#DADADA",
            "Width": "22px",
            "Height": "22px"
        },
        "Toolbox Menu Selected Icon": {
            "BackgroundColor": "#FFFFFF"
        },
        "Toolbox Menu Label": {
            "FontColor": "#DADADA",
            "FontSize": "14px"
        },
        "Toolbox Menu Selected Label": {
            "FontColor": "#FFFFFF"
        },
        "Selected Tag": {
            "BackgroundColor": "#5B80A5"
        },
        "Toolbox": {
            "BackgroundColor": "#252526"
        },
        "Block Category Title": {
            "FontSize": "18px",
            "FontColor": "#DADADA"
        },
        "Block Category On Drop Hover": {
            "BackgroundColor": "#6CB097"
        },
        "Block Category On Drop Placeholder": {
            "BackgroundColor": "green"
        },
        "Block Delete Button Container": {
            "BackgroundColor": "#094771"
        },
        "Block Delete Button X": {
            "BackgroundColor": "#C4C4C4"
        },
        "Scrollbar": {
            "Width": "10px",
            "Height": "10px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#424242",
            "BorderRadius": "25px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#525252"
        },
        "Scrollbar Track": {
            "BackgroundColor": "transparent",
            "BorderWidth": "0px",
            "BorderColor": "transparent"
        }
    },
    "Undo Redo Toolbar": {
        "Undo Button": {
            "BackgroundColor": "#252526",
            "FontColor": "#C4C4C4",
            "FontSize": "14px"
        },
        "Undo Button On Hover": {
            "BackgroundColor": "#333333",
            "FontColor": "#ffffff",
            "FontSize": "14px"
        },
        "Undo Icon": {
            "BackgroundColor": "#75BEFF"
        },
        "Undo Number Notification": {
            "BackgroundColor": "#FA3E3E"
        },
        "Separator": {
            "BackgroundColor": "#333333",
            "Width": "1px"
        },
        "Close Button": {
            "BackgroundColor": "#094771"
        },
        "Close Button X": {
            "BackgroundColor": "#F2F2F2"
        },
        "Close Button On Hover": {
            "BackgroundColor": "#0B598E"
        },
        "Close Button X On Hover": {
            "BackgroundColor": "#FFFFFF"
        }
    },
    "Context Menu": {
        "Option Container": {
            "BackgroundColor": "#252526",
            "BorderWidth": "0px",
            "BorderColor": "transparent",
            "BorderRadius": "0px",
            "PaddingLeft": "0px",
            "PaddingRight": "0px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option": {
            "BackgroundColor": "transparent",
            "PaddingLeft": "20px",
            "PaddingRight": "20px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option On Hover": {
            "BackgroundColor": "#094771"
        },
        "Option Text": {
            "FontColor": "#d1d1d1"
        },
        "Option Text On Hover": {
            "FontColor": "#ffffff"
        },
        "Shortcut text": {
            "FontColor": "#a1a1a1"
        },
        "Shortcut text On Hover": {
            "FontColor": "#ffffff"
        },
        "Inner Option Arrow": {
            "BackgroundColor": "#a1a1a1"
        },
        "Inner Option Arrow On Hover": {
            "BackgroundColor": "#ffffff"
        },
        "Separator": {
            "BackgroundColor": "#303031"
        }
    },
    "Source Text View Colors": {
        "(": "#ffffff",
        ")": "#ffffff",
        "UMINUS": "#DCB962",
        "MINUS": "#DCB962",
        "PLUS": "#DCB962",
        "TIMES": "#DCB962",
        "BY": "#DCB962",
        "MODULO": "#DCB962",
        "GREATER": "#DCB962",
        "LESS": "#DCB962",
        "EQUAL_TO": "#DCB962",
        "NOT_EQUAL_TO": "#DCB962",
        "GREATER_EQUAL": "#DCB962",
        "LESS_EQUAL": "#DCB962",
        "AND": "#DCB962",
        "OR": "#DCB962",
        "NOT": "#DCB962",
        "IDENT": "#ffffff",
        "INT_CONST": "#44C9B0",
        "FLOAT_CONST": "#44C9B0",
        "CHAR_CONST": "#D15036",
        "STRING_CONST": "#D15036",
        "BOOL_CONST_": "#ffffff",
        "true": "#C57991",
        "false": "#C57991",
        "BREAK": "#C57991",
        "CONTINUE": "#C57991",
        "RETURN": "#C57991",
        "EQUALS": "#DCB962",
        "FUNCTION": "#C57991",
        "OF": "#C57991",
        "{": "#ffffff",
        "}": "#ffffff",
        "CALL": "#C57991",
        "WITH": "#C57991",
        "IF": "#C57991",
        "ELSE": "#C57991",
        "WHILE": "#C57991",
        "FOR": "#C57991",
        ";": "#ffffff",
        ",": "#ffffff",
        "stmt": "#ffffff",
        "def": "#ffffff",
        "expr": "#ffffff",
        "arith_expr": "#ffffff",
        "logical_expr": "#ffffff",
        "primary_expr": "#ffffff",
        "arith_op": "#ffffff",
        "rel_op": "#ffffff",
        "logical_binary_op": "#ffffff",
        "ARRAY": "#C57991",
        "IN ARRAY": "#C57991",
        "IN STRING": "#C57991",
        "append": "#ffffff",
        "array_method": "#ffffff",
        "get": "#ffffff",
        "get_character": "#ffffff",
        "get_size": "#ffffff",
        "get_substring": "#ffffff",
        "insert": "#ffffff",
        "push_back": "#ffffff",
        "set": "#ffffff",
        "string_method": "#ffffff",
    },
    "Pretty Print": {
        "stmts":                { "NewLine Between Blocks": true },
        "defs":                 { "NewLine Between Blocks": true },
        "if_stmt":              [ "IF", "condition_expr", "$$_newline", "$$_tab", "if_part"],
        "if_else_stmt":         [ 
                                    "IF", "condition_expr", "$$_newline", "$$_tab", "if_part",
                                    "$$_newline", "ELSE", "$$_newline", "$$_tab", "else_part"
                                ],
        "while_stmt":           [ "WHILE", "condition_expr", "$$_newline", "$$_tab", "while_part" ],
        "for_stmt":             [ "FOR", "initialization", "condition_expr", "step", "$$_newline", "$$_tab", "for_part" ],
        "func_def":             [ "FUNCTION", "NAME", "OF", "ident_list", "$$_newline", "$$_tab", "stmts" ],
        "ident_list":           { "NewLine Between Blocks": false },
        "expr_list":            { "NewLine Between Blocks": false },
        "element_list":         { "NewLine Between Blocks": false },
    },
    "Source Text Pretty Print": {
        "stmts": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "defs": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "element_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "ident_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "expr_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "if_stmt":                      [   
                                            "IF", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "if_part", "$$_newline", "$$_}"
                                        ],
        "if_else_stmt":                 [
                                            "IF", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "if_part", "$$_newline", "$$_}", "$$_newline",
                                            "ELSE", "$$_{", "$$_newline", "$$_tab", "else_part", "$$_newline", "$$_}", 
                                        ],
        "while_stmt":                   [ 
                                            "WHILE", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "while_part", "$$_newline", "$$_}",
                                        ],
        "for_stmt":                     [
                                            "FOR", "$$_(", "initialization_expr", "$$_;", "condition_expr", "$$_;", 
                                            "step_expr", "$$_)", "$$_{", "$$_newline", "$$_tab", "for_part", "$$_newline", "$$_}"
                                        ],
        "func_def":                [
                                            "FUNCTION", "NAME", "OF", "$$_(", "ident_list", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "stmts", "$$_newline", "$$_}"
                                        ],
        "rel_expr":                     [ "$$_(", "expr", "rel_op", "expr", "$$_)" ],
        "assign_expr":                  [ "IDENT", "=", "expr" ],
        "user_function_call":           [ "CALL", "FUNCTION NAME", "WITH", "$$_(", "expr_list", "$$_)" ],
        "binary_arith_expr":            [ "$$_(", "expr", "arith_op", "expr", "$$_)" ],
        "unary_minus_expr":                  [ "-", "expr" ],
        "binary_logical_expr":          [ "$$_(", "expr", "logical_binary_op", "expr", "$$_)" ],
        "not_expr":                     [ "NOT", "expr" ],
        "ARRAY_CONST":                  [ "ARRAY", "WITH", "$$_(", "element_list", "$$_)" ],
        "array_get":                    [ "get", "WITH", "$$_(", "index", "$$_)" ],
        "array_insert":                 [ "insert", "WITH", "$$_(", "index", "$$_,", "element", "$$_)" ],
        "array_push_back":              [ "push_back", "WITH", "$$_(", "element", "$$_)" ],
        "array_set":                    [ "set", "WITH", "$$_(", "index", "$$_,", "element", "$$_)" ],
        "string_append":                [ "append", "WITH", "$$_(", "string", "$$_)" ],
        "string_get_character":         [ "get_character", "WITH", "$$_(", "index", "$$_)" ],
        "string_get_substring":         [ "get_substring", "WITH", "$$_(", "start_index", "$$_,", "end_index", "$$_)" ],
    }
},

config.lightTheme = {
    "Blocks": {
        "General": {
            "Group": {
                "Group Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                }
            },
            "RepetitionGroup": {
                "Group Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                },
                "Button": {
                    "BackgroundColor": "#1A506F",
                    "PaddingLeft": "8px",
                    "PaddingRight": "8px",
                    "PaddingTop": "8px",
                    "PaddingBottom": "8px",
                    "BorderWidth": "0px",
                    "BorderColor": "transparent"
                },
                "Button Plus Sign": {
                    "Width": "12px",
                    "Height": "12px",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "14px",
                    "FontColor": "#eeeeee",
                    "BackgroundColor": "#1A506F"
                },
                "Button On Hover": {
                    "BackgroundColor": "#215F83"
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": "#ffffff"
                }
            },
            "SimpleBlock": {
                "Simple Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "4px",
                    "PaddingRight": "4px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "black",
                    "FontSize": "14px",
                    "BorderWidth": "2px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px"
                }
            },
            "InputBlock": {
                "Input Container": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                },
                "Input": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "FontColor": "#000000",
                    "FontSize": "14px"
                }
            },
            "SelectionBlock": {
                "Selection Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "2px",
                    "PaddingRight": "2px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#000000",
                    "Gap": "20px",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                },
                "Arrow": {
                    "BackgroundColor": "#000000",
                    "Width": "8px",
                    "Height": "8px"
                },
                "Option Container": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "0",
                    "PaddingRight": "0",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px"
                },
                "Option": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "20px",
                    "PaddingRight": "20px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#000000"
                },
                "Option On Hover": {
                    "BackgroundColor": "#1A506F",
                    "FontColor": "#FFFFFF"
                },
                "Option Tooltip": {
                    "FontSize": "14px",
                    "FontColor": "#eeeeee",
                    "BackgroundColor": "#1A506F"
                }
            },
            "OptionalBlock": {
                "Optional Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "2px",
                    "PaddingRight": "2px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#5D6061",
                    "FontSize": "12px",
                    "BorderWidth": "2px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px",
                    "FontIsUnderlined": true,
                },
                "Optional Block On Hover": {
                    "BackgroundColor": "",
                    "FontColor": "#90caf9",
                    "BorderColor": ""
                }
            }
        },
        "Specific": {
            "UMINUS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MINUS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "PLUS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "TIMES": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "BY": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MODULO": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "GREATER": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "LESS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "EQUAL_TO": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "NOT_EQUAL_TO": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "GREATER_EQUAL": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "LESS_EQUAL": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "AND": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "OR": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "NOT": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "IDENT": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#000000",
                    "FontSize": ""
                }
            },
            "INT_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#008052",
                    "FontSize": ""
                }
            },
            "FLOAT_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#008052",
                    "FontSize": ""
                }
            },
            "CHAR_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#A31515",
                    "FontSize": ""
                }
            },
            "STRING_CONST": {
                "Input Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#A31515",
                    "FontSize": ""
                }
            },
            "BOOL_CONST_": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "true": {
                "Simple Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                }
            },
            "false": {
                "Simple Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                }
            },
            "BREAK": {
                "Simple Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                }
            },
            "CONTINUE": {
                "Simple Block": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "2px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                }
            },
            "return_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "RETURN": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "EQUALS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "FUNCTION": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "OF": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "CALL": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "WITH": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "IF": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "ELSE": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "WHILE": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "FOR": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "stmts": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "stmt": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "if_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "if_else_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "while_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "for_stmt": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "assign_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "func_def": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "user_function_call": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "arith_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "rel_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "logical_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "primary_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "binary_arith_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "unary_minus_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "arith_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "rel_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "binary_logical_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "not_expr": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "logical_binary_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "ident_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "expr_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "IN ARRAY": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "get": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "insert": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "push_back": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "set": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "get_size": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "ARRAY": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "array_method_call": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "ARRAY_CONST": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "array_method": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "array_get": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "array_insert": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "array_push_back": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "array_set": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "element_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "IN STRING": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "#0000FF",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_method": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "string_method_call": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_append": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "string_get_character": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
            "string_get_substring": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "transparent",
                    "BorderRadius": ""
                }
            },
        }
    },
    "Code Workspace": {
        "Code Workspace": {
            "BackgroundColor": "#F3F3F3"
        },
        "Scrollbar": {
            "Width": "15px",
            "Height": "15px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#909090",
            "BorderRadius": "0px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#707070"
        },
        "Scrollbar Track": {
            "BackgroundColor": "",
            "BorderWidth": "1px",
            "BorderColor": "#c2c2c2"
        },
        "Selected Block": {
            "BorderColor": "#fc3",
            "BorderShadow": "1px #fc3"
        },
    },
    "Toolbox": {
        "Toolbox Menu": {
            "BackgroundColor": "#1A506F",
            "PaddingLeft": "10px",
            "PaddingRight": "10px",
            "PaddingTop": "20px",
            "PaddingBottom": "20px"
        },
        "Toolbox Menu Icon": {
            "BackgroundColor": "#DADADA",
            "Width": "22px",
            "Height": "22px"
        },
        "Toolbox Menu Selected Icon": {
            "BackgroundColor": "#FFFFFF"
        },
        "Toolbox Menu Label": {
            "FontColor": "#DADADA",
            "FontSize": "14px"
        },
        "Toolbox Menu Selected Label": {
            "FontColor": "#FFFFFF"
        },
        "Selected Tag": {
            "BackgroundColor": "#FFFFFF"
        },
        "Toolbox": {
            "BackgroundColor": "#ECECEC"
        },
        "Block Category Title": {
            "FontSize": "18px",
            "FontColor": "#2B2B2B"
        },
        "Block Category On Drop Hover": {
            "BackgroundColor": "#6CB097"
        },
        "Block Category On Drop Placeholder": {
            "BackgroundColor": "green"
        },
        "Block Delete Button Container": {
            "BackgroundColor": "#094771"
        },
        "Block Delete Button X": {
            "BackgroundColor": "#C4C4C4"
        },
        "Scrollbar": {
            "Width": "15px",
            "Height": "15px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#909090",
            "BorderRadius": "0px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#707070"
        },
        "Scrollbar Track": {
            "BackgroundColor": "transparent",
            "BorderWidth": "1px",
            "BorderColor": "#c2c2c2"
        }
    },
    "Undo Redo Toolbar": {
        "Undo Button": {
            "BackgroundColor": "#ECECEC",
            "FontColor": "black",
            "FontSize": "14px"
        },
        "Undo Button On Hover": {
            "BackgroundColor": "#F3F3F3",
            "FontColor": "black",
            "FontSize": "14px"
        },
        "Undo Icon": {
            "BackgroundColor": "#1A506F"
        },
        "Undo Number Notification": {
            "BackgroundColor": "#FA3E3E"
        },
        "Separator": {
            "BackgroundColor": "#DDDDDD",
            "Width": "1px"
        },
        "Close Button": {
            "BackgroundColor": "#1A506F"
        },
        "Close Button X": {
            "BackgroundColor": "#F2F2F2"
        },
        "Close Button On Hover": {
            "BackgroundColor": "#1F5E83"
        },
        "Close Button X On Hover": {
            "BackgroundColor": "#FFFFFF"
        }
    },
    "Context Menu": {
        "Option Container": {
            "BackgroundColor": "#ECECEC",
            "BorderWidth": "0px",
            "BorderColor": "transparent",
            "BorderRadius": "0px",
            "PaddingLeft": "0px",
            "PaddingRight": "0px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option": {
            "BackgroundColor": "transparent",
            "PaddingLeft": "20px",
            "PaddingRight": "20px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option On Hover": {
            "BackgroundColor": "#1A506F"
        },
        "Option Text": {
            "FontColor": "#2C2C2C"
        },
        "Option Text On Hover": {
            "FontColor": "#ffffff"
        },
        "Shortcut text": {
            "FontColor": "#6C6C6C"
        },
        "Shortcut text On Hover": {
            "FontColor": "#ffffff"
        },
        "Inner Option Arrow": {
            "BackgroundColor": "#6C6C6C"
        },
        "Inner Option Arrow On Hover": {
            "BackgroundColor": "#ffffff"
        },
        "Separator": {
            "BackgroundColor": "#C2C2C2"
        }
    },
    "Source Text View Colors": {
        "(": "#000000",
        ")": "#000000",
        "UMINUS": "#000000",
        "MINUS": "#000000",
        "PLUS": "#000000",
        "TIMES": "#000000",
        "BY": "#000000",
        "MODULO": "#000000",
        "GREATER": "#000000",
        "LESS": "#000000",
        "EQUAL_TO": "#000000",
        "NOT_EQUAL_TO": "#000000",
        "GREATER_EQUAL": "#000000",
        "LESS_EQUAL": "#000000",
        "AND": "#000000",
        "OR": "#000000",
        "NOT": "#000000",
        "IDENT": "#000000",
        "INT_CONST": "#008052",
        "FLOAT_CONST": "#008052",
        "CHAR_CONST": "#A31515",
        "STRING_CONST": "#A31515",
        "BOOL_CONST_": "#000000",
        "true": "#0000FF",
        "false": "#0000FF",
        "BREAK": "#0000FF",
        "CONTINUE": "#0000FF",
        "RETURN": "#0000FF",
        "EQUALS": "#000000",
        "FUNCTION": "#0000FF",
        "OF": "#0000FF",
        "{": "#000000",
        "}": "#000000",
        "CALL": "#0000FF",
        "WITH": "#0000FF",
        "IF": "#0000FF",
        "ELSE": "#0000FF",
        "WHILE": "#0000FF",
        "FOR": "#0000FF",
        ";": "#000000",
        ",": "#000000",
        "stmt": "#000000",
        "def": "#000000",
        "expr": "#000000",
        "arith_expr": "#000000",
        "logical_expr": "#000000",
        "primary_expr": "#000000",
        "arith_op": "#000000",
        "rel_op": "#000000",
        "logical_binary_op": "#000000",
        "ARRAY": "#0000FF",
        "IN ARRAY": "#0000FF",
        "IN STRING": "#0000FF",
        "append": "#000000",
        "array_method": "#000000",
        "get": "#000000",
        "get_character": "#000000",
        "get_size": "#000000",
        "get_substring": "#000000",
        "insert": "#000000",
        "push_back": "#000000",
        "set": "#000000",
        "string_method": "#000000",
        "print": "#000000",
        "input": "#000000",
        "pow": "#000000",
        "sqrt": "#000000",
        "round": "#000000",
        "floor": "#000000",
        "ceiling": "#000000",
        "sin": "#000000",
        "cos": "#000000",
    },
    "Pretty Print": {
        "stmts":                { "NewLine Between Blocks": true },
        "defs":                 { "NewLine Between Blocks": true },
        "if_stmt":              [ "IF", "condition_expr", "$$_newline", "$$_tab", "if_part"],
        "if_else_stmt":         [ 
                                    "IF", "condition_expr", "$$_newline", "$$_tab", "if_part",
                                    "$$_newline", "ELSE", "$$_newline", "$$_tab", "else_part"
                                ],
        "while_stmt":           [ "WHILE", "condition_expr", "$$_newline", "$$_tab", "while_part" ],
        "for_stmt":             [ "FOR", "initialization", "condition_expr", "step", "$$_newline", "$$_tab", "for_part" ],
        "func_def":             [ "FUNCTION", "NAME", "OF", "ident_list", "$$_newline", "$$_tab", "stmts" ],
        "ident_list":           { "NewLine Between Blocks": false },
        "expr_list":            { "NewLine Between Blocks": false },
        "element_list":         { "NewLine Between Blocks": false },
    },
    "Source Text Pretty Print": {
        "stmts": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "defs": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "element_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "ident_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "expr_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "if_stmt":                      [   
                                            "IF", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "if_part", "$$_newline", "$$_}"
                                        ],
        "if_else_stmt":                 [
                                            "IF", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "if_part", "$$_newline", "$$_}", "$$_newline",
                                            "ELSE", "$$_{", "$$_newline", "$$_tab", "else_part", "$$_newline", "$$_}", 
                                        ],
        "while_stmt":                   [ 
                                            "WHILE", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "while_part", "$$_newline", "$$_}",
                                        ],
        "for_stmt":                     [
                                            "FOR", "$$_(", "initialization_expr", "$$_;", "condition_expr", "$$_;", 
                                            "step_expr", "$$_)", "$$_{", "$$_newline", "$$_tab", "for_part", "$$_newline", "$$_}"
                                        ],
        "func_def":                [
                                            "FUNCTION", "NAME", "OF", "$$_(", "ident_list", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "stmts", "$$_newline", "$$_}"
                                        ],
        "rel_expr":                     [ "$$_(", "expr", "rel_op", "expr", "$$_)" ],
        "assign_expr":                  [ "IDENT", "=", "expr" ],
        "user_function_call":               [ "CALL", "FUNCTION NAME", "WITH", "$$_(", "expr_list", "$$_)" ],
        "binary_arith_expr":            [ "$$_(", "expr", "arith_op", "expr", "$$_)" ],
        "unary_minus_expr":                  [ "-", "expr" ],
        "binary_logical_expr":             [ "$$_(", "expr", "logical_binary_op", "expr", "$$_)" ],
        "not_expr":                     [ "NOT", "expr" ],
        "ARRAY_CONST":                  [ "ARRAY", "WITH", "$$_(", "element_list", "$$_)" ],
        "array_get":                    [ "get", "WITH", "$$_(", "index", "$$_)" ],
        "array_insert":                 [ "insert", "WITH", "$$_(", "index", "$$_,", "element", "$$_)" ],
        "array_push_back":              [ "push_back", "WITH", "$$_(", "element", "$$_)" ],
        "array_set":                    [ "set", "WITH", "$$_(", "index", "$$_,", "element", "$$_)" ],
        "string_append":                [ "append", "WITH", "$$_(", "string", "$$_)" ],
        "string_get_character":         [ "get_character", "WITH", "$$_(", "index", "$$_)" ],
        "string_get_substring":         [ "get_substring", "WITH", "$$_(", "start_index", "$$_,", "end_index", "$$_)" ],
    }
};

config.colorfulTheme = {
    "Blocks": {
        "General": {
            "Group": {
                "Group Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px"
                }
            },
            "RepetitionGroup": {
                "Group Block": {
                    "BackgroundColor": "rgba(255,255,255,0.1)",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "1px",
                    "BorderColor": "rgba(0,0,0,0.2)",
                    "BorderRadius": "10px"
                },
                "Button": {
                    "BackgroundColor": "rgba(25,0,125,0.7)",
                    "PaddingLeft": "8px",
                    "PaddingRight": "8px",
                    "PaddingTop": "8px",
                    "PaddingBottom": "8px",
                    "BorderWidth": "0px",
                    "BorderColor": "transparent"
                },
                "Button Plus Sign": {
                    "Width": "12px",
                    "Height": "12px",
                    "BackgroundColor": "#f2f2f2"
                },
                "Button Tooltip": {
                    "FontSize": "14px",
                    "FontColor": "white",
                    "BackgroundColor": "rgba(25,0,125,0.7)"
                },
                "Button On Hover": {
                    "BackgroundColor": "rgba(50,0,150,0.7)"
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": "#ffffff"
                }
            },
            "SimpleBlock": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "4px",
                    "PaddingRight": "4px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#E5ECF0",
                    "FontSize": "14px",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px"
                }
            },
            "InputBlock": {
                "Input Container": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "5px"
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "FontColor": "#000000",
                    "FontSize": "14px"
                }
            },
            "SelectionBlock": {
                "Selection Block": {
                    "BackgroundColor": "rgba(255,255,255,0.7)",
                    "PaddingLeft": "2px",
                    "PaddingRight": "2px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#000000",
                    "Gap": "10px",
                    "BorderWidth": "1px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                },
                "Arrow": {
                    "BackgroundColor": "#000000",
                    "Width": "8px",
                    "Height": "8px"
                },
                "Option Container": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "0",
                    "PaddingRight": "0",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px"
                },
                "Option": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "8px",
                    "PaddingRight": "8px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#000000"
                },
                "Option On Hover": {
                    "BackgroundColor": "#5B80A5",
                    "FontColor": "#FFFFFF"
                },
                "Option Tooltip": {
                    "FontSize": "14px",
                    "FontColor": "#ffffff",
                    "BackgroundColor": "#364D63"
                }
            }
        },
        "Specific": {
          "UMINUS": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "MINUS": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "PLUS": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "MULT": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "DIV": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "MODULO": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "GREATER": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "LESS": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "EQUAL_TO": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "NOT_EQUAL_TO": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "GREATER_EQUAL": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "LESS_EQUAL": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "AND": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "OR": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "NOT": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "ident_type": {
              "Group Block": {
                  "BackgroundColor": "#A55B80",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#A55B80",
                  "BorderRadius": ""
              }
          },
          "type_of": {
              "Group Block": {
                  "BackgroundColor": "#A55B80",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#A55B80",
                  "BorderRadius": ""
              }
          },
          "IDENT": {
              "Input Container": {
                  "BackgroundColor": "#E1C7D2",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Input": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": ""
              }
          },
          "INT_CONST": {
              "Input Container": {
                  "BackgroundColor": "#C7C9E1",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Input": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": ""
              }
          },
          "FLOAT_CONST": {
              "Input Container": {
                  "BackgroundColor": "#C7C9E1",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Input": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": ""
              }
          },
          "CHAR_CONST": {
              "Input Container": {
                  "BackgroundColor": "#C7E1D7",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Input": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": ""
              }
          },
          "STRING_CONST": {
              "Input Container": {
                  "BackgroundColor": "#C7E1D7",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Input": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": ""
              }
          },
          "BOOL_CONST_": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "true": {
              "Simple Block": {
                  "BackgroundColor": "#BDCCDB",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "FontColor": "#000000",
                  "FontSize": "",
                  "BorderWidth": "1px",
                  "BorderColor": "transparent",
                  "BorderRadius": "5px"
              }
          },
          "false": {
              "Simple Block": {
                  "BackgroundColor": "#BDCCDB",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "FontColor": "#000000",
                  "FontSize": "",
                  "BorderWidth": "1px",
                  "BorderColor": "transparent",
                  "BorderRadius": "5px"
              }
          },
          "break_stmt": {
              "Group Block": {
                  "BackgroundColor": "#FFA500",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#488448",
                  "BorderRadius": ""
              }
          },
          "break": {
              "Simple Block": {
                  "BackgroundColor": "#FFA500",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "continue_stmt": {
              "Group Block": {
                  "BackgroundColor": "#FFA500",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#488448",
                  "BorderRadius": ""
              }
          },
          "continue": {
              "Simple Block": {
                  "BackgroundColor": "#FFA500",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "return_stmt": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#364D63",
                  "BorderRadius": ""
              }
          },
          "return": {
              "Simple Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "EQUALS": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "FUNCTION": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "if": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "else": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "while": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "for": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "stmts": {
              "Group Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Button": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": ""
              },
              "Button Plus Sign": {
                  "Width": "",
                  "Height": "",
                  "BackgroundColor": ""
              },
              "Button Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              },
              "Button On Hover": {
                  "BackgroundColor": ""
              },
              "Button Plus Sign On Hover": {
                  "BackgroundColor": ""
              }
          },
          "stmt": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "if_stmt": {
              "Group Block": {
                  "BackgroundColor": "#5B80A5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#364D63",
                  "BorderRadius": ""
              }
          },
          "if_else_stmt": {
              "Group Block": {
                  "BackgroundColor": "#5B80A5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#364D63",
                  "BorderRadius": ""
              }
          },"ternary_stmt": {
              "Group Block": {
                  "BackgroundColor": "#5B80A5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#364D63",
                  "BorderRadius": ""
              }
          },
          "while_stmt": {
              "Group Block": {
                  "BackgroundColor": "#5BA55B",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#488448",
                  "BorderRadius": ""
              }
          },
          "for_stmt": {
              "Group Block": {
                  "BackgroundColor": "#5BA55B",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#488448",
                  "BorderRadius": ""
              }
          },
          "assign_expr": {
              "Group Block": {
                  "BackgroundColor": "#A55B80",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#844866",
                  "BorderRadius": ""
              }
          },
          "named_func": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#7A4884",
                  "BorderRadius": ""
              }
          },
          "anonymous_func": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#7A4884",
                  "BorderRadius": ""
              }
          },
          "function_call": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#7A4884",
                  "BorderRadius": ""
              }
          },
          "object_function": {
            "Group Block": {
                "BackgroundColor": "#995BA5",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#7A4884",
                "BorderRadius": ""
            }
          },
          "array_function": {
            "Group Block": {
                "BackgroundColor": "#995BA5",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#7A4884",
                "BorderRadius": ""
            }
          },
          "types": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "expr": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "arith_expr": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "rel_expr": {
              "Group Block": {
                  "BackgroundColor": "#6C8DAE",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#56718B",
                  "BorderRadius": ""
              }
          },
          "logical_expr": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "primary_expr": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "binary_arith_expr": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "unary_expr_before": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "unary_expr_after": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "arith_op": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "rel_op": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "binary_logical_expr": {
              "Group Block": {
                  "BackgroundColor": "#5B80A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#364D63",
                  "BorderRadius": ""
              }
          },
          "not_expr": {
              "Group Block": {
                  "BackgroundColor": "#5B80A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#364D63",
                  "BorderRadius": ""
              }
          },
          "logical_binary_op": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "ident_list": {
              "Group Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Button": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": ""
              },
              "Button Plus Sign": {
                  "Width": "",
                  "Height": "",
                  "BackgroundColor": ""
              },
              "Button Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              },
              "Button On Hover": {
                  "BackgroundColor": ""
              },
              "Button Plus Sign On Hover": {
                  "BackgroundColor": ""
              }
          },
          "expr_list": {
              "Group Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Button": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": ""
              },
              "Button Plus Sign": {
                  "Width": "",
                  "Height": "",
                  "BackgroundColor": ""
              },
              "Button Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              },
              "Button On Hover": {
                  "BackgroundColor": ""
              },
              "Button Plus Sign On Hover": {
                  "BackgroundColor": ""
              }
          },
          "get": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "push": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "pop": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "set": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "length": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "join": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "tostring": {
              "Simple Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontColor": "",
                  "FontSize": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "object_function_call": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "new_array": {
            "Group Block": {
                "BackgroundColor": "#745BA5",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#5C4884",
                "BorderRadius": ""
            }
        },
          "ARRAY_CONST": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "new_object": {
            "Group Block": {
                "BackgroundColor": "#745BA5",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#5C4884",
                "BorderRadius": ""
            }
        },
          "OBJECT_CONST": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "array_method_call": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "array_get": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "array_push": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "array_pop": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "array_set": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "array_size": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "array_join": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "array_to_string": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "object_method_call": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "object_get_dot": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "object_get_sq": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "object_delete": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "object_set": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "object_size": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "element_list": {
              "Group Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Button": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": ""
              },
              "Button Plus Sign": {
                  "Width": "",
                  "Height": "",
                  "BackgroundColor": ""
              },
              "Button Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              },
              "Button On Hover": {
                  "BackgroundColor": ""
              },
              "Button Plus Sign On Hover": {
                  "BackgroundColor": ""
              }
          },
          "pair_element_list": {
              "Group Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Button": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": ""
              },
              "Button Plus Sign": {
                  "Width": "",
                  "Height": "",
                  "BackgroundColor": ""
              },
              "Button Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              },
              "Button On Hover": {
                  "BackgroundColor": ""
              },
              "Button Plus Sign On Hover": {
                  "BackgroundColor": ""
              }
          },
          "pair_element": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "10px",
                  "PaddingRight": "10px",
                  "PaddingTop": "5px",
                  "PaddingBottom": "5px",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
          "string_method": {
              "Selection Block": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": "",
                  "Gap": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              },
              "Arrow": {
                  "BackgroundColor": "",
                  "Width": "",
                  "Height": ""
              },
              "Option Container": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": ""
              },
              "Option": {
                  "BackgroundColor": "",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "FontSize": "",
                  "FontColor": ""
              },
              "Option On Hover": {
                  "BackgroundColor": "",
                  "FontColor": ""
              },
              "Option Tooltip": {
                  "FontSize": "",
                  "FontColor": "",
                  "BackgroundColor": ""
              }
          },
          "string_method_call": {
              "Group Block": {
                  "BackgroundColor": "#5BA58C",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "string_concat": {
              "Group Block": {
                  "BackgroundColor": "transparent",
                  "PaddingLeft": "0px",
                  "PaddingRight": "0px",
                  "PaddingTop": "0px",
                  "PaddingBottom": "0px",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "string_upperCase": {
              "Group Block": {
                  "BackgroundColor": "transparent",
                  "PaddingLeft": "0px",
                  "PaddingRight": "0px",
                  "PaddingTop": "0px",
                  "PaddingBottom": "0px",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "string_lowCase": {
              "Group Block": {
                  "BackgroundColor": "transparent",
                  "PaddingLeft": "0px",
                  "PaddingRight": "0px",
                  "PaddingTop": "0px",
                  "PaddingBottom": "0px",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "string_substring": {
              "Group Block": {
                  "BackgroundColor": "transparent",
                  "PaddingLeft": "0px",
                  "PaddingRight": "0px",
                  "PaddingTop": "0px",
                  "PaddingBottom": "0px",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "string_size": {
              "Group Block": {
                  "BackgroundColor": "transparent",
                  "PaddingLeft": "0px",
                  "PaddingRight": "0px",
                  "PaddingTop": "0px",
                  "PaddingBottom": "0px",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "string_slice": {
              "Group Block": {
                  "BackgroundColor": "transparent",
                  "PaddingLeft": "0px",
                  "PaddingRight": "0px",
                  "PaddingTop": "0px",
                  "PaddingBottom": "0px",
                  "BorderWidth": "",
                  "BorderColor": "",
                  "BorderRadius": ""
              }
          },
          "math_abs": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "math_pow": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "math_sqrt": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "math_round": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "math_floor": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "math_ceil": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "math_sin": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "math_cos": {
              "Group Block": {
                  "BackgroundColor": "#5B67A5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#363D63",
                  "BorderRadius": ""
              }
          },
          "print_call": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#7A4884",
                  "BorderRadius": ""
              }
          },
          "input": {
            "Group Block": {
                "BackgroundColor": "#995BA5",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#7A4884",
                "BorderRadius": ""
            }
        },
        "add_key_press": {
          "Group Block": {
              "BackgroundColor": "#995BA5",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#995BA5",
              "BorderRadius": ""
          }
        },
        "remove_key_press": {
          "Group Block": {
              "BackgroundColor": "#995BA5",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#995BA5",
              "BorderRadius": ""
          }
        },
        "forward_turtle": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "backward_turtle": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "turn_right": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "turn_left": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "goto_position": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "clear": {
          "Simple Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "penup": {
          "Simple Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "pendown": {
          "Simple Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "reset": {
          "Simple Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "define_angle": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "define_widthline": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "define_turtleshape": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "change_color": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "write_msg": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "random_int": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "hide_turtle": {
          "Simple Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "show_turtle": {
          "Simple Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "set_redraw": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "draw": {
          "Simple Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "repeat_action": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "set_wrap": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "set_delay": {
          "Group Block": {
              "BackgroundColor": "#846649",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "#846649",
              "BorderRadius": ""
          }
        },
        "repeat_stmt": {
          "Group Block": {
              "BackgroundColor": "#5BA55B",
              "PaddingLeft": "10px",
              "PaddingRight": "10px",
              "PaddingTop": "5px",
              "PaddingBottom": "5px",
              "BorderWidth": "",
              "BorderColor": "#488448",
              "BorderRadius": ""
          }
      },
      "rgb_color": {
        "Group Block": {
            "BackgroundColor": "transparent",
            "PaddingLeft": "",
            "PaddingRight": "",
            "PaddingTop": "",
            "PaddingBottom": "",
            "BorderWidth": "",
            "BorderColor": "",
            "BorderRadius": ""
        }
    },
    "output_color": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
  },
    }
    },
    "Code Workspace": {
        "Code Workspace": {
            "BackgroundColor": "#ffffff"
        },
        "Scrollbar": {
            "Width": "10px",
            "Height": "10px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#BBBBBB",
            "BorderRadius": "25px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#999999"
        },
        "Scrollbar Track": {
            "BackgroundColor": "transparent",
            "BorderWidth": "0px",
            "BorderColor": "transparent"
        },
        "Selected Block": {
            "BorderColor": "#fc3",
            "BorderShadow": "1px #fc3",
            "BorderWidth": ""
        },
    },
    "Toolbox": {
        "Toolbox Menu": {
            "BackgroundColor": "#5B80A5",
            "PaddingLeft": "10px",
            "PaddingRight": "10px",
            "PaddingTop": "20px",
            "PaddingBottom": "20px"
        },
        "Toolbox Menu Icon": {
            "BackgroundColor": "#DADADA",
            "Width": "22px",
            "Height": "22px"
        },
        "Toolbox Menu Selected Icon": {
            "BackgroundColor": "#FFFFFF"
        },
        "Toolbox Menu Label": {
            "FontColor": "#DADADA",
            "FontSize": "14px"
        },
        "Toolbox Menu Selected Label": {
            "FontColor": "#FFFFFF"
        },
        "Selected Tag": {
            "BackgroundColor": "#FFFFFF"
        },
        "Toolbox": {
            "BackgroundColor": "#F6F6F6"
        },
        "Block Category Title": {
            "FontSize": "18px",
            "FontColor": "#2B2B2B"
        },
        "Block Category On Drop Hover": {
            "BackgroundColor": "#6CB097"
        },
        "Block Category On Drop Placeholder": {
            "BackgroundColor": "green"
        },
        "Block Delete Button Container": {
            "BackgroundColor": "#094771"
        },
        "Block Delete Button X": {
            "BackgroundColor": "#C4C4C4"
        },
        "Scrollbar": {
            "Width": "10px",
            "Height": "10px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#BBBBBB",
            "BorderRadius": "25px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#999999"
        },
        "Scrollbar Track": {
            "BackgroundColor": "transparent",
            "BorderWidth": "0px",
            "BorderColor": "#c2c2c2"
        }
    },
    "Undo Redo Toolbar": {
        "Undo Button": {
            "BackgroundColor": "#ffffff",
            "FontColor": "black",
            "FontSize": "14px"
        },
        "Undo Button On Hover": {
            "BackgroundColor": "#F3F3F3",
            "FontColor": "black",
            "FontSize": "14px"
        },
        "Undo Icon": {
            "BackgroundColor": "#1A506F"
        },
        "Undo Number Notification": {
            "BackgroundColor": "#FA3E3E"
        },
        "Separator": {
            "BackgroundColor": "#DDDDDD",
            "Width": "1px"
        },
        "Close Button": {
            "BackgroundColor": "#5B80A5"
        },
        "Close Button X": {
            "BackgroundColor": "#F2F2F2"
        },
        "Close Button On Hover": {
            "BackgroundColor": "#1F5E83"
        },
        "Close Button X On Hover": {
            "BackgroundColor": "#FFFFFF"
        }
    },
    "Context Menu": {
        "Option Container": {
            "BackgroundColor": "#ffffff",
            "BorderWidth": "0px",
            "BorderColor": "transparent",
            "BorderRadius": "5px",
            "PaddingLeft": "0px",
            "PaddingRight": "0px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option": {
            "BackgroundColor": "transparent",
            "PaddingLeft": "20px",
            "PaddingRight": "20px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option On Hover": {
            "BackgroundColor": "#5B80A5"
        },
        "Option Text": {
            "FontColor": "#2C2C2C"
        },
        "Option Text On Hover": {
            "FontColor": "#ffffff"
        },
        "Shortcut text": {
            "FontColor": "#6C6C6C"
        },
        "Shortcut text On Hover": {
            "FontColor": "#ffffff"
        },
        "Inner Option Arrow": {
            "BackgroundColor": "#6C6C6C"
        },
        "Inner Option Arrow On Hover": {
            "BackgroundColor": "#ffffff"
        },
        "Separator": {
            "BackgroundColor": "#C2C2C2"
        }
    },
    "Source Text View Colors": {
        "(": "#000000",
        ")": "#000000",
        "UMINUS": "#000000",
        "MINUS": "#000000",
        "PLUS": "#000000",
        "TIMES": "#000000",
        "BY": "#000000",
        "MODULO": "#000000",
        "GREATER": "#000000",
        "LESS": "#000000",
        "EQUAL_TO": "#000000",
        "NOT_EQUAL_TO": "#000000",
        "GREATER_EQUAL": "#000000",
        "LESS_EQUAL": "#000000",
        "AND": "#000000",
        "OR": "#000000",
        "NOT": "#000000",
        "IDENT": "#000000",
        "INT_CONST": "#008052",
        "FLOAT_CONST": "#008052",
        "CHAR_CONST": "#A31515",
        "STRING_CONST": "#A31515",
        "BOOL_CONST_": "#000000",
        "true": "#0000FF",
        "false": "#0000FF",
        "BREAK": "#0000FF",
        "CONTINUE": "#0000FF",
        "RETURN": "#0000FF",
        "EQUALS": "#000000",
        "FUNCTION": "#0000FF",
        "OF": "#0000FF",
        "{": "#000000",
        "}": "#000000",
        "CALL": "#0000FF",
        "WITH": "#0000FF",
        "IF": "#0000FF",
        "ELSE": "#0000FF",
        "WHILE": "#0000FF",
        "FOR": "#0000FF",
        ";": "#000000",
        ",": "#000000",
        "stmt": "#000000",
        "def": "#000000",
        "expr": "#000000",
        "arith_expr": "#000000",
        "logical_expr": "#000000",
        "primary_expr": "#000000",
        "arith_op": "#000000",
        "rel_op": "#000000",
        "logical_binary_op": "#000000",
        "ARRAY": "#0000FF",
        "IN ARRAY": "#0000FF",
        "IN STRING": "#0000FF",
        "append": "#000000",
        "array_method": "#000000",
        "get": "#000000",
        "get_character": "#000000",
        "get_size": "#000000",
        "get_substring": "#000000",
        "insert": "#000000",
        "push_back": "#000000",
        "set": "#000000",
        "string_method": "#000000",
        "print": "#000000",
        "input": "#000000",
        "pow": "#000000",
        "sqrt": "#000000",
        "round": "#000000",
        "floor": "#000000",
        "ceiling": "#000000",
        "sin": "#000000",
        "cos": "#000000",
    },
    "Pretty Print": {
        "stmts":                { "NewLine Between Blocks": true },
        "defs":                 { "NewLine Between Blocks": true },
        "if_stmt":              [ "IF", "condition_expr", "$$_newline", "$$_tab", "if_part"],
        "if_else_stmt":         [ 
                                    "IF", "condition_expr", "$$_newline", "$$_tab", "if_part",
                                    "$$_newline", "ELSE", "$$_newline", "$$_tab", "else_part"
                                ],
        "while_stmt":           [ "WHILE", "condition_expr", "$$_newline", "$$_tab", "while_part" ],
        "for_stmt":             [ "FOR", "initialization", "condition_expr", "step", "$$_newline", "$$_tab", "for_part" ],
        "func_def":             [ "FUNCTION", "NAME", "OF", "ident_list", "$$_newline", "$$_tab", "stmts" ],
        "ident_list":           { "NewLine Between Blocks": false },
        "expr_list":            { "NewLine Between Blocks": false },
        "element_list":         { "NewLine Between Blocks": false },
    },
    "Source Text Pretty Print": {
        "stmts": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "defs": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "element_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "ident_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "expr_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "if_stmt":                      [   
                                            "IF", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "if_part", "$$_newline", "$$_}"
                                        ],
        "if_else_stmt":                 [
                                            "IF", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "if_part", "$$_newline", "$$_}", "$$_newline",
                                            "ELSE", "$$_{", "$$_newline", "$$_tab", "else_part", "$$_newline", "$$_}", 
                                        ],
        "while_stmt":                   [ 
                                            "WHILE", "$$_(", "condition_expr", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "while_part", "$$_newline", "$$_}",
                                        ],
        "for_stmt":                     [
                                            "FOR", "$$_(", "initialization_expr", "$$_;", "condition_expr", "$$_;", 
                                            "step_expr", "$$_)", "$$_{", "$$_newline", "$$_tab", "for_part", "$$_newline", "$$_}"
                                        ],
        "func_def":                [
                                            "FUNCTION", "NAME", "OF", "$$_(", "ident_list", "$$_)", "$$_{",
                                            "$$_newline", "$$_tab", "stmts", "$$_newline", "$$_}"
                                        ],
        "rel_expr":                     [ "$$_(", "expr", "rel_op", "expr", "$$_)" ],
        "assign_expr":                  [ "IDENT", "=", "expr" ],
        "user_function_call":               [ "CALL", "FUNCTION NAME", "WITH", "$$_(", "expr_list", "$$_)" ],
        "binary_arith_expr":            [ "$$_(", "expr", "arith_op", "expr", "$$_)" ],
        "unary_minus_expr":                  [ "-", "expr" ],
        "binary_logical_expr":             [ "$$_(", "expr", "logical_binary_op", "expr", "$$_)" ],
        "not_expr":                     [ "NOT", "expr" ],
        "ARRAY_CONST":                  [ "ARRAY", "WITH", "$$_(", "element_list", "$$_)" ],
        "array_get":                    [ "get", "WITH", "$$_(", "index", "$$_)" ],
        "array_insert":                 [ "insert", "WITH", "$$_(", "index", "$$_,", "element", "$$_)" ],
        "array_push_back":              [ "push_back", "WITH", "$$_(", "element", "$$_)" ],
        "array_set":                    [ "set", "WITH", "$$_(", "index", "$$_,", "element", "$$_)" ],
        "string_append":                [ "append", "WITH", "$$_(", "string", "$$_)" ],
        "string_get_character":         [ "get_character", "WITH", "$$_(", "index", "$$_)" ],
        "string_get_substring":         [ "get_substring", "WITH", "$$_(", "start_index", "$$_,", "end_index", "$$_)" ],
    }
};

config.darkColorfulTheme = {
    "Blocks": {
        "General": {
            "Group": {
                "Group Block": {
                    "BackgroundColor": "#1e1e1e",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px"
                }
            },
            "RepetitionGroup": {
                "Group Block": {
                    "BackgroundColor": "rgba(255,255,255,0.1)",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "1px",
                    "BorderColor": "rgba(0,0,0,0.2)",
                    "BorderRadius": "10px"
                },
                "Button": {
                    "BackgroundColor": "rgba(75,0,150,0.7)",
                    "PaddingLeft": "8px",
                    "PaddingRight": "8px",
                    "PaddingTop": "8px",
                    "PaddingBottom": "8px",
                    "BorderWidth": "0px",
                    "BorderColor": "transparent"
                },
                "Button Plus Sign": {
                    "Width": "12px",
                    "Height": "12px",
                    "BackgroundColor": "#f2f2f2"
                },
                "Button Tooltip": {
                    "FontSize": "14px",
                    "FontColor": "white",
                    "BackgroundColor": "rgba(75,0,150,1)"
                },
                "Button On Hover": {
                    "BackgroundColor": "rgba(100,0,175,0.7)"
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": "#ffffff"
                }
            },
            "SimpleBlock": {
                "Simple Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "4px",
                    "PaddingRight": "4px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#ffffff",
                    "FontSize": "14px",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "10px"
                }
            },
            "InputBlock": {
                "Input Container": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "5px"
                },
                "Input": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "FontColor": "#000000",
                    "FontSize": "14px"
                }
            },
            "SelectionBlock": {
                "Selection Block": {
                    "BackgroundColor": "rgba(255,255,255,0.85)",
                    "PaddingLeft": "2px",
                    "PaddingRight": "2px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#000000",
                    "Gap": "10px",
                    "BorderWidth": "1px",
                    "BorderColor": "#c2c2c2",
                    "BorderRadius": "10px"
                },
                "Arrow": {
                    "BackgroundColor": "#000000",
                    "Width": "8px",
                    "Height": "8px"
                },
                "Option Container": {
                    "BackgroundColor": "#ffffff",
                    "PaddingLeft": "1px",
                    "PaddingRight": "1px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px"
                },
                "Option": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "8px",
                    "PaddingRight": "8px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontSize": "14px",
                    "FontColor": "#000000"
                },
                "Option On Hover": {
                    "BackgroundColor": "#5B80A5",
                    "FontColor": "#FFFFFF"
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "#ffffff",
                    "BackgroundColor": "#364D63"
                }
            }
        },
        "Specific": {
            "UMINUS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MINUS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "PLUS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MULT": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "DIV": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "MODULO": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "GREATER": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "LESS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "EQUAL_TO": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "NOT_EQUAL_TO": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "GREATER_EQUAL": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "LESS_EQUAL": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "AND": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "OR": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "NOT": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "ident_type": {
                "Group Block": {
                    "BackgroundColor": "#A55B80",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#A55B80",
                    "BorderRadius": ""
                }
            },
            "type_of": {
                "Group Block": {
                    "BackgroundColor": "#A55B80",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#A55B80",
                    "BorderRadius": ""
                }
            },
            "IDENT": {
                "Input Container": {
                    "BackgroundColor": "#E1C7D2",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": ""
                }
            },
            "INT_CONST": {
                "Input Container": {
                    "BackgroundColor": "#C7C9E1",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": ""
                }
            },
            "FLOAT_CONST": {
                "Input Container": {
                    "BackgroundColor": "#C7C9E1",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": ""
                }
            },
            "CHAR_CONST": {
                "Input Container": {
                    "BackgroundColor": "#C7E1D7",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": ""
                }
            },
            "STRING_CONST": {
                "Input Container": {
                    "BackgroundColor": "#C7E1D7",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Input": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": ""
                }
            },
            "BOOL_CONST_": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "true": {
                "Simple Block": {
                    "BackgroundColor": "#BDCCDB",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#000000",
                    "FontSize": "",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "5px"
                }
            },
            "false": {
                "Simple Block": {
                    "BackgroundColor": "#BDCCDB",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "#000000",
                    "FontSize": "",
                    "BorderWidth": "1px",
                    "BorderColor": "transparent",
                    "BorderRadius": "5px"
                }
            },
            "break_stmt": {
                "Group Block": {
                    "BackgroundColor": "#FFA500",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#488448",
                    "BorderRadius": ""
                }
            },
            "break": {
                "Simple Block": {
                    "BackgroundColor": "#FFA500",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "continue_stmt": {
                "Group Block": {
                    "BackgroundColor": "#FFA500",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#488448",
                    "BorderRadius": ""
                }
            },
            "continue": {
                "Simple Block": {
                    "BackgroundColor": "#FFA500",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "return_stmt": {
                "Group Block": {
                    "BackgroundColor": "#995BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#364D63",
                    "BorderRadius": ""
                }
            },
            "return": {
                "Simple Block": {
                    "BackgroundColor": "#995BA5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "EQUALS": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "FUNCTION": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "if": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "else": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "while": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "for": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "stmts": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "stmt": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "if_stmt": {
                "Group Block": {
                    "BackgroundColor": "#5B80A5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#364D63",
                    "BorderRadius": ""
                }
            },
            "if_else_stmt": {
                "Group Block": {
                    "BackgroundColor": "#5B80A5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#364D63",
                    "BorderRadius": ""
                }
            },"ternary_stmt": {
                "Group Block": {
                    "BackgroundColor": "#5B80A5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#364D63",
                    "BorderRadius": ""
                }
            },
            "while_stmt": {
                "Group Block": {
                    "BackgroundColor": "#5BA55B",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#488448",
                    "BorderRadius": ""
                }
            },
            "for_stmt": {
                "Group Block": {
                    "BackgroundColor": "#5BA55B",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#488448",
                    "BorderRadius": ""
                }
            },
            "assign_expr": {
                "Group Block": {
                    "BackgroundColor": "#A55B80",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#844866",
                    "BorderRadius": ""
                }
            },
            "named_func": {
                "Group Block": {
                    "BackgroundColor": "#995BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#7A4884",
                    "BorderRadius": ""
                }
            },
            "anonymous_func": {
                "Group Block": {
                    "BackgroundColor": "#995BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#7A4884",
                    "BorderRadius": ""
                }
            },
            "function_call": {
                "Group Block": {
                    "BackgroundColor": "#995BA5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#7A4884",
                    "BorderRadius": ""
                }
            },
            "object_function": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#7A4884",
                  "BorderRadius": ""
              }
            },
            "array_function": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#7A4884",
                  "BorderRadius": ""
              }
            },
            "types": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "arith_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "rel_expr": {
                "Group Block": {
                    "BackgroundColor": "#6C8DAE",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#56718B",
                    "BorderRadius": ""
                }
            },
            "logical_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "primary_expr": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "binary_arith_expr": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "unary_expr_before": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "unary_expr_after": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "arith_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "rel_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "binary_logical_expr": {
                "Group Block": {
                    "BackgroundColor": "#5B80A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#364D63",
                    "BorderRadius": ""
                }
            },
            "not_expr": {
                "Group Block": {
                    "BackgroundColor": "#5B80A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#364D63",
                    "BorderRadius": ""
                }
            },
            "logical_binary_op": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "ident_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "expr_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "get": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "push": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "pop": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "set": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "length": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "join": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "tostring": {
                "Simple Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontColor": "",
                    "FontSize": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "object_function_call": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "new_array": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
            "ARRAY_CONST": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "new_object": {
              "Group Block": {
                  "BackgroundColor": "#745BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#5C4884",
                  "BorderRadius": ""
              }
          },
            "OBJECT_CONST": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "array_method_call": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "array_get": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "array_push": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "array_pop": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "array_set": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "array_size": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "array_join": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "array_to_string": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "object_method_call": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "object_get_dot": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "object_get_sq": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "object_delete": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "object_set": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "object_size": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "element_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "pair_element_list": {
                "Group Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Button": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": ""
                },
                "Button Plus Sign": {
                    "Width": "",
                    "Height": "",
                    "BackgroundColor": ""
                },
                "Button Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                },
                "Button On Hover": {
                    "BackgroundColor": ""
                },
                "Button Plus Sign On Hover": {
                    "BackgroundColor": ""
                }
            },
            "pair_element": {
                "Group Block": {
                    "BackgroundColor": "#745BA5",
                    "PaddingLeft": "10px",
                    "PaddingRight": "10px",
                    "PaddingTop": "5px",
                    "PaddingBottom": "5px",
                    "BorderWidth": "",
                    "BorderColor": "#5C4884",
                    "BorderRadius": ""
                }
            },
            "string_method": {
                "Selection Block": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": "",
                    "Gap": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                },
                "Arrow": {
                    "BackgroundColor": "",
                    "Width": "",
                    "Height": ""
                },
                "Option Container": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": ""
                },
                "Option": {
                    "BackgroundColor": "",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "FontSize": "",
                    "FontColor": ""
                },
                "Option On Hover": {
                    "BackgroundColor": "",
                    "FontColor": ""
                },
                "Option Tooltip": {
                    "FontSize": "",
                    "FontColor": "",
                    "BackgroundColor": ""
                }
            },
            "string_method_call": {
                "Group Block": {
                    "BackgroundColor": "#5BA58C",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_concat": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_upperCase": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_lowCase": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_substring": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_size": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "string_slice": {
                "Group Block": {
                    "BackgroundColor": "transparent",
                    "PaddingLeft": "0px",
                    "PaddingRight": "0px",
                    "PaddingTop": "0px",
                    "PaddingBottom": "0px",
                    "BorderWidth": "",
                    "BorderColor": "",
                    "BorderRadius": ""
                }
            },
            "math_abs": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "math_pow": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "math_sqrt": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "math_round": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "math_floor": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "math_ceil": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "math_sin": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "math_cos": {
                "Group Block": {
                    "BackgroundColor": "#5B67A5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#363D63",
                    "BorderRadius": ""
                }
            },
            "print_call": {
                "Group Block": {
                    "BackgroundColor": "#995BA5",
                    "PaddingLeft": "",
                    "PaddingRight": "",
                    "PaddingTop": "",
                    "PaddingBottom": "",
                    "BorderWidth": "",
                    "BorderColor": "#7A4884",
                    "BorderRadius": ""
                }
            },
            "input": {
              "Group Block": {
                  "BackgroundColor": "#995BA5",
                  "PaddingLeft": "",
                  "PaddingRight": "",
                  "PaddingTop": "",
                  "PaddingBottom": "",
                  "BorderWidth": "",
                  "BorderColor": "#7A4884",
                  "BorderRadius": ""
              }
          },
          "add_key_press": {
            "Group Block": {
                "BackgroundColor": "#995BA5",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#995BA5",
                "BorderRadius": ""
            }
          },
          "remove_key_press": {
            "Group Block": {
                "BackgroundColor": "#995BA5",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#995BA5",
                "BorderRadius": ""
            }
          },
          "forward_turtle": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "backward_turtle": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "turn_right": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "turn_left": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "goto_position": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "clear": {
            "Simple Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "penup": {
            "Simple Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "pendown": {
            "Simple Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "reset": {
            "Simple Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "define_angle": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "define_widthline": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "define_turtleshape": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "change_color": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "write_msg": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "random_int": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "hide_turtle": {
            "Simple Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "show_turtle": {
            "Simple Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "set_redraw": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "draw": {
            "Simple Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "repeat_action": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "set_wrap": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "set_delay": {
            "Group Block": {
                "BackgroundColor": "#846649",
                "PaddingLeft": "",
                "PaddingRight": "",
                "PaddingTop": "",
                "PaddingBottom": "",
                "BorderWidth": "",
                "BorderColor": "#846649",
                "BorderRadius": ""
            }
          },
          "repeat_stmt": {
            "Group Block": {
                "BackgroundColor": "#5BA55B",
                "PaddingLeft": "10px",
                "PaddingRight": "10px",
                "PaddingTop": "5px",
                "PaddingBottom": "5px",
                "BorderWidth": "",
                "BorderColor": "#488448",
                "BorderRadius": ""
            }
        },
        "rgb_color": {
          "Group Block": {
              "BackgroundColor": "transparent",
              "PaddingLeft": "",
              "PaddingRight": "",
              "PaddingTop": "",
              "PaddingBottom": "",
              "BorderWidth": "",
              "BorderColor": "",
              "BorderRadius": ""
          }
      },
      "output_color": {
        "Group Block": {
            "BackgroundColor": "#995BA5",
            "PaddingLeft": "",
            "PaddingRight": "",
            "PaddingTop": "",
            "PaddingBottom": "",
            "BorderWidth": "",
            "BorderColor": "#7A4884",
            "BorderRadius": ""
        }
    },
    "new_window": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "new_button": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "new_textfield": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "new_textarea": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "new_checkbox": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "new_dropdown": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "button_disabled": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "button_text": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "button_color": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "button_width": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "button_height": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "button_position": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textfield_width": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textfield_position": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textfield_value": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textfield_maxlength": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textarea_width": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textarea_position": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textarea_rows": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textarea_cols": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "textarea_maxlength": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "checkbox_position": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "checkbox_text": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
    "checkbox_checked": {
      "Group Block": {
          "BackgroundColor": "#995BA5",
          "PaddingLeft": "",
          "PaddingRight": "",
          "PaddingTop": "",
          "PaddingBottom": "",
          "BorderWidth": "",
          "BorderColor": "#7A4884",
          "BorderRadius": ""
      }
    },
  }
    },
    "Code Workspace": {
        "Code Workspace": {
            "BackgroundColor": "#1E1E1E"
        },
        "Scrollbar": {
            "Width": "10px",
            "Height": "10px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#424242",
            "BorderRadius": "25px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#525252"
        },
        "Scrollbar Track": {
            "BackgroundColor": "transparent",
            "BorderWidth": "0px",
            "BorderColor": "transparent"
        },
        "Selected Block": {
            "BorderColor": "#fc3",
            "BorderShadow": "1px #fc3",
            "BorderWidth": ""
        },
    },
    "Toolbox": {
        "Toolbox Menu": {
            "BackgroundColor": "#333333",
            "PaddingLeft": "10px",
            "PaddingRight": "10px",
            "PaddingTop": "20px",
            "PaddingBottom": "20px"
        },
        "Toolbox Menu Icon": {
            "BackgroundColor": "#DADADA",
            "Width": "22px",
            "Height": "22px"
        },
        "Toolbox Menu Selected Icon": {
            "BackgroundColor": "#FFFFFF"
        },
        "Toolbox Menu Label": {
            "FontColor": "#DADADA",
            "FontSize": "14px"
        },
        "Toolbox Menu Selected Label": {
            "FontColor": "#FFFFFF"
        },
        "Selected Tag": {
            "BackgroundColor": "#5B80A5"
        },
        "Toolbox": {
            "BackgroundColor": "#252526"
        },
        "Block Category Title": {
            "FontSize": "18px",
            "FontColor": "#DADADA"
        },
        "Block Category On Drop Hover": {
            "BackgroundColor": "#6CB097"
        },
        "Block Category On Drop Placeholder": {
            "BackgroundColor": "green"
        },
        "Block Delete Button Container": {
            "BackgroundColor": "#094771"
        },
        "Block Delete Button X": {
            "BackgroundColor": "#C4C4C4"
        },
        "Scrollbar": {
            "Width": "10px",
            "Height": "10px"
        },
        "Scrollbar Thumb": {
            "BackgroundColor": "#424242",
            "BorderRadius": "25px"
        },
        "Scrollbar Thumb On Hover": {
            "BackgroundColor": "#525252"
        },
        "Scrollbar Track": {
            "BackgroundColor": "transparent",
            "BorderWidth": "0px",
            "BorderColor": "#c2c2c2"
        }
    },
    "Undo Redo Toolbar": {
        "Undo Button": {
            "BackgroundColor": "#252526",
            "FontColor": "#C4C4C4",
            "FontSize": "14px"
        },
        "Undo Button On Hover": {
            "BackgroundColor": "#333333",
            "FontColor": "#ffffff",
            "FontSize": "14px"
        },
        "Undo Icon": {
            "BackgroundColor": "#75BEFF"
        },
        "Undo Number Notification": {
            "BackgroundColor": "#FA3E3E"
        },
        "Separator": {
            "BackgroundColor": "#333333",
            "Width": "1px"
        },
        "Close Button": {
            "BackgroundColor": "#094771"
        },
        "Close Button X": {
            "BackgroundColor": "#F2F2F2"
        },
        "Close Button On Hover": {
            "BackgroundColor": "#0B598E"
        },
        "Close Button X On Hover": {
            "BackgroundColor": "#FFFFFF"
        }
    },
    "Context Menu": {
        "Option Container": {
            "BackgroundColor": "#ffffff",
            "BorderWidth": "0px",
            "BorderColor": "transparent",
            "BorderRadius": "5px",
            "PaddingLeft": "0px",
            "PaddingRight": "0px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option": {
            "BackgroundColor": "transparent",
            "PaddingLeft": "20px",
            "PaddingRight": "20px",
            "PaddingTop": "5px",
            "PaddingBottom": "5px"
        },
        "Option On Hover": {
            "BackgroundColor": "#5B80A5"
        },
        "Option Text": {
            "FontColor": "#2C2C2C"
        },
        "Option Text On Hover": {
            "FontColor": "#ffffff"
        },
        "Shortcut text": {
            "FontColor": "#6C6C6C"
        },
        "Shortcut text On Hover": {
            "FontColor": "#ffffff"
        },
        "Inner Option Arrow": {
            "BackgroundColor": "#6C6C6C"
        },
        "Inner Option Arrow On Hover": {
            "BackgroundColor": "#ffffff"
        },
        "Separator": {
            "BackgroundColor": "#C2C2C2"
        }
    },
    "Source Text View Colors": {
        "(": "#ffffff",
        ")": "#ffffff",
        "UMINUS": "#DCB962",
        "UPLUS" : "#DCB962",
        "PLUS_PLUS" : "#DCB962",
        "SUB_SUB" : "#DCB962",
        "SUB": "#DCB962",
        "PLUS": "#DCB962",
        "MULT": "#DCB962",
        "DIV": "#DCB962",
        "EXP" : "#DCB962",
        "MODULO": "#DCB962",
        "GREATER": "#DCB962",
        "LESS": "#DCB962",
        "EQUAL_TO": "#DCB962",
        "EQUAL_VALUE_TYPE": "#DCB962",
        "NOT_EQUAL_TO": "#DCB962",
        "NOT_EQUAL_VALUE_TYPE": "#DCB962",
        "GREATER_EQUAL": "#DCB962",
        "LESS_EQUAL": "#DCB962",
        "AND": "#DCB962",
        "OR": "#DCB962",
        "NOT": "#DCB962",
        "IDENT": "#ffffff",
        "INT_CONST": "#44C9B0",
        "FLOAT_CONST": "#44C9B0",
        "CHAR_CONST": "#D15036",
        "STRING_CONST": "#D15036",
        "BOOL_CONST_": "#ffffff",
        "true": "#C57991",
        "false": "#C57991",
        "break": "#C57991",
        "continue": "#C57991",
        "return": "#C57991",
        "EQUALS": "#DCB962",
        "FUNCTION": "#C57991",
        "OF": "#C57991",
        "{": "#ffffff",
        "}": "#ffffff",
        "CALL": "#C57991",
        "WITH": "#C57991",
        "IF": "#C57991",
        "ELSE": "#C57991",
        "WHILE": "#C57991",
        "FOR": "#C57991",
        ";": "#ffffff",
        ",": "#ffffff",
        "stmt": "#ffffff",
        "def": "#ffffff",
        "expr": "#ffffff",
        "arith_expr": "#ffffff",
        "logical_expr": "#ffffff",
        "primary_expr": "#ffffff",
        "arith_op": "#ffffff",
        "rel_op": "#ffffff",
        "logical_binary_op": "#ffffff",
        "ARRAY": "#C57991",
        "IN ARRAY": "#C57991",
        "IN STRING": "#C57991",
        "append": "#ffffff",
        "array_method": "#ffffff",
        "get": "#ffffff",
        "get_character": "#ffffff",
        "get_size": "#ffffff",
        "get_substring": "#ffffff",
        "insert": "#ffffff",
        "push_back": "#ffffff",
        "set": "#ffffff",
        "string_method": "#ffffff",
    },
    "Pretty Print": {
        "stmts":                { "NewLine Between Blocks": false },
        "defs":                 { "NewLine Between Blocks": true },
        "if_stmt":              [ "if","(", "condition_expr", ")", "$$_newline", "$$_tab", "if_part"],
        "if_else_stmt":         [ 
                                    "if", "(", "condition_expr", ")", "$$_newline", "$$_tab" ,"{", "if_part", "}",
                                    "$$_newline", "else", "$$_newline", "$$_tab", "else_part"
                                ],
        "while_stmt":           [ "while", "(", "condition_expr",")", "$$_newline", "$$_tab", "while_part" ],
        "for_stmt":             [ "for", "(", "initialization",";", "condition_expr",";", "step",")", "$$_newline", "$$_tab", "for_part" ],
        "named_func":           [ "function", "NAME", "(", "ident_list", ")", "$$_newline", "$$_tab", "stmts" ],
        "anonymous_func":       [ "function", "(", "ident_list", ")", "$$_newline", "$$_tab", "stmts" ],
        "ident_list":           { "NewLine Between Blocks": false },
        "expr_list":            { "NewLine Between Blocks": false },
        "element_list":         { "NewLine Between Blocks": false },
        "pair_element_list":    { "NewLine Between Blocks": false },
        "options":              { "NewLine Between Blocks": false},
    },
    "Source Text Pretty Print": {
        "stmts": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "defs": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_newline"],
            "Insert After Last Block": []
        },
        "element_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "pair_element_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "ident_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "expr_list": {
            "Insert When Empty": [],
            "Insert Before First Block": [],
            "Insert Between Blocks": ["$$_,"],
            "Insert After Last Block": []
        },
        "if_stmt":                      [   
                                            "if","(", "condition_expr", ")" ,"{","$$_newline", "$$_tab", "if_part", "$$_newline", "}"
                                        ],
        "if_else_stmt":                 [
                                            "if", "(", "condition_expr", ")", "{",
                                            "$$_newline", "$$_tab", "if_part", "$$_newline", "}", "$$_newline",
                                            "else", "{", "$$_newline", "$$_tab", "else_part", "$$_newline", "}", 
                                        ],
        "while_stmt":                   [ 
                                            "while", "(", "condition_expr", ")", "{",
                                            "$$_newline", "$$_tab", "while_part", "$$_newline", "}",
                                        ],
        "for_stmt":                     [
                                            "for", "(", "initialization_expr", ";", "condition_expr", ";", 
                                            "step_expr", ")", "{", "$$_newline", "$$_tab", "for_part", "$$_newline", "}"
                                        ],
        "named_func":                   [
                                            "function", "name", "(", "ident_list", ")", "{",
                                            "$$_newline", "$$_tab", "stmts", "$$_newline", "}"
                                        ],
        "anonymous_func":               [
                                            "function", "(", "ident_list", ")", "{",
                                            "$$_newline", "$$_tab", "stmts", "$$_newline", "}"
                                        ],
        "rel_expr":                     [ "$$_(", "expr", "rel_op", "expr", "$$_)" ],
        "function_call":                [ "function name", "(", "expr_list", ")" ],
        "binary_arith_expr":            [ "$$_(", "expr", "arith_op", "expr", "$$_)" ],
        "binary_logical_expr":          [ "$$_(", "expr", "logical_binary_op", "expr", "$$_)" ]
    }
};